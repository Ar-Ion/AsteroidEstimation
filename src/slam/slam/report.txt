TensorFlow 2.0 Upgrade Script
-----------------------------
Converted 2071 files
Detected 1382 issues that require attention
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
File: pyslam_legacy/test/thirdparty/test_hardnet_dense.py
--------------------------------------------------------------------------------
pyslam_legacy/test/thirdparty/test_hardnet_dense.py:133:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/test/thirdparty/test_contextdesc.py
--------------------------------------------------------------------------------
pyslam_legacy/test/thirdparty/test_contextdesc.py:48:8: ERROR: Using member tf.app.flags.FLAGS in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/test/thirdparty/test_contextdesc.py:50:0: ERROR: Using member tf.app.flags.DEFINE_string in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/test/thirdparty/test_contextdesc.py:52:0: ERROR: Using member tf.app.flags.DEFINE_string in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/test/thirdparty/test_contextdesc.py:54:0: ERROR: Using member tf.app.flags.DEFINE_string in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/test/thirdparty/test_contextdesc.py:56:0: ERROR: Using member tf.app.flags.DEFINE_string in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/test/thirdparty/test_contextdesc.py:58:0: ERROR: Using member tf.app.flags.DEFINE_integer in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/test/thirdparty/test_contextdesc.py:61:0: ERROR: Using member tf.app.flags.DEFINE_string in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/test/thirdparty/test_contextdesc.py:63:0: ERROR: Using member tf.app.flags.DEFINE_boolean in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/test/thirdparty/test_contextdesc.py:66:0: ERROR: Using member tf.app.flags.DEFINE_boolean in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/test/thirdparty/test_contextdesc.py:68:0: ERROR: Using member tf.app.flags.DEFINE_boolean in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/test/thirdparty/test_geodesc.py
--------------------------------------------------------------------------------
pyslam_legacy/test/thirdparty/test_geodesc.py:60:8: ERROR: Using member tf.app.flags.FLAGS in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/test/thirdparty/test_geodesc.py:62:0: ERROR: Using member tf.app.flags.DEFINE_string in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/test/thirdparty/test_geodesc.py:64:0: ERROR: Using member tf.app.flags.DEFINE_integer in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/test/thirdparty/test_geodesc.py:66:0: ERROR: Using member tf.app.flags.DEFINE_integer in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/test/thirdparty/test_geodesc.py:68:0: ERROR: Using member tf.app.flags.DEFINE_string in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/test/thirdparty/test_geodesc.py:70:0: ERROR: Using member tf.app.flags.DEFINE_string in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/test/thirdparty/test_geodesc.py:72:0: ERROR: Using member tf.app.flags.DEFINE_boolean in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/test/thirdparty/test_geodesc.py:75:0: ERROR: Using member tf.app.flags.DEFINE_boolean in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/test/thirdparty/test_geodesc.py:77:0: ERROR: Using member tf.app.flags.DEFINE_boolean in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/test/thirdparty/test_geodesc.py:79:0: ERROR: Using member tf.app.flags.DEFINE_boolean in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/test/thirdparty/test_keynet.py
--------------------------------------------------------------------------------
pyslam_legacy/test/thirdparty/test_keynet.py:324:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/test/thirdparty/test_keynet.py:327:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/g2opy/python/examples/gicp_demo.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/g2opy/python/examples/gicp_demo.py:81:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/g2opy/python/examples/simple_optimize.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/g2opy/python/examples/simple_optimize.py:34:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/l2net/convert_l2net_weights_matconv_pytorch.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/l2net/convert_l2net_weights_matconv_pytorch.py:68:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/contextdesc/evaluations.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/contextdesc/evaluations.py:153:4: ERROR: Using member tf.flags.mark_flags_as_required in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/contextdesc/hseq_eval.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/contextdesc/hseq_eval.py:122:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/contextdesc/hseq_eval.py:175:4: ERROR: Using member tf.flags.mark_flags_as_required in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/contextdesc/models/cnn_wrapper/network.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/contextdesc/models/cnn_wrapper/network.py:132:30: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/r2d2/train.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/r2d2/train.py:136:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/r2d2/datasets/pair_dataset.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/r2d2/datasets/pair_dataset.py:77:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/lfnet/train_lfnet.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/lfnet/train_lfnet.py:692:14: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

pyslam_legacy/thirdparty/lfnet/train_lfnet.py:693:20: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

pyslam_legacy/thirdparty/lfnet/train_lfnet.py:917:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/lfnet/train_lfnet.py:943:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/lfnet/common/tf_layer_utils.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/lfnet/common/tf_layer_utils.py:38:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/lfnet/common/tf_layer_utils.py:391:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/lfnet/common/tf_layer_utils.py:392:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/lfnet/common/tf_layer_utils.py:464:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/lfnet/common/tf_layer_utils.py:465:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/disk/train.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/disk/train.py:215:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/geodesc/examples/extract_features_of_hpatches.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/geodesc/examples/extract_features_of_hpatches.py:69:4: ERROR: Using member tf.flags.mark_flags_as_required in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_text/train_utils.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_text/train_utils.py:96:6: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_text/inputs.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_text/inputs.py:233:10: ERROR: Using member tf.contrib.training.batch_sequences_with_states in deprecated module tf.contrib. tf.contrib.training.batch_sequences_with_states cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_text/layers.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_text/layers.py:79:15: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_text/layers.py:185:16: WARNING: tf.nn.sampled_softmax_loss requires manual check. `partition_strategy` has been removed from tf.nn.sampled_softmax_loss.  The 'div' strategy will be used by default.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_text/graphs.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_text/graphs.py:269:12: ERROR: Using member tf.contrib.metrics.streaming_accuracy in deprecated module tf.contrib. tf.contrib.metrics.streaming_accuracy cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_text/graphs.py:499:12: ERROR: Using member tf.contrib.metrics.streaming_accuracy in deprecated module tf.contrib. tf.contrib.metrics.streaming_accuracy cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/train.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/train.py:26:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/train.py:27:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/train.py:28:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/train.py:29:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/train.py:31:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/train.py:32:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/train.py:33:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/train.py:34:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/train.py:37:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/train.py:38:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/train.py:39:0: ERROR: Using member tf.flags.DEFINE_bool in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/train.py:40:0: ERROR: Using member tf.flags.DEFINE_bool in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/train.py:41:0: ERROR: Using member tf.flags.DEFINE_bool in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/train.py:43:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/train.py:67:2: ERROR: Using member tf.contrib.tfprof.model_analyzer.print_model_analysis in deprecated module tf.contrib. tf.contrib.tfprof.model_analyzer.print_model_analysis cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/train.py:107:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/train.py:110:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/model.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/model.py:26:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/model.py:201:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/sprites_gen.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/sprites_gen.py:28:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/sprites_gen.py:29:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/sprites_gen.py:36:24: ERROR: Using member tf.flags.FLAGS.data_filepattern in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/sprites_gen.py:66:6: ERROR: Using member tf.flags.FLAGS.out_file.replace in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/sprites_gen.py:68:6: ERROR: Using member tf.flags.FLAGS.out_file.replace in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/example_gen.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/example_gen.py:25:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/example_gen.py:66:39: ERROR: Using member tf.flags.FLAGS.out_file in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/example_gen.py:67:40: ERROR: Using member tf.flags.FLAGS.out_file  in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/eval.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/eval.py:29:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/eval.py:30:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/eval.py:31:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/eval.py:34:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/eval.py:35:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/eval.py:36:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/eval.py:37:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/eval.py:40:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/eval.py:41:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/eval.py:43:0: ERROR: Using member tf.flags.DEFINE_bool in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/eval.py:44:0: ERROR: Using member tf.flags.DEFINE_bool in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/eval.py:45:0: ERROR: Using member tf.flags.DEFINE_bool in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/eval.py:47:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/export_inference_graph.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/export_inference_graph.py:111:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/model_hparams.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/model_hparams.py:37:12: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/model_lib_v2.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/model_lib_v2.py:498:10: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/exporter.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/exporter.py:30:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/exporter.py:64:18: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/exporter.py:114:6: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/exporter.py:330:6: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/exporter.py:346:6: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/exporter.py:527:6: ERROR: Using member (
      tf.contrib.tfprof.model_analyzer.TRAINABLE_VARS_PARAMS_STAT_OPTIONS) in deprecated module tf.contrib. (
      tf.contrib.tfprof.model_analyzer.TRAINABLE_VARS_PARAMS_STAT_OPTIONS) cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/exporter.py:528:24: ERROR: Using member tf.contrib.tfprof.model_analyzer.FLOAT_OPS_OPTIONS in deprecated module tf.contrib. tf.contrib.tfprof.model_analyzer.FLOAT_OPS_OPTIONS cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/exporter.py:537:2: ERROR: Using member tf.contrib.tfprof.model_analyzer.print_model_analysis in deprecated module tf.contrib. tf.contrib.tfprof.model_analyzer.print_model_analysis cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/exporter.py:541:2: ERROR: Using member tf.contrib.tfprof.model_analyzer.print_model_analysis in deprecated module tf.contrib. tf.contrib.tfprof.model_analyzer.print_model_analysis cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/model_tpu_main.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/model_tpu_main.py:32:0: ERROR: Using member tf.flags.DEFINE_bool in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/model_tpu_main.py:80:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/inputs_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/inputs_test.py:34:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/inputs_test.py:64:13: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/eval_util.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/eval_util.py:40:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/eval_util.py:327:7: ERROR: Using member tf.contrib.slim.queues.QueueRunners in deprecated module tf.contrib. tf.contrib.slim.queues.QueueRunners cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/model_lib.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/model_lib.py:397:28: ERROR: Using member tf.contrib.framework.filter_variables in deprecated module tf.contrib. tf.contrib.framework.filter_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/model_lib.py:412:17: ERROR: Using member tf.contrib.layers.optimize_loss in deprecated module tf.contrib. tf.contrib.layers.optimize_loss cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/model_lib.py:865:6: ERROR: Using member tf.contrib.learn.utils.saved_model_export_utils.make_export_strategy in deprecated module tf.contrib. tf.contrib.learn.utils.saved_model_export_utils.make_export_strategy cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/model_lib.py:869:9: ERROR: Using member tf.contrib.learn.Experiment in deprecated module tf.contrib. tf.contrib.learn.Experiment cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/exporter_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/exporter_test.py:39:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/exporter_test.py:132:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/exporter_test.py:1083:15: ERROR: Using member tf.contrib.slim.conv2d in deprecated module tf.contrib. tf.contrib.slim.conv2d cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/export_tflite_ssd_graph_lib_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/export_tflite_ssd_graph_lib_test.py:48:15: ERROR: Using member tf.contrib.slim.conv2d in deprecated module tf.contrib. tf.contrib.slim.conv2d cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/export_tflite_ssd_graph_lib_test.py:105:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/model_lib_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/model_lib_test.py:86:13: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_kitti_tf_record_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_kitti_tf_record_test.py:44:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_pet_tf_record.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_pet_tf_record.py:205:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_oid_tf_record.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_oid_tf_record.py:49:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_oid_tf_record.py:51:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_oid_tf_record.py:54:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_oid_tf_record.py:56:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_oid_tf_record.py:57:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_oid_tf_record.py:61:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_oid_tf_record.py:63:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_coco_tf_record.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_coco_tf_record.py:51:0: ERROR: Using member tf.flags.DEFINE_boolean in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_coco_tf_record.py:54:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_coco_tf_record.py:56:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_coco_tf_record.py:58:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_coco_tf_record.py:60:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_coco_tf_record.py:62:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_coco_tf_record.py:64:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_coco_tf_record.py:66:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_coco_tf_record.py:155:6: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_pascal_tf_record_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_pascal_tf_record_test.py:44:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_coco_tf_record_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_coco_tf_record_test.py:46:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_coco_tf_record_test.py:119:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_coco_tf_record_test.py:200:6: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/tpu_exporters/export_saved_model_tpu_lib.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/tpu_exporters/export_saved_model_tpu_lib.py:124:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_edgetpu_feature_extractor.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_edgetpu_feature_extractor.py:22:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_edgetpu_feature_extractor_testbase.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_edgetpu_feature_extractor_testbase.py:25:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/legacy/train.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/legacy/train.py:121:11: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/legacy/eval.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/legacy/eval.py:116:11: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/data_decoders/tf_example_decoder.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/data_decoders/tf_example_decoder.py:32:23: ERROR: Using member tf.contrib.slim.tfexample_decoder in deprecated module tf.contrib. tf.contrib.slim.tfexample_decoder cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/data_decoders/tf_example_decoder.py:72:15: ERROR: Using member tf.contrib.lookup in deprecated module tf.contrib. tf.contrib.lookup cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/data_decoders/tf_example_decoder.py:73:25: ERROR: Using member tf.contrib.lookup.HashTable in deprecated module tf.contrib. tf.contrib.lookup.HashTable cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/data_decoders/tf_example_decoder_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/data_decoders/tf_example_decoder_test.py:27:23: ERROR: Using member tf.contrib.slim.tfexample_decoder in deprecated module tf.contrib. tf.contrib.slim.tfexample_decoder cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/prefetcher_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/prefetcher_test.py:26:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/batcher_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/batcher_test.py:28:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/preprocessor.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/preprocessor.py:2804:14: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/preprocessor.py:2862:14: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/preprocessor.py:2948:20: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/preprocessor.py:3105:40: WARNING: tf.cond called with strict argument, requires manual check: tf.cond no longer takes 'strict' argument, it behaves as if was set to True.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/preprocessor.py:3111:12: WARNING: tf.cond called with strict argument, requires manual check: tf.cond no longer takes 'strict' argument, it behaves as if was set to True.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/losses.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/losses.py:41:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/rfcn_box_predictor.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/rfcn_box_predictor.py:21:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/convolutional_box_predictor.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/convolutional_box_predictor.py:23:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/mask_rcnn_box_predictor.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/mask_rcnn_box_predictor.py:21:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/heads/mask_head.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/heads/mask_head.py:147:19: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/heads/keras_mask_head.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/heads/keras_mask_head.py:340:17: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/heads/keypoint_head.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/heads/keypoint_head.py:103:22: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/inference/infer_detections.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/inference/infer_detections.py:41:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/inference/infer_detections.py:43:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/inference/infer_detections.py:45:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/inference/infer_detections.py:47:0: ERROR: Using member tf.flags.DEFINE_boolean in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/inference/infer_detections.py:53:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/inference/detection_inference_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/inference/detection_inference_test.py:36:2: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/optimizer_builder.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/optimizer_builder.py:74:16: WARNING: tf.contrib.opt.MovingAverageOptimizer requires manual check. (Manual edit required) `tf.contrib.opt.MovingAverageOptimizer` has been migrated to `tfa.optimizers.MovingAverage` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/optimizer_builder.py:74:16: ERROR: Using member tf.contrib.opt.MovingAverageOptimizer in deprecated module tf.contrib. tf.contrib.opt.MovingAverageOptimizer cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/optimizer_builder_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/optimizer_builder_test.py:176:30: WARNING: tf.contrib.opt.MovingAverageOptimizer requires manual check. (Manual edit required) `tf.contrib.opt.MovingAverageOptimizer` has been migrated to `tfa.optimizers.MovingAverage` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/optimizer_builder_test.py:176:30: ERROR: Using member tf.contrib.opt.MovingAverageOptimizer in deprecated module tf.contrib. tf.contrib.opt.MovingAverageOptimizer cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/optimizer_builder_test.py:194:30: WARNING: tf.contrib.opt.MovingAverageOptimizer requires manual check. (Manual edit required) `tf.contrib.opt.MovingAverageOptimizer` has been migrated to `tfa.optimizers.MovingAverage` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/optimizer_builder_test.py:194:30: ERROR: Using member tf.contrib.opt.MovingAverageOptimizer in deprecated module tf.contrib. tf.contrib.opt.MovingAverageOptimizer cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/dataset_builder.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/dataset_builder.py:43:13: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/dataset_builder.py:158:10: ERROR: Using member tf.contrib.data.batch_and_drop_remainder in deprecated module tf.contrib. tf.contrib.data.batch_and_drop_remainder cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/input_reader_builder.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/input_reader_builder.py:31:18: ERROR: Using member tf.contrib.slim.parallel_reader in deprecated module tf.contrib. tf.contrib.slim.parallel_reader cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/dataset_builder_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/dataset_builder_test.py:79:18: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/dataset_builder_test.py:110:18: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/dataset_builder_test.py:137:18: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/dataset_builder_test.py:175:18: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/dataset_builder_test.py:212:18: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/dataset_builder_test.py:234:18: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/dataset_builder_test.py:270:11: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/dataset_builder_test.py:275:12: ERROR: Using member tf.contrib.lookup.HashTable in deprecated module tf.contrib. tf.contrib.lookup.HashTable cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/dataset_builder_test.py:276:20: ERROR: Using member tf.contrib.lookup.KeyValueTensorInitializer in deprecated module tf.contrib. tf.contrib.lookup.KeyValueTensorInitializer cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/dataset_builder_test.py:280:11: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/hyperparams_builder_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/hyperparams_builder_test.py:27:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/hyperparams_builder_test.py:578:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/hyperparams_builder.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/hyperparams_builder.py:23:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/hyperparams_builder.py:219:20: WARNING: tf.contrib.layers.group_norm requires manual check. (Manual edit required) `tf.contrib.layers.group_norm` has been migrated to `tfa.layers.GroupNormalization` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/hyperparams_builder.py:219:20: ERROR: Using member tf.contrib.layers.group_norm in deprecated module tf.contrib. tf.contrib.layers.group_norm cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/graph_rewriter_builder_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/graph_rewriter_builder_test.py:26:8: ERROR: Using member tf.contrib.quantize in deprecated module tf.contrib. tf.contrib.quantize cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/graph_rewriter_builder_test.py:28:29: ERROR: Using member tf.contrib.layers in deprecated module tf.contrib. tf.contrib.layers cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/graph_rewriter_builder_test.py:43:27: ERROR: Using member tf.contrib.quantize in deprecated module tf.contrib. tf.contrib.quantize cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/graph_rewriter_builder_test.py:45:29: ERROR: Using member tf.contrib.layers in deprecated module tf.contrib. tf.contrib.layers cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/graph_rewriter_builder.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/graph_rewriter_builder.py:35:6: ERROR: Using member tf.contrib.quantize.experimental_create_training_graph in deprecated module tf.contrib. tf.contrib.quantize.experimental_create_training_graph cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/graph_rewriter_builder.py:40:6: ERROR: Using member tf.contrib.quantize.experimental_create_eval_graph in deprecated module tf.contrib. tf.contrib.quantize.experimental_create_eval_graph cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/graph_rewriter_builder.py:44:4: ERROR: Using member tf.contrib.layers.summarize_collection in deprecated module tf.contrib. tf.contrib.layers.summarize_collection cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/meta_architectures/faster_rcnn_meta_arch_test_lib.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/meta_architectures/faster_rcnn_meta_arch_test_lib.py:1944:27: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/meta_architectures/faster_rcnn_meta_arch_test_lib.py:1992:27: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/meta_architectures/ssd_meta_arch_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/meta_architectures/ssd_meta_arch_test.py:661:25: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/meta_architectures/ssd_meta_arch_test.py:693:27: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/variables_helper_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/variables_helper_test.py:147:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/variables_helper_test.py:156:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/variables_helper_test.py:165:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/variables_helper_test.py:183:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/variables_helper_test.py:201:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/variables_helper_test.py:229:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/variables_helper.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/variables_helper.py:30:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/autoaugment_utils.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/autoaugment_utils.py:318:10: WARNING: tf.contrib.image.rotate requires manual check. (Manual edit required) `tf.contrib.image.rotate` has been migrated to `tfa.image.rotate` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/autoaugment_utils.py:318:10: ERROR: Using member tf.contrib.image.rotate in deprecated module tf.contrib. tf.contrib.image.rotate cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/autoaugment_utils.py:873:10: ERROR: Using member tf.contrib.image.translate in deprecated module tf.contrib. tf.contrib.image.translate cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/autoaugment_utils.py:879:10: ERROR: Using member tf.contrib.image.translate in deprecated module tf.contrib. tf.contrib.image.translate cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/autoaugment_utils.py:964:10: WARNING: tf.contrib.image.transform requires manual check. (Manual edit required) `tf.contrib.image.transform` has been migrated to `tfa.image.transform` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/autoaugment_utils.py:964:10: ERROR: Using member tf.contrib.image.transform in deprecated module tf.contrib. tf.contrib.image.transform cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/autoaugment_utils.py:975:10: WARNING: tf.contrib.image.transform requires manual check. (Manual edit required) `tf.contrib.image.transform` has been migrated to `tfa.image.transform` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/autoaugment_utils.py:975:10: ERROR: Using member tf.contrib.image.transform in deprecated module tf.contrib. tf.contrib.image.transform cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/autoaugment_utils.py:1631:25: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/ops_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/ops_test.py:30:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/ops_test.py:763:17: ERROR: Using member tf.contrib.framework.get_variables in deprecated module tf.contrib. tf.contrib.framework.get_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/visualization_utils_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/visualization_utils_test.py:189:10: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/visualization_utils_test.py:238:10: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/ops.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/ops.py:591:18: ERROR: Using member tf.contrib.framework.model_variable in deprecated module tf.contrib. tf.contrib.framework.model_variable cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/visualization_utils.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/visualization_utils.py:110:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/visualization_utils.py:124:2: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/config_util_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/config_util_test.py:212:14: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/config_util_test.py:305:14: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/config_util_test.py:327:14: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/config_util_test.py:342:14: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/config_util_test.py:359:14: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/config_util_test.py:368:14: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/config_util_test.py:378:14: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/config_util_test.py:385:14: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/config_util_test.py:404:14: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/config_util_test.py:427:14: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/policy.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/policy.py:56:11: WARNING: Using member tf.contrib.rnn.OutputProjectionWrapper in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/policy.py:56:11: ERROR: Using member tf.contrib.rnn.OutputProjectionWrapper in deprecated module tf.contrib. tf.contrib.rnn.OutputProjectionWrapper cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/policy.py:71:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/policy.py:76:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/policy.py:90:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/policy.py:96:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/policy.py:205:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/policy.py:357:11: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/policy.py:358:11: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/policy.py:360:11: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/policy.py:361:11: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/policy.py:363:11: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/policy.py:364:11: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/policy.py:366:13: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/trainer.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/trainer.py:43:8: ERROR: Using member tf.flags in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/trainer.py:375:27: ERROR: Using member tf.contrib.framework.get_or_create_global_step in deprecated module tf.contrib. tf.contrib.framework.get_or_create_global_step cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/trainer.py:397:25: ERROR: Using member tf.contrib.framework.get_or_create_global_step in deprecated module tf.contrib. tf.contrib.framework.get_or_create_global_step cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/trainer.py:463:6: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/controller.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/controller.py:29:8: ERROR: Using member tf.flags in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/objective.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/objective.py:115:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/baseline.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/baseline.py:151:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/baseline.py:155:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/baseline.py:192:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/swivel/swivel.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/swivel/swivel.py:143:25: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/swivel/swivel.py:148:25: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/swivel/swivel.py:161:20: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/swivel/swivel.py:162:20: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/swivel/swivel.py:204:23: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/swivel/swivel.py:277:12: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/swivel/swivel.py:281:12: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/swivel/swivel.py:333:12: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/swivel/swivel.py:482:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/struct2depth/util.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/struct2depth/util.py:178:15: ERROR: Using member tf.contrib.framework.list_variables in deprecated module tf.contrib. tf.contrib.framework.list_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/struct2depth/util.py:218:19: ERROR: Using member tf.contrib.framework.list_variables in deprecated module tf.contrib. tf.contrib.framework.list_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/struct2depth/train.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/struct2depth/train.py:250:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/struct2depth/model.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/struct2depth/model.py:33:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/struct2depth/model.py:205:43: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
pyslam_legacy/thirdparty/tensorflow_models/research/struct2depth/model.py:446:27: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/struct2depth/nets.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/struct2depth/nets.py:25:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/struct2depth/nets.py:252:15: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
pyslam_legacy/thirdparty/tensorflow_models/research/struct2depth/nets.py:265:15: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
pyslam_legacy/thirdparty/tensorflow_models/research/struct2depth/nets.py:278:15: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
pyslam_legacy/thirdparty/tensorflow_models/research/struct2depth/nets.py:491:15: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/struct2depth/nets.py:524:11: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/struct2depth/inference.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/struct2depth/inference.py:225:14: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/struct2depth/optimize.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/struct2depth/optimize.py:369:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/single_task/pg_train.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/single_task/pg_train.py:125:9: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/single_task/pg_train.py:215:38: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/single_task/pg_train.py:379:6: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/single_task/pg_agent.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/single_task/pg_agent.py:75:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/single_task/pg_agent.py:243:23: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/single_task/tune.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/single_task/tune.py:89:9: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/vocabulary_expansion.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/vocabulary_expansion.py:50:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/vocabulary_expansion.py:52:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/vocabulary_expansion.py:56:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/vocabulary_expansion.py:61:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/vocabulary_expansion.py:64:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/vocabulary_expansion.py:198:2: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/train.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/train.py:27:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/train.py:29:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/train.py:32:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/train.py:79:19: ERROR: Using member tf.contrib.slim.learning.create_train_op in deprecated module tf.contrib. tf.contrib.slim.learning.create_train_op cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/train.py:87:2: ERROR: Using member tf.contrib.slim.learning.train in deprecated module tf.contrib. tf.contrib.slim.learning.train cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/skip_thoughts_model.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/skip_thoughts_model.py:182:17: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/skip_thoughts_model.py:187:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/skip_thoughts_model.py:188:23: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/skip_thoughts_model.py:189:24: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/skip_thoughts_model.py:298:15: ERROR: Using member tf.contrib.layers.fully_connected in deprecated module tf.contrib. tf.contrib.layers.fully_connected cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/skip_thoughts_model.py:360:23: ERROR: Using member tf.contrib.framework.create_global_step in deprecated module tf.contrib. tf.contrib.framework.create_global_step cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/evaluate.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/evaluate.py:46:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/evaluate.py:48:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/evaluate.py:52:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/evaluate.py:54:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/evaluate.py:58:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/evaluate.py:63:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/evaluate.py:66:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/evaluate.py:70:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/evaluate.py:73:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/track_perplexity.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/track_perplexity.py:38:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/track_perplexity.py:40:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/track_perplexity.py:42:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/track_perplexity.py:44:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/track_perplexity.py:46:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/track_perplexity.py:48:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/track_perplexity.py:51:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/ops/gru_cell.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/ops/gru_cell.py:24:14: WARNING: tf.contrib.layers.layer_norm requires manual check. (Manual edit required) `tf.contrib.layers.layer_norm` has been deprecated, and its implementation has been integrated with `tf.keras.layers.LayerNormalization` in TensorFlow 2.0. Note that, the default value of `epsilon` is changed to `1e-3` in the new API from `1e-12`, and this may introduce numerical differences. Please check the new API and use that instead.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/ops/gru_cell.py:24:14: ERROR: Using member tf.contrib.layers.layer_norm in deprecated module tf.contrib. tf.contrib.layers.layer_norm cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/ops/gru_cell.py:117:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/ops/gru_cell.py:120:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/ops/gru_cell.py:127:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/ops/gru_cell.py:129:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/data/preprocess_dataset.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/data/preprocess_dataset.py:47:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/data/preprocess_dataset.py:49:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/data/preprocess_dataset.py:55:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/data/preprocess_dataset.py:62:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/data/preprocess_dataset.py:64:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/data/preprocess_dataset.py:67:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/data/preprocess_dataset.py:70:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/data/preprocess_dataset.py:73:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/data/preprocess_dataset.py:76:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/data/preprocess_dataset.py:79:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/data/preprocess_dataset.py:83:0: ERROR: Using member tf.flags.DEFINE_boolean in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/marco/Automated_Marco.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/marco/Automated_Marco.py:56:15: ERROR: Using member tf.contrib.predictor.from_saved_model in deprecated module tf.contrib. tf.contrib.predictor.from_saved_model cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/inception_train.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/inception_train.py:186:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/inception_train.py:357:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/image_processing.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/image_processing.py:298:12: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/inception_distributed_train.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/inception_distributed_train.py:312:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/slim/variables.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/slim/variables.py:242:13: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/slim/variables.py:287:11: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/slim/losses.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/slim/losses.py:166:20: ERROR: Using member tf.contrib.nn.deprecated_flipped_softmax_cross_entropy_with_logits in deprecated module tf.contrib. tf.contrib.nn.deprecated_flipped_softmax_cross_entropy_with_logits cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/slim/download_and_convert_data.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/slim/download_and_convert_data.py:62:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/slim/download_and_convert_data.py:67:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/mobilenet/mobilenet_v2.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/mobilenet/mobilenet_v2.py:91:25: WARNING: contrib_layers.group_norm requires manual check. (Manual edit required) `contrib_layers.group_norm` has been migrated to `tfa.layers.GroupNormalization` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/mobilenet/mobilenet_v2.py:97:25: WARNING: contrib_layers.group_norm requires manual check. (Manual edit required) `contrib_layers.group_norm` has been migrated to `tfa.layers.GroupNormalization` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/mobilenet/mobilenet_v2.py:218:7: WARNING: contrib_layers.group_norm requires manual check. (Manual edit required) `contrib_layers.group_norm` has been migrated to `tfa.layers.GroupNormalization` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/slim/preprocessing/vgg_preprocessing.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/slim/preprocessing/vgg_preprocessing.py:280:18: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/slim/preprocessing/inception_preprocessing.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/slim/preprocessing/inception_preprocessing.py:301:14: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/slim/deployment/model_deploy.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/slim/deployment/model_deploy.py:264:19: WARNING: (Manual check required) upgrading optimizer.compute_gradients may require renaming or removing call arguments, but it was passed variable-length *args or **kwargs. The upgrade script cannot handle these automatically.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/sequence_layers.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/sequence_layers.py:312:11: ERROR: Using member tf.contrib.legacy_seq2seq.rnn_decoder in deprecated module tf.contrib. tf.contrib.legacy_seq2seq.rnn_decoder cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/sequence_layers.py:369:11: ERROR: Using member tf.contrib.legacy_seq2seq.attention_decoder in deprecated module tf.contrib. tf.contrib.legacy_seq2seq.attention_decoder cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/model.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/model.py:87:17: ERROR: Using member tf.contrib.lookup.index_to_string_table_from_tensor in deprecated module tf.contrib. tf.contrib.lookup.index_to_string_table_from_tensor cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/model.py:470:13: ERROR: Using member tf.contrib.legacy_seq2seq.sequence_loss in deprecated module tf.contrib. tf.contrib.legacy_seq2seq.sequence_loss cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/metrics.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/metrics.py:48:13: ERROR: Using member tf.contrib.metrics.streaming_mean in deprecated module tf.contrib. tf.contrib.metrics.streaming_mean cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/metrics.py:88:13: ERROR: Using member tf.contrib.metrics.streaming_mean in deprecated module tf.contrib. tf.contrib.metrics.streaming_mean cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/inception_preprocessing.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/inception_preprocessing.py:279:14: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/demo_inference_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/demo_inference_test.py:22:4: ERROR: Using member tf.flags.FLAGS.dataset_dir  in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/model_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/model_test.py:179:14: ERROR: Using member tf.contrib.layers.one_hot_encoding in deprecated module tf.contrib. tf.contrib.layers.one_hot_encoding cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/model_test.py:186:10: ERROR: Using member tf.contrib.layers.one_hot_encoding in deprecated module tf.contrib. tf.contrib.layers.one_hot_encoding cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/datasets/fsns_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/datasets/fsns_test.py:26:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/datasets/unittest_utils.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/datasets/unittest_utils.py:36:2: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/learning_unsupervised_learning/utils.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/learning_unsupervised_learning/utils.py:166:38: ERROR: name_scope call with neither name nor default_name cannot be converted properly.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/learning_unsupervised_learning/architectures/common.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/learning_unsupervised_learning/architectures/common.py:46:13: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/learning_unsupervised_learning/architectures/more_local_weight_update.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/learning_unsupervised_learning/architectures/more_local_weight_update.py:537:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/learning_unsupervised_learning/datasets/mnist.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/learning_unsupervised_learning/datasets/mnist.py:55:22: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/transformer/tf_utils.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/transformer/tf_utils.py:57:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/transformer/tf_utils.py:63:16: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/transformer/tf_utils.py:92:17: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/tcn/data_providers.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/data_providers.py:53:15: ERROR: Using member tf.contrib.slim.parallel_reader.get_data_files in deprecated module tf.contrib. tf.contrib.slim.parallel_reader.get_data_files cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/data_providers.py:67:12: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

pyslam_legacy/thirdparty/tensorflow_models/research/tcn/data_providers.py:135:18: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

pyslam_legacy/thirdparty/tensorflow_models/research/tcn/data_providers.py:369:13: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

pyslam_legacy/thirdparty/tensorflow_models/research/tcn/data_providers.py:503:12: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/tcn/train.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/train.py:27:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/train.py:35:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/tcn/model.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/model.py:391:16: ERROR: Using member tf.contrib.layers.spatial_softmax in deprecated module tf.contrib. tf.contrib.layers.spatial_softmax cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/tcn/generate_videos.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/generate_videos.py:63:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/generate_videos.py:71:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/generate_videos.py:164:2: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/tcn/labeled_eval.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/labeled_eval.py:33:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/labeled_eval.py:41:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/tcn/visualize_embeddings.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/visualize_embeddings.py:50:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/visualize_embeddings.py:58:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/visualize_embeddings.py:192:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/tcn/eval.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/eval.py:27:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/eval.py:35:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/tcn/alignment.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/alignment.py:28:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/alignment.py:36:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/tcn/preprocessing.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/preprocessing.py:278:10: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/preprocessing.py:522:10: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/tcn/dataset/webcam.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/dataset/webcam.py:66:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/dataset/webcam.py:67:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/dataset/webcam.py:70:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/dataset/webcam.py:74:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/dataset/webcam.py:76:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/dataset/webcam.py:78:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/dataset/webcam.py:80:0: ERROR: Using member tf.flags.DEFINE_boolean in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/dataset/webcam.py:83:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/dataset/webcam.py:85:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/dataset/webcam.py:87:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/dataset/webcam.py:88:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/dataset/webcam.py:89:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/tcn/dataset/videos_to_tfrecords.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/dataset/videos_to_tfrecords.py:216:2: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/tcn/estimators/mvtcn_estimator.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/estimators/mvtcn_estimator.py:113:11: WARNING: tf.contrib.losses.metric_learning.triplet_semihard_loss requires manual check. (Manual edit required) `tf.contrib.losses.metric_learning.triplet_semihard_loss` has been migrated to `tfa.losses.TripletSemiHardLoss` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/estimators/mvtcn_estimator.py:113:11: ERROR: Using member tf.contrib.losses.metric_learning.triplet_semihard_loss in deprecated module tf.contrib. tf.contrib.losses.metric_learning.triplet_semihard_loss cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/estimators/mvtcn_estimator.py:155:11: ERROR: Using member tf.contrib.losses.metric_learning.npairs_loss in deprecated module tf.contrib. tf.contrib.losses.metric_learning.npairs_loss cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/tcn/estimators/base_estimator.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/estimators/base_estimator.py:59:24: ERROR: Using member tf.contrib.framework.load_checkpoint in deprecated module tf.contrib. tf.contrib.framework.load_checkpoint cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/estimators/base_estimator.py:69:26: ERROR: Using member tf.contrib.framework.get_model_variables in deprecated module tf.contrib. tf.contrib.framework.get_model_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/tcn/estimators/base_estimator.py:106:20: ERROR: Using member tf.contrib.framework.assign_from_checkpoint_fn in deprecated module tf.contrib. tf.contrib.framework.assign_from_checkpoint_fn cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/example_main.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/example_main.py:242:12: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/example_main.py:244:19: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/example_main.py:251:16: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/example_main.py:272:20: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/example_main.py:293:16: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/example_main.py:315:20: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/example_main.py:337:21: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/example_main.py:359:19: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/example_main.py:382:22: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/example_main.py:407:15: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/bb_alpha_divergence_model.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/bb_alpha_divergence_model.py:36:6: ERROR: Using member tf.contrib.distributions in deprecated module tf.contrib. tf.contrib.distributions cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/multitask_gp.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/multitask_gp.py:30:6: ERROR: Using member tf.contrib.distributions in deprecated module tf.contrib. tf.contrib.distributions cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/multitask_gp.py:128:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/multitask_gp.py:134:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/multitask_gp.py:139:25: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/multitask_gp.py:149:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/multitask_gp.py:154:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/multitask_gp.py:161:17: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/multitask_gp.py:163:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/multitask_gp.py:165:28: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/multitask_gp.py:167:25: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/multitask_gp.py:169:29: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/multitask_gp.py:174:24: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/bf_variational_neural_bandit_model.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/bf_variational_neural_bandit_model.py:35:6: ERROR: Using member tf.contrib.distributions in deprecated module tf.contrib. tf.contrib.distributions cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/bf_variational_neural_bandit_model.py:36:6: ERROR: Using member tf.contrib.layers in deprecated module tf.contrib. tf.contrib.layers cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/neural_bandit_model.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/neural_bandit_model.py:55:9: ERROR: Using member tf.contrib.layers.fully_connected in deprecated module tf.contrib. tf.contrib.layers.fully_connected cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/neural_bandit_model.py:59:47: WARNING: tf.contrib.layers.layer_norm requires manual check. (Manual edit required) `tf.contrib.layers.layer_norm` has been deprecated, and its implementation has been integrated with `tf.keras.layers.LayerNormalization` in TensorFlow 2.0. Note that, the default value of `epsilon` is changed to `1e-3` in the new API from `1e-12`, and this may introduce numerical differences. Please check the new API and use that instead.
pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/neural_bandit_model.py:59:47: ERROR: Using member tf.contrib.layers.layer_norm in deprecated module tf.contrib. tf.contrib.layers.layer_norm cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/lm_1b/lm_1b_eval.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/lm_1b/lm_1b_eval.py:28:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lm_1b/lm_1b_eval.py:30:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lm_1b/lm_1b_eval.py:42:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lm_1b/lm_1b_eval.py:45:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lm_1b/lm_1b_eval.py:47:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lm_1b/lm_1b_eval.py:48:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lm_1b/lm_1b_eval.py:51:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lm_1b/lm_1b_eval.py:53:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lm_1b/lm_1b_eval.py:56:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lm_1b/lm_1b_eval.py:59:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lm_1b/lm_1b_eval.py:62:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lm_1b/lm_1b_eval.py:64:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lm_1b/lm_1b_eval.py:230:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/tensorflow_models/research/lm_1b/lm_1b_eval.py:247:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/tensorflow_models/research/lm_1b/lm_1b_eval.py:287:6: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/keypointnet/main.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/keypointnet/main.py:140:11: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

pyslam_legacy/thirdparty/tensorflow_models/research/keypointnet/main.py:649:12: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/keypointnet/utils.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/keypointnet/utils.py:130:18: ERROR: Using member tf.contrib.estimator.clip_gradients_by_norm in deprecated module tf.contrib. tf.contrib.estimator.clip_gradients_by_norm cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/seq2species/input.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/seq2species/input.py:94:28: ERROR: Using member tf.contrib.lookup.index_table_from_tensor in deprecated module tf.contrib. tf.contrib.lookup.index_table_from_tensor cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/seq2species/input.py:97:16: ERROR: Using member tf.contrib.lookup.index_table_from_tensor in deprecated module tf.contrib. tf.contrib.lookup.index_table_from_tensor cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/seq2species/input.py:320:15: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/seq2species/configuration.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/seq2species/configuration.py:46:12: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/seq2species/build_model.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/seq2species/build_model.py:183:11: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/seq2species/build_model.py:197:11: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/train.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/train.py:35:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/train.py:37:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/train.py:39:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/train.py:40:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/train.py:42:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/train.py:44:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/train.py:45:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/train.py:46:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/train.py:49:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/train.py:52:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/train.py:53:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/train.py:54:0: ERROR: Using member tf.flags.DEFINE_bool in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/train.py:228:23: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/model.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/model.py:27:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/model.py:65:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/model.py:68:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/model.py:70:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/model.py:73:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/model.py:76:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/model.py:78:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/model.py:80:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/model.py:82:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/model.py:86:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/model.py:89:17: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/memory.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/memory.py:48:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/memory.py:52:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/memory.py:56:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/memory.py:59:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/memory.py:64:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/memory.py:287:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/memory.py:295:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/ghmm_runners.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/ghmm_runners.py:235:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/smc.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/smc.py:72:20: ERROR: Using member tf.contrib.distributions.Categorical in deprecated module tf.contrib. tf.contrib.distributions.Categorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/smc.py:151:20: ERROR: Using member tf.contrib.distributions.RelaxedOneHotCategorical in deprecated module tf.contrib. tf.contrib.distributions.RelaxedOneHotCategorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/nested_utils_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/nested_utils_test.py:24:7: ERROR: Using member tf.contrib.framework.nest in deprecated module tf.contrib. tf.contrib.framework.nest cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/runners_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/runners_test.py:97:13: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/runners.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/runners.py:489:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/models/base.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/models/base.py:27:6: ERROR: Using member tf.contrib.distributions in deprecated module tf.contrib. tf.contrib.distributions cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/models/base.py:139:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/models/base.py:185:11: ERROR: Using member tf.contrib.distributions.Bernoulli in deprecated module tf.contrib. tf.contrib.distributions.Bernoulli cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/models/base.py:281:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/models/ghmm.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/models/ghmm.py:27:6: ERROR: Using member tf.contrib.distributions in deprecated module tf.contrib. tf.contrib.distributions cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/data/datasets.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/data/datasets.py:147:8: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/data/datasets.py:236:8: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/data/datasets.py:312:8: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/data/datasets.py:447:8: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/bounds.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/bounds.py:62:20: ERROR: Using member tf.contrib.distributions.Categorical in deprecated module tf.contrib. tf.contrib.distributions.Categorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/bounds.py:100:20: ERROR: Using member tf.contrib.distributions.Categorical in deprecated module tf.contrib. tf.contrib.distributions.Categorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/bounds.py:147:20: ERROR: Using member tf.contrib.distributions.Categorical in deprecated module tf.contrib. tf.contrib.distributions.Categorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/bounds.py:202:20: ERROR: Using member tf.contrib.distributions.Categorical in deprecated module tf.contrib. tf.contrib.distributions.Categorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/bounds.py:272:20: ERROR: Using member tf.contrib.distributions.RelaxedOneHotCategorical in deprecated module tf.contrib. tf.contrib.distributions.RelaxedOneHotCategorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/bounds.py:314:13: ERROR: Using member tf.contrib.distributions.Categorical in deprecated module tf.contrib. tf.contrib.distributions.Categorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:77:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:91:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:111:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:129:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:161:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:170:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:184:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:226:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:241:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:274:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:294:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:300:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:306:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:317:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:324:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:337:31: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:407:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:429:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:435:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:443:13: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:446:13: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:451:26: ERROR: Using member tf.contrib.distributions.Categorical in deprecated module tf.contrib. tf.contrib.distributions.Categorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:452:14: ERROR: Using member tf.contrib.distributions.Mixture in deprecated module tf.contrib. tf.contrib.distributions.Mixture cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:464:13: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:470:15: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:473:15: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:478:28: ERROR: Using member tf.contrib.distributions.Categorical in deprecated module tf.contrib. tf.contrib.distributions.Categorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:479:16: ERROR: Using member tf.contrib.distributions.Mixture in deprecated module tf.contrib. tf.contrib.distributions.Mixture cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:488:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:569:21: ERROR: Using member tf.contrib.distributions.Cauchy in deprecated module tf.contrib. tf.contrib.distributions.Cauchy cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:571:21: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:621:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:632:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:639:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:646:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:658:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:663:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:674:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:681:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:688:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:698:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:704:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:730:18: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:801:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:818:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:847:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:881:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:909:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:949:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:1189:21: ERROR: Using member tf.contrib.distributions.Cauchy in deprecated module tf.contrib. tf.contrib.distributions.Cauchy cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py:1191:21: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/train.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/train.py:215:8: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/train.py:230:13: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/train.py:326:8: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/train.py:342:13: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/summary_utils.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/summary_utils.py:263:26: ERROR: Using member tf.contrib.distributions.kl_divergence in deprecated module tf.contrib. tf.contrib.distributions.kl_divergence cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/summary_utils.py:286:24: ERROR: Using member tf.contrib.distributions.kl_divergence in deprecated module tf.contrib. tf.contrib.distributions.kl_divergence cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/textsum/beam_search.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/textsum/beam_search.py:27:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/textsum/beam_search.py:28:0: ERROR: Using member tf.flags.DEFINE_bool in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/textsum/seq2seq_lib.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/textsum/seq2seq_lib.py:127:13: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/textsum/seq2seq_lib.py:134:16: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/textsum/seq2seq_attention_model.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/textsum/seq2seq_attention_model.py:54:15: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/textsum/seq2seq_attention_model.py:150:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/textsum/seq2seq_attention_model.py:153:30: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/textsum/seq2seq_attention_model.py:155:30: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/textsum/seq2seq_attention_model.py:175:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/textsum/seq2seq_attention_model.py:179:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/textsum/seq2seq_attention_model.py:203:47: ERROR: Using member tf.contrib.legacy_seq2seq.attention_decoder in deprecated module tf.contrib. tf.contrib.legacy_seq2seq.attention_decoder cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/textsum/seq2seq_attention_model.py:230:19: WARNING: tf.nn.sampled_softmax_loss requires manual check. `partition_strategy` has been removed from tf.nn.sampled_softmax_loss.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/textsum/seq2seq_attention_model.py:238:23: ERROR: Using member tf.contrib.legacy_seq2seq.sequence_loss in deprecated module tf.contrib. tf.contrib.legacy_seq2seq.sequence_loss cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/autoaugment/custom_ops.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/autoaugment/custom_ops.py:30:12: ERROR: Using member tf.contrib.framework.arg_scope in deprecated module tf.contrib. tf.contrib.framework.arg_scope cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/autoaugment/custom_ops.py:35:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/autoaugment/custom_ops.py:77:9: ERROR: Using member tf.contrib.layers.batch_norm in deprecated module tf.contrib. tf.contrib.layers.batch_norm cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/autoaugment/custom_ops.py:67:1: ERROR: Using member tf.contrib.framework.add_arg_scope in deprecated module tf.contrib. tf.contrib.framework.add_arg_scope cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/autoaugment/custom_ops.py:99:1: ERROR: Using member tf.contrib.framework.add_arg_scope in deprecated module tf.contrib. tf.contrib.framework.add_arg_scope cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/autoaugment/custom_ops.py:142:1: ERROR: Using member tf.contrib.framework.add_arg_scope in deprecated module tf.contrib. tf.contrib.framework.add_arg_scope cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/autoaugment/custom_ops.py:185:1: ERROR: Using member tf.contrib.framework.add_arg_scope in deprecated module tf.contrib. tf.contrib.framework.add_arg_scope cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/autoaugment/train_cifar.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/autoaugment/train_cifar.py:36:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/autoaugment/train_cifar.py:39:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/autoaugment/train_cifar.py:40:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/autoaugment/train_cifar.py:42:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/autoaugment/train_cifar.py:44:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/autoaugment/train_cifar.py:46:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/autoaugment/train_cifar.py:48:12: ERROR: Using member tf.contrib.framework.arg_scope in deprecated module tf.contrib. tf.contrib.framework.arg_scope cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/autoaugment/train_cifar.py:239:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/tensorflow_models/research/autoaugment/train_cifar.py:407:12: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/street/python/nn_ops.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/street/python/nn_ops.py:198:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/street/python/nn_ops.py:209:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/street/python/nn_ops.py:211:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/street/python/nn_ops.py:224:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/street/python/nn_ops.py:231:15: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/adv_imagenet_models/imagenet.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/adv_imagenet_models/imagenet.py:31:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/adv_imagenet_models/eval_on_adversarial.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/adv_imagenet_models/eval_on_adversarial.py:30:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/adv_imagenet_models/eval_on_adversarial.py:115:14: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/adv_imagenet_models/inception_resnet_v2.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/adv_imagenet_models/inception_resnet_v2.py:31:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/lfads/lfads.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/lfads/lfads.py:336:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/lfads/lfads.py:1270:6: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/tensorflow_models/research/lfads/lfads.py:1532:10: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/lfads/distributions.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/lfads/distributions.py:163:17: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/lfads/distributions.py:175:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/lfads/utils.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/lfads/utils.py:138:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/lfads/utils.py:149:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/lfads/utils.py:158:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/export_tflite_lstd_graph.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/export_tflite_lstd_graph.py:92:8: ERROR: Using member tf.app.flags in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/eval.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/eval.py:37:8: ERROR: Using member tf.app.flags in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/core/entropy_coder_single.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/core/entropy_coder_single.py:42:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/core/entropy_coder_single.py:44:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/core/entropy_coder_train.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/core/entropy_coder_train.py:105:20: ERROR: Using member tf.contrib.framework.create_global_step in deprecated module tf.contrib. tf.contrib.framework.create_global_step cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/compression/image_encoder/decoder.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/compression/image_encoder/decoder.py:30:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/compression/image_encoder/decoder.py:31:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/compression/image_encoder/decoder.py:34:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/compression/image_encoder/decoder.py:36:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/compression/image_encoder/decoder.py:38:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/compression/image_encoder/msssim.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/compression/image_encoder/msssim.py:30:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/compression/image_encoder/msssim.py:31:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/compression/image_encoder/msssim.py:32:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/compression/image_encoder/encoder.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/compression/image_encoder/encoder.py:32:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/compression/image_encoder/encoder.py:35:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/compression/image_encoder/encoder.py:37:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/compression/image_encoder/encoder.py:38:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/compression/image_encoder/encoder.py:40:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/ptn/metrics.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/ptn/metrics.py:25:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/ptn/metrics.py:49:28: ERROR: Using member tf.contrib.metrics.streaming_mean_squared_error in deprecated module tf.contrib. tf.contrib.metrics.streaming_mean_squared_error cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/ptn/metrics.py:79:28: ERROR: Using member tf.contrib.metrics.streaming_mean_squared_error in deprecated module tf.contrib. tf.contrib.metrics.streaming_mean_squared_error cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/ptn/model_ptn.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/ptn/model_ptn.py:33:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/ptn/model_rotator.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/ptn/model_rotator.py:33:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/ptn/model_rotator.py:136:29: ERROR: Using member tf.contrib.framework.get_model_variables in deprecated module tf.contrib. tf.contrib.framework.get_model_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/ptn/model_rotator.py:182:29: ERROR: Using member tf.contrib.framework.get_model_variables in deprecated module tf.contrib. tf.contrib.framework.get_model_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/ptn/eval_ptn.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/ptn/eval_ptn.py:29:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/ptn/utils.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/ptn/utils.py:41:2: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/ptn/eval_rotator.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/ptn/eval_rotator.py:29:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/ptn/pretrain_rotator.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/ptn/pretrain_rotator.py:32:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/ptn/train_ptn.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/ptn/train_ptn.py:31:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/ptn/model_voxel_generation.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/ptn/model_voxel_generation.py:31:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/ptn/model_voxel_generation.py:131:31: ERROR: Using member tf.contrib.framework.get_model_variables in deprecated module tf.contrib. tf.contrib.framework.get_model_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/ptn/model_voxel_generation.py:150:31: ERROR: Using member tf.contrib.framework.get_model_variables in deprecated module tf.contrib. tf.contrib.framework.get_model_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/ptn/model_voxel_generation.py:181:10: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/tensorflow_models/research/ptn/model_voxel_generation.py:185:10: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/ptn/losses.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/ptn/losses.py:24:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/ptn/losses.py:170:26: ERROR: Using member tf.contrib.framework.get_model_variables in deprecated module tf.contrib. tf.contrib.framework.get_model_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/ptn/nets/ptn_rotator.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/ptn/nets/ptn_rotator.py:38:11: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/ptn/nets/ptn_rotator.py:40:9: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/ptn/nets/ptn_rotator.py:43:2: ERROR: Using member tf.contrib.framework.add_model_variable in deprecated module tf.contrib. tf.contrib.framework.add_model_variable cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/ptn/nets/ptn_rotator.py:44:2: ERROR: Using member tf.contrib.framework.add_model_variable in deprecated module tf.contrib. tf.contrib.framework.add_model_variable cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/ptn/nets/ptn_vox_decoder.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/ptn/nets/ptn_vox_decoder.py:24:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/ptn/nets/ptn_vox_decoder.py:53:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/ptn/nets/ptn_vox_decoder.py:58:4: ERROR: Using member tf.contrib.framework.add_model_variable in deprecated module tf.contrib. tf.contrib.framework.add_model_variable cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/ptn/nets/ptn_vox_decoder.py:86:15: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/ptn/nets/ptn_vox_decoder.py:91:6: ERROR: Using member tf.contrib.framework.add_model_variable in deprecated module tf.contrib. tf.contrib.framework.add_model_variable cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/ptn/nets/ptn_vox_decoder.py:27:1: ERROR: Using member tf.contrib.framework.add_arg_scope in deprecated module tf.contrib. tf.contrib.framework.add_arg_scope cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/ptn/nets/ptn_encoder.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/ptn/nets/ptn_encoder.py:23:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/ptn/nets/ptn_im_decoder.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/ptn/nets/ptn_im_decoder.py:23:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/metarun.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/metarun.py:337:26: WARNING: Using member tf.contrib.rnn in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/metarun.py:337:26: ERROR: Using member tf.contrib.rnn in deprecated module tf.contrib. tf.contrib.rnn cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/metaopt.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/metaopt.py:394:10: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/hierarchical_rnn.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/hierarchical_rnn.py:58:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/hierarchical_rnn.py:189:28: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/hierarchical_rnn.py:196:33: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/hierarchical_rnn.py:251:31: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/hierarchical_rnn.py:256:28: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/hierarchical_rnn.py:272:31: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/hierarchical_rnn.py:277:28: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/hierarchical_rnn.py:294:24: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/hierarchical_rnn.py:297:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/hierarchical_rnn.py:675:26: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/hierarchical_rnn.py:681:30: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/hierarchical_rnn.py:747:26: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/learning_rate_schedule.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/learning_rate_schedule.py:36:28: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/global_learning_rate.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/global_learning_rate.py:34:27: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/trainable_adam.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/trainable_adam.py:67:31: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/trainable_adam.py:71:25: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/trainable_adam.py:75:25: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/trainable_adam.py:79:25: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/utils.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/utils.py:76:13: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/utils.py:80:13: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/coordinatewise_rnn.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/coordinatewise_rnn.py:39:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/coordinatewise_rnn.py:90:28: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/coordinatewise_rnn.py:100:26: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/coordinatewise_rnn.py:119:27: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/coordinatewise_rnn.py:122:24: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/coordinatewise_rnn.py:142:24: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/coordinatewise_rnn.py:145:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/problems/problem_generator.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/problems/problem_generator.py:235:11: ERROR: Using member tf.contrib.metrics.accuracy in deprecated module tf.contrib. tf.contrib.metrics.accuracy cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/problems/problem_generator.py:273:17: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/problems/problem_generator.py:361:11: ERROR: Using member tf.contrib.metrics.accuracy in deprecated module tf.contrib. tf.contrib.metrics.accuracy cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/problems/problem_generator.py:517:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/problems/problem_generator.py:518:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/problems/problem_generator.py:519:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/celeba_formatting.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/celeba_formatting.py:44:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/celeba_formatting.py:46:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/celeba_formatting.py:47:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/celeba_formatting.py:48:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/celeba_formatting.py:50:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/imnet_formatting.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/imnet_formatting.py:48:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/imnet_formatting.py:50:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/imnet_formatting.py:52:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/lsun_formatting.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/lsun_formatting.py:43:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/lsun_formatting.py:45:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/lsun_formatting.py:47:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/real_nvp_multiscale_dataset.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/real_nvp_multiscale_dataset.py:44:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/real_nvp_multiscale_dataset.py:47:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/real_nvp_multiscale_dataset.py:50:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/real_nvp_multiscale_dataset.py:53:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/real_nvp_multiscale_dataset.py:56:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/real_nvp_multiscale_dataset.py:58:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/real_nvp_multiscale_dataset.py:62:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/real_nvp_multiscale_dataset.py:66:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/real_nvp_multiscale_dataset.py:69:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/real_nvp_multiscale_dataset.py:72:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/real_nvp_multiscale_dataset.py:75:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/real_nvp_multiscale_dataset.py:82:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/real_nvp_multiscale_dataset.py:1125:15: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/real_nvp_multiscale_dataset.py:1515:20: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/real_nvp_utils.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/real_nvp_utils.py:53:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_task_towers.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_task_towers.py:18:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_losses.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_losses.py:25:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_losses.py:265:8: ERROR: Using member (
        tf.contrib.losses.mean_pairwise_squared_error) in deprecated module tf.contrib. (
        tf.contrib.losses.mean_pairwise_squared_error) cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_losses.py:277:13: ERROR: Using member tf.contrib.losses.mean_pairwise_squared_error in deprecated module tf.contrib. tf.contrib.losses.mean_pairwise_squared_error cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_losses.py:282:40: ERROR: Using member tf.contrib.losses.mean_squared_error in deprecated module tf.contrib. tf.contrib.losses.mean_squared_error cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/hparams.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/hparams.py:21:12: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_eval.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_eval.py:49:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_eval.py:219:10: ERROR: Using member tf.contrib.metrics.streaming_accuracy in deprecated module tf.contrib. tf.contrib.metrics.streaming_accuracy cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_eval.py:225:10: ERROR: Using member tf.contrib.metrics.streaming_accuracy in deprecated module tf.contrib. tf.contrib.metrics.streaming_accuracy cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_eval.py:237:23: ERROR: Using member tf.contrib.metrics.streaming_accuracy in deprecated module tf.contrib. tf.contrib.metrics.streaming_accuracy cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_eval.py:244:23: ERROR: Using member tf.contrib.metrics.streaming_accuracy in deprecated module tf.contrib. tf.contrib.metrics.streaming_accuracy cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_eval.py:251:23: ERROR: Using member tf.contrib.metrics.streaming_accuracy in deprecated module tf.contrib. tf.contrib.metrics.streaming_accuracy cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_utils.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_utils.py:22:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_train.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_train.py:31:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_model.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_model.py:39:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_model.py:247:12: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/baselines/baseline_eval.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/baselines/baseline_eval.py:35:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/baselines/baseline_eval.py:63:12: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/baselines/baseline_eval.py:113:12: ERROR: Using member tf.contrib.metrics.streaming_mean in deprecated module tf.contrib. tf.contrib.metrics.streaming_mean cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/baselines/baseline_eval.py:115:12: ERROR: Using member tf.contrib.metrics.streaming_accuracy in deprecated module tf.contrib. tf.contrib.metrics.streaming_accuracy cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/baselines/baseline_eval.py:120:12: ERROR: Using member tf.contrib.metrics.streaming_recall_at_k in deprecated module tf.contrib. tf.contrib.metrics.streaming_recall_at_k cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/baselines/baseline_train.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/baselines/baseline_train.py:34:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/baselines/baseline_train.py:88:12: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/datasets/dataset_factory.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/datasets/dataset_factory.py:27:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/datasets/mnist_m.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/datasets/mnist_m.py:31:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/models.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/models.py:28:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/dsn.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/dsn.py:34:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/dsn.py:171:14: ERROR: Using member tf.contrib.losses.mean_pairwise_squared_error in deprecated module tf.contrib. tf.contrib.losses.mean_pairwise_squared_error cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/dsn.py:173:14: ERROR: Using member tf.contrib.losses.mean_squared_error in deprecated module tf.contrib. tf.contrib.losses.mean_squared_error cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/dsn_train.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/dsn_train.py:24:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/dsn_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/dsn_test.py:28:13: ERROR: Using member tf.contrib.slim.get_or_create_global_step in deprecated module tf.contrib. tf.contrib.slim.get_or_create_global_step cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/dsn_test.py:79:21: ERROR: Using member tf.contrib.losses.get_losses in deprecated module tf.contrib. tf.contrib.losses.get_losses cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/dsn_test.py:89:21: ERROR: Using member tf.contrib.losses.get_losses in deprecated module tf.contrib. tf.contrib.losses.get_losses cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/dsn_test.py:99:21: ERROR: Using member tf.contrib.losses.get_losses in deprecated module tf.contrib. tf.contrib.losses.get_losses cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/dsn_test.py:109:21: ERROR: Using member tf.contrib.losses.get_losses in deprecated module tf.contrib. tf.contrib.losses.get_losses cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/dsn_test.py:119:21: ERROR: Using member tf.contrib.losses.get_losses in deprecated module tf.contrib. tf.contrib.losses.get_losses cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/dsn_test.py:129:21: ERROR: Using member tf.contrib.losses.get_losses in deprecated module tf.contrib. tf.contrib.losses.get_losses cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/dsn_test.py:131:27: ERROR: Using member tf.contrib.losses.get_regularization_losses in deprecated module tf.contrib. tf.contrib.losses.get_regularization_losses cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/dsn_test.py:141:21: ERROR: Using member tf.contrib.losses.get_losses in deprecated module tf.contrib. tf.contrib.losses.get_losses cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/dsn_test.py:143:26: ERROR: Using member tf.contrib.losses.get_regularization_losses in deprecated module tf.contrib. tf.contrib.losses.get_regularization_losses cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/dsn_test.py:152:21: ERROR: Using member tf.contrib.losses.get_losses in deprecated module tf.contrib. tf.contrib.losses.get_losses cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/dsn_eval.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/dsn_eval.py:29:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/dsn_eval.py:119:15: ERROR: Using member tf.contrib.metrics.streaming_accuracy in deprecated module tf.contrib. tf.contrib.metrics.streaming_accuracy cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/grl_ops_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/grl_ops_test.py:46:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/grl_ops_test.py:47:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/losses.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/losses.py:34:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/model_n2nmn/modules.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/model_n2nmn/modules.py:40:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/model_n2nmn/modules.py:41:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/model_n2nmn/modules.py:42:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/model_n2nmn/model.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/model_n2nmn/model.py:43:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/model_n2nmn/netgen_att.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/model_n2nmn/netgen_att.py:74:21: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/model_n2nmn/netgen_att.py:139:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/model_n2nmn/netgen_att.py:143:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/model_n2nmn/netgen_att.py:147:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/model_n2nmn/netgen_att.py:148:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/model_n2nmn/netgen_att.py:151:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/model_n2nmn/netgen_att.py:156:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/model_n2nmn/netgen_att.py:159:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/model_n2nmn/netgen_att.py:244:23: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/util/nn.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/util/nn.py:42:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/util/nn.py:45:15: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/exp_1_hop/test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/exp_1_hop/test.py:28:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/exp_1_hop/test.py:29:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/exp_1_hop/train_gt_layout.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/exp_1_hop/train_gt_layout.py:186:6: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/global_objectives/loss_layers_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/global_objectives/loss_layers_test.py:224:8: ERROR: Using member tf.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits in deprecated module tf.contrib. tf.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/global_objectives/loss_layers_test.py:252:8: ERROR: Using member tf.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits in deprecated module tf.contrib. tf.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/global_objectives/loss_layers_test.py:983:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/global_objectives/loss_layers_test.py:997:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/global_objectives/loss_layers_test.py:1206:14: ERROR: Using member tf.contrib.framework.get_unique_variable in deprecated module tf.contrib. tf.contrib.framework.get_unique_variable cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/global_objectives/loss_layers_test.py:1207:23: ERROR: Using member tf.contrib.framework.get_unique_variable in deprecated module tf.contrib. tf.contrib.framework.get_unique_variable cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/global_objectives/util.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/global_objectives/util.py:269:28: ERROR: Using member tf.contrib.framework.model_variable in deprecated module tf.contrib. tf.contrib.framework.model_variable cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/global_objectives/util.py:281:17: ERROR: Using member tf.contrib.framework.model_variable in deprecated module tf.contrib. tf.contrib.framework.model_variable cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/global_objectives/loss_layers.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/global_objectives/loss_layers.py:130:13: ERROR: Using member tf.contrib.framework.model_variable in deprecated module tf.contrib. tf.contrib.framework.model_variable cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/global_objectives/loss_layers.py:830:20: ERROR: Using member tf.contrib.framework.model_variable in deprecated module tf.contrib. tf.contrib.framework.model_variable cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/global_objectives/util_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/global_objectives/util_test.py:49:8: ERROR: Using member tf.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits in deprecated module tf.contrib. tf.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/global_objectives/util_test.py:69:8: ERROR: Using member tf.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits in deprecated module tf.contrib. tf.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/global_objectives/util_test.py:126:8: ERROR: Using member tf.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits in deprecated module tf.contrib. tf.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/global_objectives/util_test.py:135:8: ERROR: Using member tf.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits in deprecated module tf.contrib. tf.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/lm_commonsense/utils.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/lm_commonsense/utils.py:26:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/rebar/rebar.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/rebar/rebar.py:34:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/rebar/rebar.py:1087:18: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/rebar/download_data.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/rebar/download_data.py:65:2: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/rebar/rebar_train.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/rebar/rebar_train.py:45:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/train_mask_gan.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/train_mask_gan.py:209:12: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_vd.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_vd.py:94:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_vd.py:131:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_vd.py:133:26: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_vd.py:139:24: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_vd.py:140:26: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_vd.py:185:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_vd.py:188:15: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_vd.py:198:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_vd.py:200:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_vd.py:223:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_vd.py:227:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_vd.py:256:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_vd.py:308:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_vd.py:311:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_vd.py:313:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_vd.py:340:27: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_vd.py:362:24: ERROR: Using member tf.contrib.distributions.Categorical in deprecated module tf.contrib. tf.contrib.distributions.Categorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_vd.py:424:26: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_vd.py:427:26: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_vd.py:510:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_vd.py:526:15: ERROR: Using member tf.contrib.layers.linear in deprecated module tf.contrib. tf.contrib.layers.linear cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_vd.py:545:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_vd.py:550:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_nas.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_nas.py:105:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_nas.py:134:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_nas.py:136:26: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_nas.py:140:24: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_nas.py:141:26: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_nas.py:199:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_nas.py:234:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_nas.py:237:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_nas.py:239:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_nas.py:257:25: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_nas.py:297:22: ERROR: Using member tf.contrib.distributions.Categorical in deprecated module tf.contrib. tf.contrib.distributions.Categorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq.py:78:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq.py:84:13: WARNING: tf.contrib.rnn.LayerNormBasicLSTMCell requires manual check. (Manual edit required) `tf.contrib.rnn.LayerNormBasicLSTMCell` has been migrated to `tfa.rnn.LayerNormLSTMCell` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq.py:84:13: WARNING: Using member tf.contrib.rnn.LayerNormBasicLSTMCell in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq.py:84:13: ERROR: Using member tf.contrib.rnn.LayerNormBasicLSTMCell in deprecated module tf.contrib. tf.contrib.rnn.LayerNormBasicLSTMCell cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq.py:110:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq.py:113:24: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq.py:114:26: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq.py:157:13: WARNING: tf.contrib.rnn.LayerNormBasicLSTMCell requires manual check. (Manual edit required) `tf.contrib.rnn.LayerNormBasicLSTMCell` has been migrated to `tfa.rnn.LayerNormLSTMCell` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq.py:157:13: WARNING: Using member tf.contrib.rnn.LayerNormBasicLSTMCell in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq.py:157:13: ERROR: Using member tf.contrib.rnn.LayerNormBasicLSTMCell in deprecated module tf.contrib. tf.contrib.rnn.LayerNormBasicLSTMCell cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq.py:190:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq.py:192:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq.py:194:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq.py:196:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq.py:211:25: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq.py:241:22: ERROR: Using member tf.contrib.distributions.Categorical in deprecated module tf.contrib. tf.contrib.distributions.Categorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/bidirectional_vd.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/bidirectional_vd.py:41:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/bidirectional_vd.py:90:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/bidirectional_vd.py:93:17: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/bidirectional_vd.py:105:20: ERROR: Using member tf.contrib.layers.linear in deprecated module tf.contrib. tf.contrib.layers.linear cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/bidirectional_vd.py:110:15: ERROR: Using member tf.contrib.layers.linear in deprecated module tf.contrib. tf.contrib.layers.linear cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_zaremba.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_zaremba.py:56:15: WARNING: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_zaremba.py:56:15: ERROR: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib. tf.contrib.rnn.DropoutWrapper cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_zaremba.py:67:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_zaremba.py:69:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_zaremba.py:71:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_zaremba.py:73:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_zaremba.py:94:25: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_zaremba.py:113:22: ERROR: Using member tf.contrib.distributions.Categorical in deprecated module tf.contrib. tf.contrib.distributions.Categorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_zaremba.py:165:15: WARNING: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_zaremba.py:165:15: ERROR: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib. tf.contrib.rnn.DropoutWrapper cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_zaremba.py:176:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_zaremba.py:179:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_zaremba.py:192:15: ERROR: Using member tf.contrib.layers.linear in deprecated module tf.contrib. tf.contrib.layers.linear cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/attention_utils.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/attention_utils.py:327:21: ERROR: Using member tf.contrib.layers.linear in deprecated module tf.contrib. tf.contrib.layers.linear cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/attention_utils.py:386:18: ERROR: Using member tf.contrib.layers.linear in deprecated module tf.contrib. tf.contrib.layers.linear cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/attention_utils.py:427:16: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/attention_utils.py:428:16: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/feedforward.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/feedforward.py:38:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/feedforward.py:43:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/feedforward.py:46:17: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/feedforward.py:49:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/feedforward.py:54:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/feedforward.py:58:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/feedforward.py:62:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_vd.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_vd.py:46:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_vd.py:89:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_vd.py:92:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_vd.py:105:15: ERROR: Using member tf.contrib.layers.linear in deprecated module tf.contrib. tf.contrib.layers.linear cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_vd.py:114:15: ERROR: Using member tf.contrib.layers.linear in deprecated module tf.contrib. tf.contrib.layers.linear cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/bidirectional.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/bidirectional.py:39:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/bidirectional.py:43:15: WARNING: tf.contrib.rnn.LayerNormBasicLSTMCell requires manual check. (Manual edit required) `tf.contrib.rnn.LayerNormBasicLSTMCell` has been migrated to `tfa.rnn.LayerNormLSTMCell` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/bidirectional.py:43:15: WARNING: Using member tf.contrib.rnn.LayerNormBasicLSTMCell in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/bidirectional.py:43:15: ERROR: Using member tf.contrib.rnn.LayerNormBasicLSTMCell in deprecated module tf.contrib. tf.contrib.rnn.LayerNormBasicLSTMCell cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/bidirectional.py:45:15: WARNING: tf.contrib.rnn.LayerNormBasicLSTMCell requires manual check. (Manual edit required) `tf.contrib.rnn.LayerNormBasicLSTMCell` has been migrated to `tfa.rnn.LayerNormLSTMCell` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/bidirectional.py:45:15: WARNING: Using member tf.contrib.rnn.LayerNormBasicLSTMCell in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/bidirectional.py:45:15: ERROR: Using member tf.contrib.rnn.LayerNormBasicLSTMCell in deprecated module tf.contrib. tf.contrib.rnn.LayerNormBasicLSTMCell cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/bidirectional.py:61:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/bidirectional.py:64:17: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/bidirectional.py:72:20: ERROR: Using member tf.contrib.layers.linear in deprecated module tf.contrib. tf.contrib.layers.linear cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_zaremba.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_zaremba.py:97:15: WARNING: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_zaremba.py:97:15: ERROR: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib. tf.contrib.rnn.DropoutWrapper cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_zaremba.py:116:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_zaremba.py:118:26: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_zaremba.py:122:24: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_zaremba.py:123:26: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_zaremba.py:178:15: WARNING: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_zaremba.py:178:15: ERROR: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib. tf.contrib.rnn.DropoutWrapper cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_zaremba.py:203:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_zaremba.py:206:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_zaremba.py:208:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_zaremba.py:236:27: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_zaremba.py:255:24: ERROR: Using member tf.contrib.distributions.Categorical in deprecated module tf.contrib. tf.contrib.distributions.Categorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/cnn.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/cnn.py:37:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/cnn.py:44:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/cnn.py:46:17: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/cnn.py:56:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/cnn.py:58:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/cnn.py:80:11: ERROR: Using member tf.contrib.layers.fully_connected in deprecated module tf.contrib. tf.contrib.layers.fully_connected cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/cnn.py:85:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/cnn.py:89:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/bidirectional_zaremba.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/bidirectional_zaremba.py:36:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/bidirectional_zaremba.py:52:15: WARNING: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/bidirectional_zaremba.py:52:15: ERROR: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib. tf.contrib.rnn.DropoutWrapper cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/bidirectional_zaremba.py:67:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/bidirectional_zaremba.py:70:17: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/bidirectional_zaremba.py:80:20: ERROR: Using member tf.contrib.layers.linear in deprecated module tf.contrib. tf.contrib.layers.linear cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/critic_vd.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/critic_vd.py:44:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/critic_vd.py:48:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/critic_vd.py:88:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/critic_vd.py:104:16: ERROR: Using member tf.contrib.layers.linear in deprecated module tf.contrib. tf.contrib.layers.linear cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn.py:51:13: WARNING: tf.contrib.rnn.LayerNormBasicLSTMCell requires manual check. (Manual edit required) `tf.contrib.rnn.LayerNormBasicLSTMCell` has been migrated to `tfa.rnn.LayerNormLSTMCell` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn.py:51:13: WARNING: Using member tf.contrib.rnn.LayerNormBasicLSTMCell in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn.py:51:13: ERROR: Using member tf.contrib.rnn.LayerNormBasicLSTMCell in deprecated module tf.contrib. tf.contrib.rnn.LayerNormBasicLSTMCell cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn.py:71:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn.py:73:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn.py:75:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn.py:77:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn.py:94:25: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn.py:113:22: ERROR: Using member tf.contrib.distributions.Categorical in deprecated module tf.contrib. tf.contrib.distributions.Categorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn.py:168:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn.py:174:13: WARNING: tf.contrib.rnn.LayerNormBasicLSTMCell requires manual check. (Manual edit required) `tf.contrib.rnn.LayerNormBasicLSTMCell` has been migrated to `tfa.rnn.LayerNormLSTMCell` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn.py:174:13: WARNING: Using member tf.contrib.rnn.LayerNormBasicLSTMCell in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn.py:174:13: ERROR: Using member tf.contrib.rnn.LayerNormBasicLSTMCell in deprecated module tf.contrib. tf.contrib.rnn.LayerNormBasicLSTMCell cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn.py:194:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn.py:197:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn.py:207:15: ERROR: Using member tf.contrib.layers.linear in deprecated module tf.contrib. tf.contrib.layers.linear cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_nas.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_nas.py:78:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_nas.py:81:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_nas.py:83:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_nas.py:103:25: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_nas.py:133:22: ERROR: Using member tf.contrib.distributions.Categorical in deprecated module tf.contrib. tf.contrib.distributions.Categorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_nas.py:178:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_nas.py:202:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_nas.py:205:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_nas.py:230:15: ERROR: Using member tf.contrib.layers.linear in deprecated module tf.contrib. tf.contrib.layers.linear cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/model_utils/model_losses.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/model_utils/model_losses.py:323:19: ERROR: Using member tf.contrib.legacy_seq2seq.sequence_loss_by_example in deprecated module tf.contrib. tf.contrib.legacy_seq2seq.sequence_loss_by_example cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/nas_utils/custom_cell.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/nas_utils/custom_cell.py:24:8: ERROR: Using member tf.flags in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/nas_utils/custom_cell.py:104:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/nas_utils/custom_cell.py:107:25: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/video_prediction/prediction_train.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/video_prediction/prediction_train.py:240:6: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/tensorflow_models/research/video_prediction/prediction_train.py:246:2: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/lexnet_model.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/lexnet_model.py:33:11: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/lexnet_model.py:80:27: ERROR: Using member tf.contrib.lookup.HashTable in deprecated module tf.contrib. tf.contrib.lookup.HashTable cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/lexnet_model.py:81:10: ERROR: Using member tf.contrib.lookup.KeyValueTensorInitializer in deprecated module tf.contrib. tf.contrib.lookup.KeyValueTensorInitializer cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/lexnet_model.py:99:27: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/lexnet_model.py:111:25: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/lexnet_model.py:126:23: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/lexnet_model.py:139:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/lexnet_model.py:143:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/lexnet_model.py:150:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/lexnet_model.py:154:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/lexnet_model.py:159:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/lexnet_model.py:163:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/lexnet_model.py:337:26: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/lexnet_model.py:341:12: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/lexnet_model.py:348:29: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/path_model.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/path_model.py:36:11: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/path_model.py:80:24: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/path_model.py:85:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/path_model.py:89:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/path_model.py:93:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/path_model.py:98:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/path_model.py:102:17: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/path_model.py:250:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/path_model.py:446:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/learn_path_embeddings.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/learn_path_embeddings.py:29:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/learn_path_embeddings.py:33:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/learn_path_embeddings.py:39:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/learn_path_embeddings.py:44:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/learn_path_embeddings.py:48:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/learn_path_embeddings.py:52:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/learn_path_embeddings.py:218:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/learn_classifier.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/learn_classifier.py:29:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/learn_classifier.py:33:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/learn_classifier.py:38:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/learn_classifier.py:43:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/learn_classifier.py:47:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/learn_classifier.py:51:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/learn_classifier.py:53:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/learn_classifier.py:57:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/learn_classifier.py:214:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/get_indicative_paths.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/get_indicative_paths.py:29:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/get_indicative_paths.py:33:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/get_indicative_paths.py:39:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/get_indicative_paths.py:44:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/get_indicative_paths.py:48:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/get_indicative_paths.py:52:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/get_indicative_paths.py:55:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/get_indicative_paths.py:58:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/steve/learner.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/steve/learner.py:175:32: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/tensorflow_models/research/steve/learner.py:181:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/tensorflow_models/research/steve/learner.py:183:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/tensorflow_models/research/steve/learner.py:229:27: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/steve/learner.py:230:28: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/steve/learner.py:231:27: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/steve/learner.py:232:25: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/steve/learner.py:254:27: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/tensorflow_models/research/steve/learner.py:255:27: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/steve/nn.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/steve/nn.py:45:40: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/steve/nn.py:46:39: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/steve/nn.py:125:40: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/steve/nn.py:126:39: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:32:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:33:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:35:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:37:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:40:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:43:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:44:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:45:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:46:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:47:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:48:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:49:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:50:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:51:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:52:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:53:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:55:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:56:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:58:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:60:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:61:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:62:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:63:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:64:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:66:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:68:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:69:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:70:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:71:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:72:0: ERROR: Using member tf.flags.DEFINE_boolean in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:74:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:77:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:79:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:80:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py:134:6: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/model.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/model.py:179:21: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/nn_utils.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/nn_utils.py:21:9: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/autoencoder/autoencoder_models/DenoisingAutoencoder.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/autoencoder/autoencoder_models/DenoisingAutoencoder.py:31:28: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/autoencoder/autoencoder_models/DenoisingAutoencoder.py:99:28: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/autoencoder/autoencoder_models/VariationalAutoencoder.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/autoencoder/autoencoder_models/VariationalAutoencoder.py:37:28: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/autoencoder/autoencoder_models/VariationalAutoencoder.py:39:38: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/feature_aggregation_extractor.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/feature_aggregation_extractor.py:70:12: ERROR: Using member 
            tf.contrib.factorization.KMeansClustering.CLUSTER_CENTERS_VAR_NAME in deprecated module tf.contrib. 
            tf.contrib.factorization.KMeansClustering.CLUSTER_CENTERS_VAR_NAME cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/delf_v1.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/delf_v1.py:32:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/feature_aggregation_extractor_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/feature_aggregation_extractor_test.py:44:6: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/detect_to_retrieve/cluster_delf_features.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/detect_to_retrieve/cluster_delf_features.py:134:17: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/audioset/vggish/vggish_inference_demo.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/audioset/vggish/vggish_inference_demo.py:60:8: ERROR: Using member tf.app.flags in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/audioset/vggish/vggish_train_demo.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/audioset/vggish/vggish_train_demo.py:59:8: ERROR: Using member tf.app.flags in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/namignizer/model.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/namignizer/model.py:44:28: WARNING: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
pyslam_legacy/thirdparty/tensorflow_models/research/namignizer/model.py:44:28: ERROR: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib. tf.contrib.rnn.DropoutWrapper cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/namignizer/model.py:52:24: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/namignizer/model.py:53:21: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/namignizer/model.py:68:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/namignizer/model.py:69:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/namignizer/model.py:71:15: ERROR: Using member tf.contrib.legacy_seq2seq.sequence_loss_by_example in deprecated module tf.contrib. tf.contrib.legacy_seq2seq.sequence_loss_by_example cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/namignizer/names.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/namignizer/names.py:174:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/tfcode/cmp.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/tfcode/cmp.py:413:28: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/tfcode/tf_utils.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/tfcode/tf_utils.py:747:23: ERROR: Using member tf.contrib.metrics.streaming_mean in deprecated module tf.contrib. tf.contrib.metrics.streaming_mean cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/scripts/script_plot_trajectory.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/scripts/script_plot_trajectory.py:266:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_crypto/train_eval.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_crypto/train_eval.py:136:9: ERROR: Using member tf.contrib.framework.arg_scope in deprecated module tf.contrib. tf.contrib.framework.arg_scope cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_crypto/train_eval.py:137:9: ERROR: Using member tf.contrib.layers.fully_connected in deprecated module tf.contrib. tf.contrib.layers.fully_connected cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_crypto/train_eval.py:137:44: ERROR: Using member tf.contrib.layers.conv2d in deprecated module tf.contrib. tf.contrib.layers.conv2d cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_crypto/train_eval.py:140:11: ERROR: Using member tf.contrib.layers.fully_connected in deprecated module tf.contrib. tf.contrib.layers.fully_connected cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_crypto/train_eval.py:151:13: ERROR: Using member tf.contrib.layers.conv2d in deprecated module tf.contrib. tf.contrib.layers.conv2d cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_crypto/train_eval.py:154:13: ERROR: Using member tf.contrib.layers.conv2d in deprecated module tf.contrib. tf.contrib.layers.conv2d cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_crypto/train_eval.py:157:13: ERROR: Using member tf.contrib.layers.conv2d in deprecated module tf.contrib. tf.contrib.layers.conv2d cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/train.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/train.py:28:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/train.py:170:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/train.py:173:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/train.py:176:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/train.py:177:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/train.py:178:24: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/train.py:181:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/train.py:362:16: ERROR: Using member tf.contrib.framework.get_or_create_global_step in deprecated module tf.contrib. tf.contrib.framework.get_or_create_global_step cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/train.py:621:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/run_env.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/run_env.py:25:8: ERROR: Using member tf.flags in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/eval.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/eval.py:29:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/eval.py:88:17: ERROR: Using member tf.contrib.framework.assign_from_checkpoint_fn in deprecated module tf.contrib. tf.contrib.framework.assign_from_checkpoint_fn cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/agent.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/agent.py:27:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/agent.py:733:16: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/agents/ddpg_agent.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/agents/ddpg_agent.py:26:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/agents/ddpg_networks.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/agents/ddpg_networks.py:27:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/agents/circular_buffer.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/agents/circular_buffer.py:68:30: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/agents/circular_buffer.py:147:11: ERROR: Using member tf.contrib.framework.smart_cond in deprecated module tf.contrib. tf.contrib.framework.smart_cond cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/context/samplers.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/context/samplers.py:27:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/utils/utils.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/utils/utils.py:301:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/visualization_utils.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/visualization_utils.py:76:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/visualization_utils.py:90:2: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/policies.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/policies.py:24:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/embedders.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/embedders.py:24:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/embedders.py:176:13: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/embedders.py:181:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/embedders.py:190:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/embedders.py:196:26: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/embedders.py:208:15: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/embedders.py:214:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/embedders.py:332:15: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/embedders.py:343:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/embedders.py:346:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/embedders.py:389:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/embedders.py:392:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/embedders.py:527:12: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/preprocessing/vgg_preprocessing.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/preprocessing/vgg_preprocessing.py:37:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/preprocessing/vgg_preprocessing.py:279:18: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/preprocessing/preprocessing_factory.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/preprocessing/preprocessing_factory.py:28:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/preprocessing/inception_preprocessing.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/preprocessing/inception_preprocessing.py:277:14: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/preprocessing/lenet_preprocessing.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/preprocessing/lenet_preprocessing.py:23:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/preprocessing/cifarnet_preprocessing.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/preprocessing/cifarnet_preprocessing.py:27:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/train.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/train.py:34:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/model.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/model.py:206:23: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/model.py:212:42: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/export_model.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/export_model.py:27:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/export_model.py:171:29: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/dense_prediction_cell.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/dense_prediction_cell.py:256:32: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/xception_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/xception_test.py:56:4: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/xception_test.py:57:4: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/xception_test.py:59:4: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/xception_test.py:103:4: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/xception_test.py:104:4: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/xception_test.py:106:4: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/utils.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/utils.py:41:11: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/preprocess_utils.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/preprocess_utils.py:377:21: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/preprocess_utils.py:382:12: WARNING: tf.image.resize called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize.
pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/preprocess_utils.py:511:27: WARNING: tf.image.resize called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize.
pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/preprocess_utils.py:517:24: WARNING: tf.image.resize called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize.
pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/preprocess_utils.py:525:24: WARNING: tf.image.resize called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/datasets/data_generator.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/datasets/data_generator.py:339:11: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/datasets/remove_gt_colormap.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/datasets/remove_gt_colormap.py:63:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/evaluation/streaming_metrics.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/evaluation/streaming_metrics.py:43:16: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/utils/train_utils.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/utils/train_utils.py:89:15: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/utils/train_utils.py:106:22: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/utils/save_annotation.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/utils/save_annotation.py:66:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/vid2depth/util.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/vid2depth/util.py:101:21: ERROR: Using member tf.contrib.framework.list_variables in deprecated module tf.contrib. tf.contrib.framework.list_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/vid2depth/train.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/vid2depth/train.py:164:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/vid2depth/model.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/vid2depth/model.py:32:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/vid2depth/nets.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/vid2depth/nets.py:27:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/task_specific/word_level/depparse_module.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/task_specific/word_level/depparse_module.py:56:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/task_specific/word_level/depparse_module.py:59:15: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/task_specific/word_level/depparse_module.py:73:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/model/model_helpers.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/model/model_helpers.py:31:9: WARNING: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/model/model_helpers.py:31:9: ERROR: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib. tf.contrib.rnn.DropoutWrapper cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/model/multitask_model.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/model/multitask_model.py:81:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/model/encoder.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/model/encoder.py:40:30: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/model/encoder.py:42:24: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/model/encoder.py:45:25: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/model/encoder.py:51:30: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/model/encoder.py:54:24: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/training/training_progress.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/training/training_progress.py:56:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/training/training_progress.py:78:10: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/show_and_tell_model.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/show_and_tell_model.py:199:25: ERROR: Using member tf.contrib.layers.fully_connected in deprecated module tf.contrib. tf.contrib.layers.fully_connected cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/show_and_tell_model.py:222:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/show_and_tell_model.py:226:23: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/show_and_tell_model.py:250:18: WARNING: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/show_and_tell_model.py:250:18: ERROR: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib. tf.contrib.rnn.DropoutWrapper cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/show_and_tell_model.py:296:15: ERROR: Using member tf.contrib.layers.fully_connected in deprecated module tf.contrib. tf.contrib.layers.fully_connected cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/train.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/train.py:29:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/train.py:31:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/train.py:33:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/train.py:35:0: ERROR: Using member tf.flags.DEFINE_boolean in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/train.py:37:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/train.py:38:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/train.py:90:15: ERROR: Using member tf.contrib.layers.optimize_loss in deprecated module tf.contrib. tf.contrib.layers.optimize_loss cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/train.py:102:2: ERROR: Using member tf.contrib.slim.learning.train in deprecated module tf.contrib. tf.contrib.slim.learning.train cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/run_inference.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/run_inference.py:32:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/run_inference.py:34:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/run_inference.py:37:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/run_inference.py:38:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/evaluate.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/evaluate.py:37:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/evaluate.py:39:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/evaluate.py:41:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/evaluate.py:43:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/evaluate.py:45:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/evaluate.py:47:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/evaluate.py:50:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/ops/image_embedding.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/ops/image_embedding.py:27:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/ops/image_embedding.py:112:6: ERROR: Using member tf.contrib.layers.summaries.summarize_activation in deprecated module tf.contrib. tf.contrib.layers.summaries.summarize_activation cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/data/build_mscoco_data.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/data/build_mscoco_data.py:103:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/data/build_mscoco_data.py:105:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/data/build_mscoco_data.py:108:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/data/build_mscoco_data.py:110:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/data/build_mscoco_data.py:113:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/data/build_mscoco_data.py:115:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/data/build_mscoco_data.py:117:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/data/build_mscoco_data.py:119:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/data/build_mscoco_data.py:122:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/data/build_mscoco_data.py:124:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/data/build_mscoco_data.py:126:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/data/build_mscoco_data.py:128:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/data/build_mscoco_data.py:131:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/data/build_mscoco_data.py:134:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/data/build_mscoco_data.py:137:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/neural_gpu/neural_gpu_trainer.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/neural_gpu/neural_gpu_trainer.py:796:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/neural_gpu/neural_gpu.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/neural_gpu/neural_gpu.py:27:12: ERROR: Using member tf.contrib.compiler.jit.experimental_jit_scope in deprecated module tf.contrib. tf.contrib.compiler.jit.experimental_jit_scope cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/neural_gpu/neural_gpu.py:36:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/neural_gpu/neural_gpu.py:44:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/neural_gpu/neural_gpu.py:102:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/neural_gpu/neural_gpu.py:104:11: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/neural_gpu/neural_gpu.py:313:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/neural_gpu/neural_gpu.py:317:29: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/neural_gpu/neural_gpu.py:323:17: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tensorflow_models/research/neural_gpu/neural_gpu.py:510:49: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_logit_pairing/train.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_logit_pairing/train.py:122:17: ERROR: Using member tf.contrib.framework.get_model_variables in deprecated module tf.contrib. tf.contrib.framework.get_model_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_logit_pairing/train.py:137:14: ERROR: Using member tf.contrib.framework.assign_from_checkpoint_fn in deprecated module tf.contrib. tf.contrib.framework.assign_from_checkpoint_fn cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_logit_pairing/train.py:166:25: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_logit_pairing/train.py:213:37: ERROR: Using member tf.contrib.framework.get_model_variables in deprecated module tf.contrib. tf.contrib.framework.get_model_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_logit_pairing/train.py:233:17: ERROR: Using member tf.contrib.training.create_train_op in deprecated module tf.contrib. tf.contrib.training.create_train_op cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_logit_pairing/model_lib.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_logit_pairing/model_lib.py:31:9: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_logit_pairing/model_lib.py:152:11: ERROR: Using member tf.contrib.framework.arg_scope in deprecated module tf.contrib. tf.contrib.framework.arg_scope cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_logit_pairing/eval.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_logit_pairing/eval.py:103:23: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_logit_pairing/eval.py:127:10: ERROR: Using member tf.contrib.framework.get_model_variables in deprecated module tf.contrib. tf.contrib.framework.get_model_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_logit_pairing/eval.py:130:29: ERROR: Using member tf.contrib.framework.get_variables_to_restore in deprecated module tf.contrib. tf.contrib.framework.get_variables_to_restore cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_logit_pairing/eval.py:135:10: ERROR: Using member tf.contrib.metrics.aggregate_metric_map in deprecated module tf.contrib. tf.contrib.metrics.aggregate_metric_map cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_logit_pairing/eval.py:149:6: ERROR: Using member tf.contrib.training.evaluate_repeatedly in deprecated module tf.contrib. tf.contrib.training.evaluate_repeatedly cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_logit_pairing/eval.py:157:14: ERROR: Using member tf.contrib.training.StopAfterNEvalsHook in deprecated module tf.contrib. tf.contrib.training.StopAfterNEvalsHook cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_logit_pairing/eval.py:158:14: ERROR: Using member tf.contrib.training.SummaryAtEndHook in deprecated module tf.contrib. tf.contrib.training.SummaryAtEndHook cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_logit_pairing/eval.py:163:15: ERROR: Using member tf.contrib.training.evaluate_once in deprecated module tf.contrib. tf.contrib.training.evaluate_once cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_logit_pairing/eval.py:171:14: ERROR: Using member tf.contrib.training.StopAfterNEvalsHook in deprecated module tf.contrib. tf.contrib.training.StopAfterNEvalsHook cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/train.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/train.py:31:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/train.py:466:21: ERROR: Using member tf.contrib.framework.get_model_variables in deprecated module tf.contrib. tf.contrib.framework.get_model_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/model.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/model.py:63:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/model.py:218:13: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/model.py:229:10: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/model.py:236:40: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/model.py:384:22: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/model.py:386:32: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/model.py:438:37: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/model.py:442:36: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/vis_video.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/vis_video.py:34:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/datasets/build_davis2017_data.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/datasets/build_davis2017_data.py:67:2: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/datasets/video_dataset.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/datasets/video_dataset.py:37:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/datasets/tfsequence_example_decoder.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/datasets/tfsequence_example_decoder.py:24:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/utils/eval_utils.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/utils/eval_utils.py:67:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/utils/eval_utils.py:72:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/utils/train_utils.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/utils/train_utils.py:26:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/utils/train_utils.py:59:20: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/utils/train_utils.py:157:16: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/utils/train_utils.py:165:22: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/utils/video_input_generator.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/utils/video_input_generator.py:24:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/utils/video_input_generator.py:120:6: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/utils/video_input_generator.py:154:6: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/utils/video_input_generator.py:188:6: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/utils/video_input_generator.py:455:10: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/utils/embedding_utils.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/utils/embedding_utils.py:24:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/utils/embedding_utils.py:621:28: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/utils/embedding_utils.py:990:25: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/utils/embedding_utils.py:992:35: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist.py:212:11: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist.py:236:4: ERROR: *.export_savedmodel requires manual check. (Manual edit required) Please rename the method export_savedmodel() to export_saved_model(). Two things to note:
	(1) The argument strip_default_attributes has been removed. The function will always strip the default attributes from ops. If this breaks your code, please switch to tf.compat.v1.estimator.Estimator.
	(2) This change only effects core estimator. If you are using tf.contrib.learn.Estimator, please switch to using core estimator.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist_eager.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist_eager.py:65:9: ERROR: contrib_summary.record_summaries_every_n_global_steps requires manual check. (Manual edit required) tf.contrib.summary.record_summaries_every_n_global_steps(n, step) should be replaced by a call to tf.compat.v2.summary.record_if() with the argument `lambda: tf.math.equal(0, global_step % n)` (or in graph mode, the lambda body can be used directly). If no global step was passed, instead use tf.compat.v1.train.get_or_create_global_step().
pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist_eager.py:73:8: WARNING: Summary API writing function contrib_summary.scalar now requires a 'step' argument; inserting default of tf.compat.v1.train.get_or_create_global_step().
pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist_eager.py:73:8: WARNING: contrib_summary.scalar requires manual check. tf.contrib.summary.* functions have been migrated best-effort to tf.compat.v2.summary.* equivalents where possible, but the resulting code is not guaranteed to work, so please check carefully. For more information about the new summary API, see the Effective TF 2.0 migration document or check the updated TensorBoard tutorials.
pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist_eager.py:74:8: WARNING: Summary API writing function contrib_summary.scalar now requires a 'step' argument; inserting default of tf.compat.v1.train.get_or_create_global_step().
pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist_eager.py:74:8: WARNING: contrib_summary.scalar requires manual check. tf.contrib.summary.* functions have been migrated best-effort to tf.compat.v2.summary.* equivalents where possible, but the resulting code is not guaranteed to work, so please check carefully. For more information about the new summary API, see the Effective TF 2.0 migration document or check the updated TensorBoard tutorials.
pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist_eager.py:100:4: WARNING: Summary API writing function contrib_summary.scalar now requires a 'step' argument; inserting default of tf.compat.v1.train.get_or_create_global_step().
pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist_eager.py:100:4: WARNING: contrib_summary.scalar requires manual check. tf.contrib.summary.* functions have been migrated best-effort to tf.compat.v2.summary.* equivalents where possible, but the resulting code is not guaranteed to work, so please check carefully. For more information about the new summary API, see the Effective TF 2.0 migration document or check the updated TensorBoard tutorials.
pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist_eager.py:101:4: WARNING: Summary API writing function contrib_summary.scalar now requires a 'step' argument; inserting default of tf.compat.v1.train.get_or_create_global_step().
pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist_eager.py:101:4: WARNING: contrib_summary.scalar requires manual check. tf.contrib.summary.* functions have been migrated best-effort to tf.compat.v2.summary.* equivalents where possible, but the resulting code is not guaranteed to work, so please check carefully. For more information about the new summary API, see the Effective TF 2.0 migration document or check the updated TensorBoard tutorials.
pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist_eager.py:170:6: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist_tpu.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist_tpu.py:41:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist_tpu.py:46:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist_tpu.py:51:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist_tpu.py:58:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist_tpu.py:60:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist_tpu.py:61:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist_tpu.py:64:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist_tpu.py:65:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist_tpu.py:68:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist_tpu.py:70:0: ERROR: Using member tf.flags.DEFINE_bool in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist_tpu.py:71:0: ERROR: Using member tf.flags.DEFINE_bool in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist_tpu.py:72:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist_tpu.py:74:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist_tpu.py:76:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/official/r1/resnet/resnet_run_loop.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/official/r1/resnet/resnet_run_loop.py:711:4: ERROR: *.export_savedmodel requires manual check. (Manual edit required) Please rename the method export_savedmodel() to export_saved_model(). Two things to note:
	(1) The argument strip_default_attributes has been removed. The function will always strip the default attributes from ops. If this breaks your code, please switch to tf.compat.v1.estimator.Estimator.
	(2) This change only effects core estimator. If you are using tf.contrib.learn.Estimator, please switch to using core estimator.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/official/r1/boosted_trees/train_higgs.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/official/r1/boosted_trees/train_higgs.py:248:4: ERROR: *.export_savedmodel requires manual check. (Manual edit required) Please rename the method export_savedmodel() to export_saved_model(). Two things to note:
	(1) The argument strip_default_attributes has been removed. The function will always strip the default attributes from ops. If this breaks your code, please switch to tf.compat.v1.estimator.Estimator.
	(2) This change only effects core estimator. If you are using tf.contrib.learn.Estimator, please switch to using core estimator.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/official/r1/utils/tpu_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/official/r1/utils/tpu_test.py:62:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/official/r1/wide_deep/wide_deep_run_loop.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/official/r1/wide_deep/wide_deep_run_loop.py:78:2: ERROR: *.export_savedmodel requires manual check. (Manual edit required) Please rename the method export_savedmodel() to export_saved_model(). Two things to note:
	(1) The argument strip_default_attributes has been removed. The function will always strip the default attributes from ops. If this breaks your code, please switch to tf.compat.v1.estimator.Estimator.
	(2) This change only effects core estimator. If you are using tf.contrib.learn.Estimator, please switch to using core estimator.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/official/r1/wide_deep/census_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/official/r1/wide_deep/census_test.py:79:23: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/official/r1/wide_deep/movielens_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/official/r1/wide_deep/movielens_test.py:94:23: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/official/modeling/training/distributed_executor.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/official/modeling/training/distributed_executor.py:47:15: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/official/staging/training/controller_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/official/staging/training/controller_test.py:279:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/official/nlp/xlnet/run_pretrain.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/official/nlp/xlnet/run_pretrain.py:80:15: WARNING: tf.distribute.MirroredStrategy requires manual check. (Manual edit may be required) tf.distribute.MirroredStrategy API has changed. If you're using the strategy with a custom training loop, note the following changes in methods: make_dataset_iterator->experimental_distribute_dataset, experimental_make_numpy_iterator->experimental_make_numpy_dataset, extended.call_for_each_replica->run, reduce requires an axis argument, unwrap->experimental_local_results experimental_initialize and experimental_finalize no longer needed 
pyslam_legacy/thirdparty/tensorflow_models/official/nlp/xlnet/run_pretrain.py:149:15: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/official/nlp/xlnet/training_utils.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/official/nlp/xlnet/training_utils.py:42:15: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/official/nlp/xlnet/xlnet_modeling.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/official/nlp/xlnet/xlnet_modeling.py:251:11: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/official/nlp/xlnet/run_squad.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/official/nlp/xlnet/run_squad.py:220:15: WARNING: tf.distribute.MirroredStrategy requires manual check. (Manual edit may be required) tf.distribute.MirroredStrategy API has changed. If you're using the strategy with a custom training loop, note the following changes in methods: make_dataset_iterator->experimental_distribute_dataset, experimental_make_numpy_iterator->experimental_make_numpy_dataset, extended.call_for_each_replica->run, reduce requires an axis argument, unwrap->experimental_local_results experimental_initialize and experimental_finalize no longer needed 
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/official/nlp/xlnet/run_classifier.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/official/nlp/xlnet/run_classifier.py:138:15: WARNING: tf.distribute.MirroredStrategy requires manual check. (Manual edit may be required) tf.distribute.MirroredStrategy API has changed. If you're using the strategy with a custom training loop, note the following changes in methods: make_dataset_iterator->experimental_distribute_dataset, experimental_make_numpy_iterator->experimental_make_numpy_dataset, extended.call_for_each_replica->run, reduce requires an axis argument, unwrap->experimental_local_results experimental_initialize and experimental_finalize no longer needed 
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/official/nlp/bert/export_tfhub.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/official/nlp/bert/export_tfhub.py:76:2: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/official/nlp/bert/model_training_utils.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/official/nlp/bert/model_training_utils.py:47:17: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/tensorflow_models/official/nlp/bert/model_training_utils.py:55:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/official/nlp/bert/export_tfhub_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/official/nlp/bert/export_tfhub_test.py:45:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/official/nlp/bert/model_saving_utils.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/official/nlp/bert/model_saving_utils.py:77:2: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/tensorflow_models/official/nlp/bert/model_saving_utils.py:100:17: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/attention_layer.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/attention_layer.py:144:16: ERROR: tf.nn.dropout called without arguments, so automatic fix was disabled. tf.nn.dropout has changed the semantics of the second argument.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/transformer_main.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/transformer_main.py:337:28: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/transformer.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/transformer.py:180:25: ERROR: tf.nn.dropout called without arguments, so automatic fix was disabled. tf.nn.dropout has changed the semantics of the second argument.
pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/transformer.py:217:25: ERROR: tf.nn.dropout called without arguments, so automatic fix was disabled. tf.nn.dropout has changed the semantics of the second argument.
pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/transformer.py:389:10: ERROR: tf.nn.dropout called without arguments, so automatic fix was disabled. tf.nn.dropout has changed the semantics of the second argument.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/ffn_layer.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/ffn_layer.py:74:15: ERROR: tf.nn.dropout called without arguments, so automatic fix was disabled. tf.nn.dropout has changed the semantics of the second argument.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/official/nlp/albert/export_albert_tfhub_test.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/official/nlp/albert/export_albert_tfhub_test.py:46:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/official/nlp/albert/export_albert_tfhub.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/official/nlp/albert/export_albert_tfhub.py:77:2: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/mnist_main.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/mnist_main.py:138:2: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/resnet/resnet_imagenet_main.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/resnet/resnet_imagenet_main.py:278:6: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/official/recommendation/ncf_keras_main.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/official/recommendation/ncf_keras_main.py:514:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tensorflow_models/official/utils/misc/callstack_sampler.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tensorflow_models/official/utils/misc/callstack_sampler.py:61:2: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/lfnet2/train_lfnet.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/lfnet2/train_lfnet.py:917:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/lfnet2/train_lfnet.py:943:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tfeat/phototour.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tfeat/phototour.py:245:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tfeat/hpatches.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tfeat/hpatches.py:209:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/tfeat/old-code/tensorflow/models/tfeat.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/tfeat/old-code/tensorflow/models/tfeat.py:42:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tfeat/old-code/tensorflow/models/tfeat.py:80:32: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tfeat/old-code/tensorflow/models/tfeat.py:84:51: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tfeat/old-code/tensorflow/models/tfeat.py:95:32: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tfeat/old-code/tensorflow/models/tfeat.py:99:51: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tfeat/old-code/tensorflow/models/tfeat.py:109:40: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
pyslam_legacy/thirdparty/tfeat/old-code/tensorflow/models/tfeat.py:110:41: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/d2net/train.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/d2net/train.py:266:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/hardnet/examples/extract_DenseHardNet.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/hardnet/examples/extract_DenseHardNet.py:124:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/hardnet/code/HardNetHPatchesSplits.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/hardnet/code/HardNetHPatchesSplits.py:549:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/hardnet/code/HardNet.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/hardnet/code/HardNet.py:451:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/hardnet/code/HardNetClassicalHardNegMiningSiftInit.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/hardnet/code/HardNetClassicalHardNegMiningSiftInit.py:485:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/hardnet/code/HardNetClassicalHardNegMiningSiftInit.py:596:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/hardnet/code/HardNetClassicalHardNegMiningSiftInit.py:600:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/hardnet/code/HardNetClassicalHardNegMiningSiftInit.py:609:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/hardnet/code/HardNetClassicalHardNegMiningSiftInit.py:613:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/hardnet/code/HardNetMultipleDatasets.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/hardnet/code/HardNetMultipleDatasets.py:546:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/hardnet/code/dataset.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/hardnet/code/dataset.py:191:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/keynet/train_network.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/keynet/train_network.py:278:21: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

pyslam_legacy/thirdparty/keynet/train_network.py:281:25: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

pyslam_legacy/thirdparty/keynet/train_network.py:318:19: ERROR: Using member tf.contrib.training.create_train_op in deprecated module tf.contrib. tf.contrib.training.create_train_op cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/keynet/train_network.py:324:35: ERROR: Using member tf.contrib.framework.get_variables_to_restore in deprecated module tf.contrib. tf.contrib.framework.get_variables_to_restore cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/keynet/train_network.py:326:49: ERROR: Using member tf.contrib.framework.assign_from_checkpoint in deprecated module tf.contrib. tf.contrib.framework.assign_from_checkpoint cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/keynet/train_network.py:360:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/keynet/train_network.py:375:24: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/keynet/extract_multiscale_features.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/keynet/extract_multiscale_features.py:263:53: ERROR: Using member tf.contrib.framework.assign_from_checkpoint in deprecated module tf.contrib. tf.contrib.framework.assign_from_checkpoint cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/keynet/extract_multiscale_features.py:305:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/keynet/extract_multiscale_features.py:308:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/keynet/keyNet/loss/score_loss_function.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/keynet/keyNet/loss/score_loss_function.py:126:22: WARNING: tf.contrib.image.transform requires manual check. (Manual edit required) `tf.contrib.image.transform` has been migrated to `tfa.image.transform` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
pyslam_legacy/thirdparty/keynet/keyNet/loss/score_loss_function.py:126:22: ERROR: Using member tf.contrib.image.transform in deprecated module tf.contrib. tf.contrib.image.transform cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/keynet/keyNet/loss/score_loss_function.py:127:20: WARNING: tf.contrib.image.transform requires manual check. (Manual edit required) `tf.contrib.image.transform` has been migrated to `tfa.image.transform` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
pyslam_legacy/thirdparty/keynet/keyNet/loss/score_loss_function.py:127:20: ERROR: Using member tf.contrib.image.transform in deprecated module tf.contrib. tf.contrib.image.transform cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/keynet/keyNet/loss/score_loss_function.py:128:22: WARNING: tf.contrib.image.transform requires manual check. (Manual edit required) `tf.contrib.image.transform` has been migrated to `tfa.image.transform` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
pyslam_legacy/thirdparty/keynet/keyNet/loss/score_loss_function.py:128:22: ERROR: Using member tf.contrib.image.transform in deprecated module tf.contrib. tf.contrib.image.transform cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/keynet/keyNet/loss/score_loss_function.py:129:23: WARNING: tf.contrib.image.transform requires manual check. (Manual edit required) `tf.contrib.image.transform` has been migrated to `tfa.image.transform` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
pyslam_legacy/thirdparty/keynet/keyNet/loss/score_loss_function.py:129:23: ERROR: Using member tf.contrib.image.transform in deprecated module tf.contrib. tf.contrib.image.transform cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
pyslam_legacy/thirdparty/keynet/keyNet/loss/score_loss_function.py:130:23: WARNING: tf.contrib.image.transform requires manual check. (Manual edit required) `tf.contrib.image.transform` has been migrated to `tfa.image.transform` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
pyslam_legacy/thirdparty/keynet/keyNet/loss/score_loss_function.py:130:23: ERROR: Using member tf.contrib.image.transform in deprecated module tf.contrib. tf.contrib.image.transform cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: pyslam_legacy/thirdparty/logpolar/modules/hardnet/hardnet.py
--------------------------------------------------------------------------------
pyslam_legacy/thirdparty/logpolar/modules/hardnet/hardnet.py:221:20: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/logpolar/modules/hardnet/hardnet.py:229:20: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/logpolar/modules/hardnet/hardnet.py:249:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
pyslam_legacy/thirdparty/logpolar/modules/hardnet/hardnet.py:255:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
================================================================================
Detailed log follows:

================================================================================
================================================================================
Input tree: 'pyslam_legacy/'
================================================================================
--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/feature_tfeat.py'
 outputting to 'pyslam/feature_tfeat.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/parameters.py'
 outputting to 'pyslam/parameters.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/feature_hardnet.py'
 outputting to 'pyslam/feature_hardnet.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/mplot2d.py'
 outputting to 'pyslam/mplot2d.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/search_points.py'
 outputting to 'pyslam/search_points.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/feature_sosnet.py'
 outputting to 'pyslam/feature_sosnet.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/utils_geom.py'
 outputting to 'pyslam/utils_geom.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/feature_keynet.py'
 outputting to 'pyslam/feature_keynet.py'
--------------------------------------------------------------------------------

217:12: INFO: Renamed 'tf.reset_default_graph' to 'tf.compat.v1.reset_default_graph'
225:20: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
230:23: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
232:8: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
234:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

234:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
239:33: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
240:35: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
241:30: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
242:30: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
243:30: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
244:31: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
246:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

246:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
268:33: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
286:25: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/feature_superpoint.py'
 outputting to 'pyslam/feature_superpoint.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/utils_tf.py'
 outputting to 'pyslam/utils_tf.py'
--------------------------------------------------------------------------------

29:4: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/optimizer_g2o.py'
 outputting to 'pyslam/optimizer_g2o.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/initializer.py'
 outputting to 'pyslam/initializer.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/visual_odometry.py'
 outputting to 'pyslam/visual_odometry.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/feature_d2net.py'
 outputting to 'pyslam/feature_d2net.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/display2D.py'
 outputting to 'pyslam/display2D.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/feature_l2net_keras.py'
 outputting to 'pyslam/feature_l2net_keras.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/main_vo.py'
 outputting to 'pyslam/main_vo.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/utils_features.py'
 outputting to 'pyslam/utils_features.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/ground_truth.py'
 outputting to 'pyslam/ground_truth.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/utils_files.py'
 outputting to 'pyslam/utils_files.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/feature_manager.py'
 outputting to 'pyslam/feature_manager.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/motion_model.py'
 outputting to 'pyslam/motion_model.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/timer.py'
 outputting to 'pyslam/timer.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/mplot_figure.py'
 outputting to 'pyslam/mplot_figure.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/main_slam.py'
 outputting to 'pyslam/main_slam.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/viewer3D.py'
 outputting to 'pyslam/viewer3D.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/feature_tracker_configs.py'
 outputting to 'pyslam/feature_tracker_configs.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/feature_delf.py'
 outputting to 'pyslam/feature_delf.py'
--------------------------------------------------------------------------------

45:4: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/feature_geodesc.py'
 outputting to 'pyslam/feature_geodesc.py'
--------------------------------------------------------------------------------

41:4: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/feature_l2net.py'
 outputting to 'pyslam/feature_l2net.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/camera_pose.py'
 outputting to 'pyslam/camera_pose.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/map_point.py'
 outputting to 'pyslam/map_point.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/feature_disk.py'
 outputting to 'pyslam/feature_disk.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/feature_tracker.py'
 outputting to 'pyslam/feature_tracker.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/utils_sys.py'
 outputting to 'pyslam/utils_sys.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/rotation_histogram.py'
 outputting to 'pyslam/rotation_histogram.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/feature_shitomasi.py'
 outputting to 'pyslam/feature_shitomasi.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/mplot_thread.py'
 outputting to 'pyslam/mplot_thread.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/feature_r2d2.py'
 outputting to 'pyslam/feature_r2d2.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/moving_average.py'
 outputting to 'pyslam/moving_average.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/feature_contextdesc.py'
 outputting to 'pyslam/feature_contextdesc.py'
--------------------------------------------------------------------------------

37:4: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/mplot3d.py'
 outputting to 'pyslam/mplot3d.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/feature_orbslam2.py'
 outputting to 'pyslam/feature_orbslam2.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/feature_manager_adaptors.py'
 outputting to 'pyslam/feature_manager_adaptors.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/feature_matcher.py'
 outputting to 'pyslam/feature_matcher.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/config.py'
 outputting to 'pyslam/config.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/__init__.py'
 outputting to 'pyslam/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/keyframe.py'
 outputting to 'pyslam/keyframe.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/pyramid.py'
 outputting to 'pyslam/pyramid.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/map.py'
 outputting to 'pyslam/map.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/utils_img.py'
 outputting to 'pyslam/utils_img.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/dataset.py'
 outputting to 'pyslam/dataset.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/search_points_test.py'
 outputting to 'pyslam/search_points_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/feature_types.py'
 outputting to 'pyslam/feature_types.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/frame.py'
 outputting to 'pyslam/frame.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/slam_dynamic_config.py'
 outputting to 'pyslam/slam_dynamic_config.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/feature_manager_configs.py'
 outputting to 'pyslam/feature_manager_configs.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/local_mapping.py'
 outputting to 'pyslam/local_mapping.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/convert_groundtruth.py'
 outputting to 'pyslam/convert_groundtruth.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/slam.py'
 outputting to 'pyslam/slam.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/feature_coffee.py'
 outputting to 'pyslam/feature_coffee.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/camera.py'
 outputting to 'pyslam/camera.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/feature_root_sift.py'
 outputting to 'pyslam/feature_root_sift.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/feature_lfnet.py'
 outputting to 'pyslam/feature_lfnet.py'
--------------------------------------------------------------------------------

42:4: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/utils_draw.py'
 outputting to 'pyslam/utils_draw.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/feature_logpolar.py'
 outputting to 'pyslam/feature_logpolar.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/pyopengl/test_pyopengl.py'
 outputting to 'pyslam/test/pyopengl/test_pyopengl.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/cv/test_feature_matching.py'
 outputting to 'pyslam/test/cv/test_feature_matching.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/cv/test_search_for_triangulation.py'
 outputting to 'pyslam/test/cv/test_search_for_triangulation.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/cv/test_img_pyramid_generator.py'
 outputting to 'pyslam/test/cv/test_img_pyramid_generator.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/cv/test_triangulatepoints.py'
 outputting to 'pyslam/test/cv/test_triangulatepoints.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/cv/test_feature_manager.py'
 outputting to 'pyslam/test/cv/test_feature_manager.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/cv/test_ORB.py'
 outputting to 'pyslam/test/cv/test_ORB.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/cv/test_img_blocks.py'
 outputting to 'pyslam/test/cv/test_img_blocks.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/cv/test_feature_manager2.py'
 outputting to 'pyslam/test/cv/test_feature_manager2.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/cv/test_map_nms.py'
 outputting to 'pyslam/test/cv/test_map_nms.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/cv/test_img_pyramid.py'
 outputting to 'pyslam/test/cv/test_img_pyramid.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/pangolin/simpleScene.py'
 outputting to 'pyslam/test/pangolin/simpleScene.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/pangolin/simpleDisplayImage.py'
 outputting to 'pyslam/test/pangolin/simpleDisplayImage.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/pangolin/simplePlotDisplay.py'
 outputting to 'pyslam/test/pangolin/simplePlotDisplay.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/pangolin/helloPangolin.py'
 outputting to 'pyslam/test/pangolin/helloPangolin.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/pangolin/simplePlot.py'
 outputting to 'pyslam/test/pangolin/simplePlot.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/pangolin/simpleDisplayMenu.py'
 outputting to 'pyslam/test/pangolin/simpleDisplayMenu.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/pangolin/simpleDraw.py'
 outputting to 'pyslam/test/pangolin/simpleDraw.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/pangolin/simpleMultiDisplay.py'
 outputting to 'pyslam/test/pangolin/simpleMultiDisplay.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/g2o/test_simple.py'
 outputting to 'pyslam/test/g2o/test_simple.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/g2o/test_optimization_flag.py'
 outputting to 'pyslam/test/g2o/test_optimization_flag.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/thirdparty/test_d2net.py'
 outputting to 'pyslam/test/thirdparty/test_d2net.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/thirdparty/test_tfeat.py'
 outputting to 'pyslam/test/thirdparty/test_tfeat.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/thirdparty/test_hardnet_dense.py'
 outputting to 'pyslam/test/thirdparty/test_hardnet_dense.py'
--------------------------------------------------------------------------------

133:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/thirdparty/test_hardnet_patches.py'
 outputting to 'pyslam/test/thirdparty/test_hardnet_patches.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/thirdparty/test_sosnet.py'
 outputting to 'pyslam/test/thirdparty/test_sosnet.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/thirdparty/test_disk.py'
 outputting to 'pyslam/test/thirdparty/test_disk.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/thirdparty/test_contextdesc.py'
 outputting to 'pyslam/test/thirdparty/test_contextdesc.py'
--------------------------------------------------------------------------------

27:4: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
48:8: ERROR: Using member tf.app.flags.FLAGS in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
50:0: ERROR: Using member tf.app.flags.DEFINE_string in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
52:0: ERROR: Using member tf.app.flags.DEFINE_string in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
54:0: ERROR: Using member tf.app.flags.DEFINE_string in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
56:0: ERROR: Using member tf.app.flags.DEFINE_string in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
58:0: ERROR: Using member tf.app.flags.DEFINE_integer in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
61:0: ERROR: Using member tf.app.flags.DEFINE_string in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
63:0: ERROR: Using member tf.app.flags.DEFINE_boolean in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
66:0: ERROR: Using member tf.app.flags.DEFINE_boolean in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
68:0: ERROR: Using member tf.app.flags.DEFINE_boolean in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/thirdparty/test_geodesc.py'
 outputting to 'pyslam/test/thirdparty/test_geodesc.py'
--------------------------------------------------------------------------------

33:4: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
60:8: ERROR: Using member tf.app.flags.FLAGS in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
62:0: ERROR: Using member tf.app.flags.DEFINE_string in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
64:0: ERROR: Using member tf.app.flags.DEFINE_integer in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
66:0: ERROR: Using member tf.app.flags.DEFINE_integer in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
68:0: ERROR: Using member tf.app.flags.DEFINE_string in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
70:0: ERROR: Using member tf.app.flags.DEFINE_string in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
72:0: ERROR: Using member tf.app.flags.DEFINE_boolean in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
75:0: ERROR: Using member tf.app.flags.DEFINE_boolean in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
77:0: ERROR: Using member tf.app.flags.DEFINE_boolean in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
79:0: ERROR: Using member tf.app.flags.DEFINE_boolean in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/thirdparty/test_keynet.py'
 outputting to 'pyslam/test/thirdparty/test_keynet.py'
--------------------------------------------------------------------------------

124:4: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
124:29: INFO: Renamed 'tf.logging.ERROR' to 'tf.compat.v1.logging.ERROR'
243:8: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
245:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

245:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
250:28: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
251:30: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
252:25: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
253:25: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
254:25: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
255:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
257:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

257:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
274:33: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
291:17: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
295:13: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
296:21: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
324:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
327:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/thirdparty/test_l2net_keras.py'
 outputting to 'pyslam/test/thirdparty/test_l2net_keras.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/thirdparty/test_r2d2.py'
 outputting to 'pyslam/test/thirdparty/test_r2d2.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/thirdparty/test_logpolar.py'
 outputting to 'pyslam/test/thirdparty/test_logpolar.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/thirdparty/test_lfnet.py'
 outputting to 'pyslam/test/thirdparty/test_lfnet.py'
--------------------------------------------------------------------------------

101:4: INFO: Renamed 'tf.reset_default_graph' to 'tf.compat.v1.reset_default_graph'
103:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
108:15: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
110:11: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
111:13: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
114:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/thirdparty/test_delf.py'
 outputting to 'pyslam/test/thirdparty/test_delf.py'
--------------------------------------------------------------------------------

45:4: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/sdl/test_sdl.py'
 outputting to 'pyslam/test/sdl/test_sdl.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/matplotlib/test_plot_thread.py'
 outputting to 'pyslam/test/matplotlib/test_plot_thread.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/matplotlib/test_mplot_thread.py'
 outputting to 'pyslam/test/matplotlib/test_mplot_thread.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/matplotlib/test_plt_backend.py'
 outputting to 'pyslam/test/matplotlib/test_plt_backend.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/matplotlib/test_plt_simple.py'
 outputting to 'pyslam/test/matplotlib/test_plt_simple.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/test/matplotlib/test_plot3d.py'
 outputting to 'pyslam/test/matplotlib/test_plot3d.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/calibration/save_video.py'
 outputting to 'pyslam/calibration/save_video.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/calibration/calibrate.py'
 outputting to 'pyslam/calibration/calibrate.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/calibration/webcam.py'
 outputting to 'pyslam/calibration/webcam.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/calibration/grab_chessboard_images.py'
 outputting to 'pyslam/calibration/grab_chessboard_images.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/__init__.py'
 outputting to 'pyslam/thirdparty/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/g2opy/setup.py'
 outputting to 'pyslam/thirdparty/g2opy/setup.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/g2opy/contrib/vertigo/examples/robustISAM2/parseResults.py'
 outputting to 'pyslam/thirdparty/g2opy/contrib/vertigo/examples/robustISAM2/parseResults.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/g2opy/contrib/vertigo/datasets/generateDataset.py'
 outputting to 'pyslam/thirdparty/g2opy/contrib/vertigo/datasets/generateDataset.py'
--------------------------------------------------------------------------------

ERROR: Failed to parse.
Traceback (most recent call last):
  File "/home/arion/.local/lib/python3.10/site-packages/tensorflow/tools/compatibility/ast_edits.py", line 933, in update_string_pasta
    t = pasta.parse(text)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/__init__.py", line 23, in parse
    t = ast_utils.parse(src)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/base/ast_utils.py", line 56, in parse
    tree = ast.parse(sanitize_source(src))
  File "/usr/lib/python3.10/ast.py", line 50, in parse
    return compile(source, filename, mode, flags,
  File "<unknown>", line 20
    print "Number of outliers (--outliers) must be >=0."
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)?

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/g2opy/python/examples/gicp_demo.py'
 outputting to 'pyslam/thirdparty/g2opy/python/examples/gicp_demo.py'
--------------------------------------------------------------------------------

81:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/g2opy/python/examples/sba_demo.py'
 outputting to 'pyslam/thirdparty/g2opy/python/examples/sba_demo.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/g2opy/python/examples/simple_optimize.py'
 outputting to 'pyslam/thirdparty/g2opy/python/examples/simple_optimize.py'
--------------------------------------------------------------------------------

34:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/g2opy/python/examples/sba_demo2.py'
 outputting to 'pyslam/thirdparty/g2opy/python/examples/sba_demo2.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/g2opy/python/examples/ba_demo.py'
 outputting to 'pyslam/thirdparty/g2opy/python/examples/ba_demo.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/g2opy/python/examples/gicp_sba_demo.py'
 outputting to 'pyslam/thirdparty/g2opy/python/examples/gicp_sba_demo.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/g2opy/python/examples/ba_anchored_inverse_depth_demo.py'
 outputting to 'pyslam/thirdparty/g2opy/python/examples/ba_anchored_inverse_depth_demo.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/l2net/l2net_model.py'
 outputting to 'pyslam/thirdparty/l2net/l2net_model.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/l2net/convert_l2net_weights_matconv_pytorch.py'
 outputting to 'pyslam/thirdparty/l2net/convert_l2net_weights_matconv_pytorch.py'
--------------------------------------------------------------------------------

68:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/l2net_keras/src/L2_Net.py'
 outputting to 'pyslam/thirdparty/l2net_keras/src/L2_Net.py'
--------------------------------------------------------------------------------

24:4: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/l2net_keras/src/LRN.py'
 outputting to 'pyslam/thirdparty/l2net_keras/src/LRN.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/l2net_keras/src/build_py_params.py'
 outputting to 'pyslam/thirdparty/l2net_keras/src/build_py_params.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/contextdesc/evaluations.py'
 outputting to 'pyslam/thirdparty/contextdesc/evaluations.py'
--------------------------------------------------------------------------------

19:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
21:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
153:4: ERROR: Using member tf.flags.mark_flags_as_required in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
154:4: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/contextdesc/__init__.py'
 outputting to 'pyslam/thirdparty/contextdesc/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/contextdesc/image_matching.py'
 outputting to 'pyslam/thirdparty/contextdesc/image_matching.py'
--------------------------------------------------------------------------------

17:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
19:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
21:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
23:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
25:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
27:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
30:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
32:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
35:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
37:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/contextdesc/hseq_eval.py'
 outputting to 'pyslam/thirdparty/contextdesc/hseq_eval.py'
--------------------------------------------------------------------------------

25:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
28:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
122:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
175:4: ERROR: Using member tf.flags.mark_flags_as_required in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/contextdesc/models/aug_model.py'
 outputting to 'pyslam/thirdparty/contextdesc/models/aug_model.py'
--------------------------------------------------------------------------------

35:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

35:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
36:28: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
38:31: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
40:23: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
41:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
46:13: INFO: Added keywords to args of function 'tf.shape'
47:15: INFO: Added keywords to args of function 'tf.shape'
48:15: INFO: Added keywords to args of function 'tf.shape'
56:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
64:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/contextdesc/models/loc_model.py'
 outputting to 'pyslam/thirdparty/contextdesc/models/loc_model.py'
--------------------------------------------------------------------------------

130:17: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

130:17: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
131:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
133:32: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
135:51: INFO: Added keywords to args of function 'tf.shape'
135:79: INFO: Added keywords to args of function 'tf.shape'
136:29: INFO: Added keywords to args of function 'tf.nn.moments'
137:59: INFO: Renamed keyword argument for tf.nn.moments from keep_dims to keepdims
146:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
149:29: INFO: Added keywords to args of function 'tf.nn.moments'
150:59: INFO: Renamed keyword argument for tf.nn.moments from keep_dims to keepdims
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/contextdesc/models/__init__.py'
 outputting to 'pyslam/thirdparty/contextdesc/models/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/contextdesc/models/inference_model.py'
 outputting to 'pyslam/thirdparty/contextdesc/models/inference_model.py'
--------------------------------------------------------------------------------

20:21: INFO: Added keywords to args of function 'tf.nn.moments'
20:83: INFO: Renamed keyword argument for tf.nn.moments from keep_dims to keepdims
28:43: INFO: Added keywords to args of function 'tf.shape'
28:67: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/contextdesc/models/base_model.py'
 outputting to 'pyslam/thirdparty/contextdesc/models/base_model.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/contextdesc/models/reg_model.py'
 outputting to 'pyslam/thirdparty/contextdesc/models/reg_model.py'
--------------------------------------------------------------------------------

29:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/contextdesc/models/cnn_wrapper/augdesc.py'
 outputting to 'pyslam/thirdparty/contextdesc/models/cnn_wrapper/augdesc.py'
--------------------------------------------------------------------------------

10:21: INFO: Added keywords to args of function 'tf.shape'
11:20: INFO: Added keywords to args of function 'tf.shape'
15:16: INFO: Added keywords to args of function 'tf.reduce_sum'
16:16: INFO: Added keywords to args of function 'tf.reduce_sum'
21:15: INFO: Added keywords to args of function 'tf.reduce_sum'
25:20: INFO: Renamed 'tf.batch_gather' to 'tf.compat.v1.batch_gather'
27:30: INFO: Added keywords to args of function 'tf.reduce_sum'
49:21: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/contextdesc/models/cnn_wrapper/network.py'
 outputting to 'pyslam/thirdparty/contextdesc/models/cnn_wrapper/network.py'
--------------------------------------------------------------------------------

32:23: INFO: Added keywords to args of function 'tf.pad'
35:23: INFO: Added keywords to args of function 'tf.pad'
90:27: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

128:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
132:30: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
132:30: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
194:23: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
194:23: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
227:23: INFO: Renamed 'tf.layers.separable_conv2d' to 'tf.compat.v1.layers.separable_conv2d'
230:23: INFO: Renamed 'tf.layers.conv3d' to 'tf.compat.v1.layers.conv3d'
289:19: INFO: Renamed 'tf.layers.conv2d_transpose' to 'tf.compat.v1.layers.conv2d_transpose'
291:19: INFO: Renamed 'tf.layers.conv3d_transpose' to 'tf.compat.v1.layers.conv3d_transpose'
329:15: INFO: Renamed 'tf.layers.max_pooling2d' to 'tf.compat.v1.layers.max_pooling2d'
344:15: INFO: Renamed 'tf.layers.average_pooling2d' to 'tf.compat.v1.layers.average_pooling2d'
362:29: INFO: Renamed 'tf.layers.flatten' to 'tf.compat.v1.layers.flatten'
365:15: INFO: Renamed 'tf.layers.dense' to 'tf.compat.v1.layers.dense'
387:43: INFO: Renamed keyword argument for tf.nn.softmax from dim to axis
393:17: INFO: Renamed 'tf.layers.batch_normalization' to 'tf.compat.v1.layers.batch_normalization'
411:25: INFO: Added keywords to args of function 'tf.nn.moments'
411:63: INFO: Renamed keyword argument for tf.nn.moments from keep_dims to keepdims
430:15: INFO: Renamed 'tf.layers.flatten' to 'tf.compat.v1.layers.flatten'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/contextdesc/models/cnn_wrapper/__init__.py'
 outputting to 'pyslam/thirdparty/contextdesc/models/cnn_wrapper/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/contextdesc/models/cnn_wrapper/descnet.py'
 outputting to 'pyslam/thirdparty/contextdesc/models/cnn_wrapper/descnet.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/contextdesc/models/cnn_wrapper/resnet.py'
 outputting to 'pyslam/thirdparty/contextdesc/models/cnn_wrapper/resnet.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/contextdesc/datasets/base_dataset.py'
 outputting to 'pyslam/thirdparty/contextdesc/datasets/base_dataset.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/contextdesc/datasets/yfcc.py'
 outputting to 'pyslam/thirdparty/contextdesc/datasets/yfcc.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/contextdesc/datasets/aachen.py'
 outputting to 'pyslam/thirdparty/contextdesc/datasets/aachen.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/contextdesc/datasets/__init__.py'
 outputting to 'pyslam/thirdparty/contextdesc/datasets/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/contextdesc/datasets/imw2020.py'
 outputting to 'pyslam/thirdparty/contextdesc/datasets/imw2020.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/contextdesc/datasets/imw2019.py'
 outputting to 'pyslam/thirdparty/contextdesc/datasets/imw2019.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/contextdesc/utils/evaluator.py'
 outputting to 'pyslam/thirdparty/contextdesc/utils/evaluator.py'
--------------------------------------------------------------------------------

29:27: INFO: Added keywords to args of function 'tf.shape'
30:15: INFO: Added keywords to args of function 'tf.math.argmax'
32:19: INFO: Added keywords to args of function 'tf.math.argmax'
34:32: INFO: Added keywords to args of function 'tf.boolean_mask'
34:61: INFO: Added keywords to args of function 'tf.boolean_mask'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/contextdesc/utils/hseq_utils.py'
 outputting to 'pyslam/thirdparty/contextdesc/utils/hseq_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/contextdesc/utils/opencvhelper.py'
 outputting to 'pyslam/thirdparty/contextdesc/utils/opencvhelper.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/contextdesc/utils/spatial_transformer.py'
 outputting to 'pyslam/thirdparty/contextdesc/utils/spatial_transformer.py'
--------------------------------------------------------------------------------

21:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
28:24: INFO: Added keywords to args of function 'tf.transpose'
50:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
52:24: INFO: Added keywords to args of function 'tf.shape'
53:21: INFO: Added keywords to args of function 'tf.shape'
54:20: INFO: Added keywords to args of function 'tf.shape'
112:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
113:24: INFO: Added keywords to args of function 'tf.shape'
114:22: INFO: Added keywords to args of function 'tf.shape'
127:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
141:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
143:24: INFO: Added keywords to args of function 'tf.shape'
144:21: INFO: Added keywords to args of function 'tf.shape'
145:20: INFO: Added keywords to args of function 'tf.shape'
206:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
207:24: INFO: Added keywords to args of function 'tf.shape'
208:22: INFO: Added keywords to args of function 'tf.shape'
236:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
277:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
278:18: INFO: Added keywords to args of function 'tf.transpose'
285:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
287:24: INFO: Added keywords to args of function 'tf.shape'
348:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
349:24: INFO: Added keywords to args of function 'tf.shape'
377:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
398:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/contextdesc/utils/__init__.py'
 outputting to 'pyslam/thirdparty/contextdesc/utils/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/contextdesc/utils/common.py'
 outputting to 'pyslam/thirdparty/contextdesc/utils/common.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/contextdesc/utils/tf.py'
 outputting to 'pyslam/thirdparty/contextdesc/utils/tf.py'
--------------------------------------------------------------------------------

54:19: INFO: Renamed 'tf.train.import_meta_graph' to 'tf.compat.v1.train.import_meta_graph'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/r2d2/train.py'
 outputting to 'pyslam/thirdparty/r2d2/train.py'
--------------------------------------------------------------------------------

136:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/r2d2/extract.py'
 outputting to 'pyslam/thirdparty/r2d2/extract.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/r2d2/nets/patchnet.py'
 outputting to 'pyslam/thirdparty/r2d2/nets/patchnet.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/r2d2/nets/ap_loss.py'
 outputting to 'pyslam/thirdparty/r2d2/nets/ap_loss.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/r2d2/nets/reliability_loss.py'
 outputting to 'pyslam/thirdparty/r2d2/nets/reliability_loss.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/r2d2/nets/sampler.py'
 outputting to 'pyslam/thirdparty/r2d2/nets/sampler.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/r2d2/nets/repeatability_loss.py'
 outputting to 'pyslam/thirdparty/r2d2/nets/repeatability_loss.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/r2d2/nets/losses.py'
 outputting to 'pyslam/thirdparty/r2d2/nets/losses.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/r2d2/tools/trainer.py'
 outputting to 'pyslam/thirdparty/r2d2/tools/trainer.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/r2d2/tools/common.py'
 outputting to 'pyslam/thirdparty/r2d2/tools/common.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/r2d2/tools/viz.py'
 outputting to 'pyslam/thirdparty/r2d2/tools/viz.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/r2d2/tools/transforms_tools.py'
 outputting to 'pyslam/thirdparty/r2d2/tools/transforms_tools.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/r2d2/tools/dataloader.py'
 outputting to 'pyslam/thirdparty/r2d2/tools/dataloader.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/r2d2/tools/transforms.py'
 outputting to 'pyslam/thirdparty/r2d2/tools/transforms.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/r2d2/datasets/imgfolder.py'
 outputting to 'pyslam/thirdparty/r2d2/datasets/imgfolder.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/r2d2/datasets/aachen.py'
 outputting to 'pyslam/thirdparty/r2d2/datasets/aachen.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/r2d2/datasets/__init__.py'
 outputting to 'pyslam/thirdparty/r2d2/datasets/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/r2d2/datasets/pair_dataset.py'
 outputting to 'pyslam/thirdparty/r2d2/datasets/pair_dataset.py'
--------------------------------------------------------------------------------

77:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/r2d2/datasets/web_images.py'
 outputting to 'pyslam/thirdparty/r2d2/datasets/web_images.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/r2d2/datasets/dataset.py'
 outputting to 'pyslam/thirdparty/r2d2/datasets/dataset.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet/generate_sh.py'
 outputting to 'pyslam/thirdparty/lfnet/generate_sh.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet/spatial_transformer.py'
 outputting to 'pyslam/thirdparty/lfnet/spatial_transformer.py'
--------------------------------------------------------------------------------

5:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

5:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
12:24: INFO: Added keywords to args of function 'tf.transpose'
37:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

37:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
39:20: INFO: Added keywords to args of function 'tf.shape'
40:17: INFO: Added keywords to args of function 'tf.shape'
41:16: INFO: Added keywords to args of function 'tf.shape'
42:12: INFO: Added keywords to args of function 'tf.shape'
43:17: INFO: Added keywords to args of function 'tf.shape'
45:24: INFO: Added keywords to args of function 'tf.shape'
46:24: INFO: Added keywords to args of function 'tf.shape'
195:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
196:18: INFO: Added keywords to args of function 'tf.transpose'
203:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
205:24: INFO: Added keywords to args of function 'tf.shape'
206:21: INFO: Added keywords to args of function 'tf.shape'
207:20: INFO: Added keywords to args of function 'tf.shape'
208:23: INFO: Added keywords to args of function 'tf.shape'
217:28: INFO: Added keywords to args of function 'tf.shape'
218:28: INFO: Added keywords to args of function 'tf.shape'
273:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
280:28: INFO: Added keywords to args of function 'tf.transpose'
292:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
293:24: INFO: Added keywords to args of function 'tf.shape'
294:21: INFO: Added keywords to args of function 'tf.shape'
295:20: INFO: Added keywords to args of function 'tf.shape'
296:27: INFO: Added keywords to args of function 'tf.shape'
328:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
454:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

454:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
455:12: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet/det_tools.py'
 outputting to 'pyslam/thirdparty/lfnet/det_tools.py'
--------------------------------------------------------------------------------

39:22: INFO: Added keywords to args of function 'tf.transpose'
78:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

78:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
83:21: INFO: Added keywords to args of function 'tf.shape'
84:18: INFO: Added keywords to args of function 'tf.shape'
85:17: INFO: Added keywords to args of function 'tf.shape'
87:17: INFO: Renamed 'tf.matrix_inverse' to 'tf.linalg.inv'
114:24: INFO: Added keywords to args of function 'tf.transpose'
127:16: INFO: Added keywords to args of function 'tf.transpose'
132:39: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
181:16: INFO: Added keywords to args of function 'tf.pad'
187:18: INFO: Added keywords to args of function 'tf.nn.max_pool'
187:18: INFO: Renamed keyword argument for tf.nn.max_pool from value to input
187:18: INFO: Renamed 'tf.nn.max_pool' to 'tf.nn.max_pool2d'
190:19: INFO: Added keywords to args of function 'tf.nn.max_pool'
190:19: INFO: Renamed keyword argument for tf.nn.max_pool from value to input
190:19: INFO: Renamed 'tf.nn.max_pool' to 'tf.nn.max_pool2d'
277:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

277:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
278:12: INFO: Added keywords to args of function 'tf.shape'
285:19: INFO: Added keywords to args of function 'tf.transpose'
288:35: INFO: Added keywords to args of function 'tf.transpose'
289:25: INFO: Renamed 'tf.matrix_inverse' to 'tf.linalg.inv'
292:19: INFO: Added keywords to args of function 'tf.transpose'
298:16: INFO: Added keywords to args of function 'tf.shape'
308:20: INFO: Added keywords to args of function 'tf.transpose'
325:17: INFO: Added keywords to args of function 'tf.shape'
326:16: INFO: Added keywords to args of function 'tf.shape'
343:8: INFO: Added keywords to args of function 'tf.shape'
350:16: INFO: Added keywords to args of function 'tf.reduce_sum'
350:30: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
353:15: INFO: Added keywords to args of function 'tf.reduce_min'
354:14: INFO: Added keywords to args of function 'tf.argmin'
386:8: INFO: Added keywords to args of function 'tf.shape'
394:39: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
395:28: INFO: Added keywords to args of function 'tf.size'
396:20: INFO: Added keywords to args of function 'tf.cond'
398:12: INFO: Added keywords to args of function 'tf.shape'
403:20: INFO: Added keywords to args of function 'tf.reduce_sum'
403:34: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
406:19: INFO: Added keywords to args of function 'tf.reduce_min'
407:18: INFO: Added keywords to args of function 'tf.argmin'
412:18: INFO: Added keywords to args of function 'tf.cond'
413:18: INFO: Added keywords to args of function 'tf.cond'
417:38: INFO: Added keywords to args of function 'tf.while_loop'
433:8: INFO: Added keywords to args of function 'tf.shape'
440:39: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
441:28: INFO: Added keywords to args of function 'tf.size'
442:20: INFO: Added keywords to args of function 'tf.cond'
446:12: INFO: Added keywords to args of function 'tf.shape'
451:21: INFO: Added keywords to args of function 'tf.reduce_sum'
451:35: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
456:21: INFO: Added keywords to args of function 'tf.reduce_sum'
456:35: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
465:24: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
472:18: INFO: Added keywords to args of function 'tf.cond'
476:23: INFO: Added keywords to args of function 'tf.while_loop'
491:8: INFO: Added keywords to args of function 'tf.shape'
499:39: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
500:28: INFO: Added keywords to args of function 'tf.size'
501:20: INFO: Added keywords to args of function 'tf.cond'
505:12: INFO: Added keywords to args of function 'tf.shape'
510:21: INFO: Added keywords to args of function 'tf.reduce_sum'
510:35: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
515:21: INFO: Added keywords to args of function 'tf.reduce_sum'
515:35: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
518:19: INFO: Added keywords to args of function 'tf.reduce_min'
519:18: INFO: Added keywords to args of function 'tf.argmin'
524:18: INFO: Added keywords to args of function 'tf.cond'
525:18: INFO: Added keywords to args of function 'tf.cond'
529:38: INFO: Added keywords to args of function 'tf.while_loop'
543:8: INFO: Added keywords to args of function 'tf.shape'
551:39: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
552:28: INFO: Added keywords to args of function 'tf.size'
553:20: INFO: Added keywords to args of function 'tf.cond'
556:12: INFO: Added keywords to args of function 'tf.shape'
561:21: INFO: Added keywords to args of function 'tf.reduce_sum'
561:35: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
566:21: INFO: Added keywords to args of function 'tf.reduce_sum'
566:35: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
569:19: INFO: Added keywords to args of function 'tf.reduce_min'
570:18: INFO: Added keywords to args of function 'tf.argmin'
575:18: INFO: Added keywords to args of function 'tf.cond'
576:18: INFO: Added keywords to args of function 'tf.cond'
580:38: INFO: Added keywords to args of function 'tf.while_loop'
592:8: INFO: Added keywords to args of function 'tf.shape'
599:39: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
600:28: INFO: Added keywords to args of function 'tf.size'
601:20: INFO: Added keywords to args of function 'tf.cond'
603:12: INFO: Added keywords to args of function 'tf.shape'
605:19: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
608:19: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
611:18: INFO: Added keywords to args of function 'tf.cond'
614:23: INFO: Added keywords to args of function 'tf.while_loop'
658:8: INFO: Added keywords to args of function 'tf.shape'
659:8: INFO: Added keywords to args of function 'tf.shape'
666:16: INFO: Added keywords to args of function 'tf.reduce_sum'
666:30: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
667:16: INFO: Added keywords to args of function 'tf.reduce_min'
668:15: INFO: Added keywords to args of function 'tf.argmin'
669:16: INFO: Added keywords to args of function 'tf.reduce_min'
670:15: INFO: Added keywords to args of function 'tf.argmin'
701:13: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
702:15: INFO: Added keywords to args of function 'tf.reduce_sum'
721:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

721:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
727:25: INFO: Added keywords to args of function 'tf.shape'
728:24: INFO: Added keywords to args of function 'tf.shape'
783:17: INFO: Added keywords to args of function 'tf.nn.max_pool'
783:17: INFO: Renamed keyword argument for tf.nn.max_pool from value to input
783:17: INFO: Renamed 'tf.nn.max_pool' to 'tf.nn.max_pool2d'
787:13: INFO: Added keywords to args of function 'tf.nn.conv2d'
787:13: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
796:21: INFO: Added keywords to args of function 'tf.transpose'
798:15: INFO: Added keywords to args of function 'tf.transpose'
800:17: INFO: Added keywords to args of function 'tf.transpose'
803:13: INFO: Added keywords to args of function 'tf.transpose'
820:21: INFO: Added keywords to args of function 'tf.nn.moments'
820:62: INFO: Renamed keyword argument for tf.nn.moments from keep_dims to keepdims
826:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

826:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
828:16: INFO: Added keywords to args of function 'tf.shape'
829:17: INFO: Added keywords to args of function 'tf.shape'
830:16: INFO: Added keywords to args of function 'tf.shape'
831:18: INFO: Added keywords to args of function 'tf.shape'
834:16: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
835:20: INFO: Added keywords to args of function 'tf.pad'
868:17: INFO: Added keywords to args of function 'tf.shape'
869:13: INFO: Added keywords to args of function 'tf.shape'
870:12: INFO: Added keywords to args of function 'tf.shape'
872:13: INFO: Added keywords to args of function 'tf.shape'
878:17: INFO: Renamed 'tf.sparse_to_dense' to 'tf.compat.v1.sparse_to_dense'
882:14: INFO: Renamed 'tf.mod' to 'tf.math.floormod'
900:14: INFO: Added keywords to args of function 'tf.reduce_max'
901:29: INFO: Renamed keyword argument for tf.reduce_max from keep_dims to keepdims
903:12: INFO: Added keywords to args of function 'tf.reduce_sum'
904:20: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
905:8: INFO: Added keywords to args of function 'tf.reduce_sum'
907:17: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
909:8: INFO: Added keywords to args of function 'tf.reduce_sum'
911:17: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
923:13: INFO: Added keywords to args of function 'tf.shape'
924:12: INFO: Added keywords to args of function 'tf.shape'
930:14: INFO: Added keywords to args of function 'tf.reduce_max'
931:44: INFO: Renamed keyword argument for tf.reduce_max from keep_dims to keepdims
933:12: INFO: Added keywords to args of function 'tf.reduce_sum'
934:36: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
935:8: INFO: Added keywords to args of function 'tf.reduce_sum'
937:33: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
939:8: INFO: Added keywords to args of function 'tf.reduce_sum'
941:33: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
966:18: INFO: Added keywords to args of function 'tf.transpose'
1015:12: INFO: Added keywords to args of function 'tf.shape'
1016:13: INFO: Added keywords to args of function 'tf.shape'
1017:12: INFO: Added keywords to args of function 'tf.shape'
1041:12: INFO: Added keywords to args of function 'tf.shape'
1042:13: INFO: Added keywords to args of function 'tf.shape'
1043:12: INFO: Added keywords to args of function 'tf.shape'
1055:19: INFO: Added keywords to args of function 'tf.transpose'
1056:11: INFO: Added keywords to args of function 'tf.transpose'
1076:13: INFO: Added keywords to args of function 'tf.shape'
1077:12: INFO: Added keywords to args of function 'tf.shape'
1103:14: INFO: Added keywords to args of function 'tf.transpose'
1111:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1111:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1113:19: INFO: Added keywords to args of function 'tf.shape'
1115:23: INFO: Added keywords to args of function 'tf.shape'
1118:21: INFO: Added keywords to args of function 'tf.shape'
1139:24: INFO: Added keywords to args of function 'tf.shape'
1140:24: INFO: Added keywords to args of function 'tf.shape'
1218:15: INFO: Added keywords to args of function 'tf.shape'
1219:17: INFO: Added keywords to args of function 'tf.shape'
1234:17: INFO: Added keywords to args of function 'tf.pad'
1296:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1296:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1297:16: INFO: Added keywords to args of function 'tf.shape'
1298:17: INFO: Added keywords to args of function 'tf.shape'
1299:16: INFO: Added keywords to args of function 'tf.shape'
1301:29: INFO: Renamed 'tf.matrix_inverse' to 'tf.linalg.inv'
1326:39: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
1332:12: INFO: Added keywords to args of function 'tf.shape'
1333:14: INFO: Added keywords to args of function 'tf.shape'
1334:13: INFO: Added keywords to args of function 'tf.shape'
1338:23: INFO: Added keywords to args of function 'tf.argmax'
1341:16: INFO: Renamed 'tf.mod' to 'tf.math.floormod'
1342:16: INFO: Renamed 'tf.floordiv' to 'tf.math.floordiv'
1346:16: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
1347:16: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
1375:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1375:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1376:16: INFO: Added keywords to args of function 'tf.shape'
1377:17: INFO: Added keywords to args of function 'tf.shape'
1378:16: INFO: Added keywords to args of function 'tf.shape'
1380:18: INFO: Added keywords to args of function 'tf.shape'
1381:17: INFO: Added keywords to args of function 'tf.shape'
1384:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1384:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1387:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1387:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1399:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1399:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1406:29: INFO: Renamed 'tf.matrix_inverse' to 'tf.linalg.inv'
1410:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1410:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1418:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1418:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1432:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1432:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1441:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1441:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1451:17: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
1452:17: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
1465:24: INFO: Renamed 'tf.sparse_to_dense' to 'tf.compat.v1.sparse_to_dense'
1609:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1609:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1610:17: INFO: Added keywords to args of function 'tf.shape'
1611:16: INFO: Added keywords to args of function 'tf.shape'
1614:21: INFO: Added keywords to args of function 'tf.pad'
1628:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1628:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1629:18: INFO: Added keywords to args of function 'tf.space_to_depth'
1629:18: INFO: Renamed 'tf.space_to_depth' to 'tf.compat.v1.space_to_depth'
1645:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1645:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1676:31: INFO: Renamed 'tf.log' to 'tf.math.log'
1676:64: INFO: Renamed 'tf.log' to 'tf.math.log'
1677:18: INFO: Added keywords to args of function 'tf.reduce_mean'
1683:18: INFO: Added keywords to args of function 'tf.shape'
1684:17: INFO: Added keywords to args of function 'tf.shape'
1686:18: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
1687:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1687:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
1697:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1697:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1698:27: INFO: Added keywords to args of function 'tf.space_to_depth'
1698:27: INFO: Renamed 'tf.space_to_depth' to 'tf.compat.v1.space_to_depth'
1699:20: INFO: Added keywords to args of function 'tf.reduce_sum'
1699:61: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
1705:19: INFO: Changing labels arg of tf.nn.softmax_cross_entropy_with_logits to tf.stop_gradient(labels). Please check this transformation.

1707:35: INFO: Added keywords to args of function 'tf.reduce_sum'
1708:22: INFO: Renamed 'tf.div' to 'tf.compat.v1.div'
1708:29: INFO: Added keywords to args of function 'tf.reduce_sum'
1722:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1722:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1729:49: INFO: Added keywords to args of function 'tf.reduce_max'
1729:82: INFO: Renamed keyword argument for tf.reduce_max from keep_dims to keepdims
1730:37: INFO: Added keywords to args of function 'tf.reduce_sum'
1730:75: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
1732:49: INFO: Added keywords to args of function 'tf.reduce_max'
1732:82: INFO: Renamed keyword argument for tf.reduce_max from keep_dims to keepdims
1733:37: INFO: Added keywords to args of function 'tf.reduce_sum'
1733:75: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
1735:17: INFO: Added keywords to args of function 'tf.reduce_sum'
1735:68: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
1742:18: INFO: Added keywords to args of function 'tf.reduce_sum'
1742:75: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
1754:20: INFO: Added keywords to args of function 'tf.transpose'
1762:53: INFO: Added keywords to args of function 'tf.reduce_max'
1763:55: INFO: Renamed keyword argument for tf.reduce_max from keep_dims to keepdims
1765:12: INFO: Added keywords to args of function 'tf.reduce_sum'
1765:50: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
1767:11: INFO: Added keywords to args of function 'tf.reduce_sum'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet/__init__.py'
 outputting to 'pyslam/thirdparty/lfnet/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet/inference.py'
 outputting to 'pyslam/thirdparty/lfnet/inference.py'
--------------------------------------------------------------------------------

8:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

8:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
9:21: INFO: Added keywords to args of function 'tf.shape'
10:17: INFO: Added keywords to args of function 'tf.shape'
11:16: INFO: Added keywords to args of function 'tf.shape'
63:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

63:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
65:21: INFO: Added keywords to args of function 'tf.shape'
66:17: INFO: Added keywords to args of function 'tf.shape'
67:16: INFO: Added keywords to args of function 'tf.shape'
86:24: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
100:12: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
100:12: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
102:27: INFO: Added keywords to args of function 'tf.reduce_max'
102:72: INFO: Renamed keyword argument for tf.reduce_max from keep_dims to keepdims
103:29: INFO: Added keywords to args of function 'tf.argmax'
133:12: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
133:12: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
135:19: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
151:47: INFO: Added keywords to args of function 'tf.reduce_max'
151:92: INFO: Renamed keyword argument for tf.reduce_max from keep_dims to keepdims
152:25: INFO: Added keywords to args of function 'tf.argmax'
160:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

160:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
162:21: INFO: Added keywords to args of function 'tf.shape'
163:17: INFO: Added keywords to args of function 'tf.shape'
164:16: INFO: Added keywords to args of function 'tf.shape'
178:21: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
195:12: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
195:12: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
197:27: INFO: Added keywords to args of function 'tf.reduce_max'
197:66: INFO: Renamed keyword argument for tf.reduce_max from keep_dims to keepdims
198:29: INFO: Added keywords to args of function 'tf.argmax'
228:12: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
228:12: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
230:19: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
244:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

244:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
265:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

265:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
285:36: INFO: Added keywords to args of function 'tf.reduce_sum'
285:50: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
289:25: INFO: Added keywords to args of function 'tf.reduce_sum'
290:18: INFO: Added keywords to args of function 'tf.reduce_sum'
291:17: INFO: Added keywords to args of function 'tf.reduce_sum'
291:67: INFO: Added keywords to args of function 'tf.reduce_sum'
300:21: INFO: Added keywords to args of function 'tf.reduce_sum'
308:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

308:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
309:20: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
310:20: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
311:19: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
312:19: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
313:25: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
314:28: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
316:13: INFO: Added keywords to args of function 'tf.shape'
323:40: INFO: Added keywords to args of function 'tf.reduce_sum'
323:54: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
327:29: INFO: Added keywords to args of function 'tf.reduce_sum'
328:22: INFO: Added keywords to args of function 'tf.reduce_sum'
329:21: INFO: Added keywords to args of function 'tf.reduce_sum'
329:71: INFO: Added keywords to args of function 'tf.reduce_sum'
345:25: INFO: Added keywords to args of function 'tf.reduce_sum'
352:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

352:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet/run_lfnet.py'
 outputting to 'pyslam/thirdparty/lfnet/run_lfnet.py'
--------------------------------------------------------------------------------

89:4: INFO: Renamed 'tf.reset_default_graph' to 'tf.compat.v1.reset_default_graph'
91:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
96:15: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
98:11: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
99:13: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
102:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet/utils.py'
 outputting to 'pyslam/thirdparty/lfnet/utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet/eval_tools.py'
 outputting to 'pyslam/thirdparty/lfnet/eval_tools.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet/train_lfnet.py'
 outputting to 'pyslam/thirdparty/lfnet/train_lfnet.py'
--------------------------------------------------------------------------------

211:26: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
212:31: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
232:17: INFO: Added keywords to args of function 'tf.shape'
254:17: INFO: Added keywords to args of function 'tf.shape'
284:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
284:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
285:4: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
285:4: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
323:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
323:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
329:19: INFO: Added keywords to args of function 'tf.nn.conv2d'
329:19: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
331:19: INFO: Added keywords to args of function 'tf.nn.conv2d'
331:19: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
334:23: INFO: Added keywords to args of function 'tf.reduce_sum'
335:23: INFO: Added keywords to args of function 'tf.reduce_sum'
338:18: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
339:16: INFO: Added keywords to args of function 'tf.reduce_mean'
339:32: INFO: Added keywords to args of function 'tf.reduce_sum'
341:18: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
342:16: INFO: Added keywords to args of function 'tf.reduce_mean'
342:32: INFO: Added keywords to args of function 'tf.reduce_sum'
348:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
348:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
369:19: INFO: Added keywords to args of function 'tf.reduce_sum'
369:66: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
374:19: INFO: Added keywords to args of function 'tf.reduce_sum'
374:66: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
386:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
386:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
389:20: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
390:20: INFO: Added keywords to args of function 'tf.reduce_mean'
390:36: INFO: Added keywords to args of function 'tf.reduce_sum'
391:20: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
392:20: INFO: Added keywords to args of function 'tf.reduce_mean'
392:36: INFO: Added keywords to args of function 'tf.reduce_sum'
395:20: INFO: Added keywords to args of function 'tf.reduce_sum'
395:67: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
396:20: INFO: Added keywords to args of function 'tf.reduce_mean'
396:36: INFO: Added keywords to args of function 'tf.reduce_sum'
397:20: INFO: Added keywords to args of function 'tf.reduce_mean'
397:68: INFO: Renamed keyword argument for tf.reduce_mean from keep_dims to keepdims
398:20: INFO: Added keywords to args of function 'tf.reduce_mean'
398:36: INFO: Added keywords to args of function 'tf.reduce_sum'
403:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
403:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
415:15: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
417:15: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
428:18: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
428:40: INFO: Renamed 'tf.log' to 'tf.math.log'
428:61: INFO: Renamed 'tf.log' to 'tf.math.log'
429:22: INFO: Added keywords to args of function 'tf.reduce_max'
430:18: INFO: Added keywords to args of function 'tf.reduce_mean'
430:33: INFO: Added keywords to args of function 'tf.reduce_sum'
431:18: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
431:40: INFO: Renamed 'tf.log' to 'tf.math.log'
431:61: INFO: Renamed 'tf.log' to 'tf.math.log'
432:22: INFO: Added keywords to args of function 'tf.reduce_max'
433:18: INFO: Added keywords to args of function 'tf.reduce_mean'
433:33: INFO: Added keywords to args of function 'tf.reduce_sum'
435:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
435:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
439:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
439:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
477:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
477:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
505:22: INFO: Added keywords to args of function 'tf.reduce_max'
505:58: INFO: Renamed keyword argument for tf.reduce_max from keep_dims to keepdims
506:26: INFO: Added keywords to args of function 'tf.reduce_max'
506:66: INFO: Renamed keyword argument for tf.reduce_max from keep_dims to keepdims
507:29: INFO: Added keywords to args of function 'tf.reduce_max'
507:72: INFO: Renamed keyword argument for tf.reduce_max from keep_dims to keepdims
509:18: INFO: Renamed 'tf.random_shuffle' to 'tf.random.shuffle'
512:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
512:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
524:4: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
524:4: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
570:40: INFO: tf.train.exponential_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

570:40: INFO: Renamed 'tf.train.exponential_decay' to 'tf.compat.v1.train.exponential_decay'
571:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
571:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
582:16: INFO: Added keywords to args of function 'tf.reduce_sum'
583:16: INFO: Added keywords to args of function 'tf.reduce_sum'
587:20: INFO: Added keywords to args of function 'tf.reduce_mean'
588:25: INFO: Added keywords to args of function 'tf.reduce_mean'
589:24: INFO: Added keywords to args of function 'tf.reduce_mean'
590:24: INFO: Added keywords to args of function 'tf.reduce_mean'
591:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
591:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
592:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
592:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
593:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
593:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
594:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
594:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
598:22: INFO: Added keywords to args of function 'tf.reduce_max'
598:58: INFO: Renamed keyword argument for tf.reduce_max from keep_dims to keepdims
599:26: INFO: Added keywords to args of function 'tf.reduce_max'
599:66: INFO: Renamed keyword argument for tf.reduce_max from keep_dims to keepdims
600:26: INFO: Added keywords to args of function 'tf.reduce_max'
600:66: INFO: Renamed keyword argument for tf.reduce_max from keep_dims to keepdims
602:18: INFO: Renamed 'tf.random_shuffle' to 'tf.random.shuffle'
605:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
605:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
633:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
633:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
634:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
634:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
651:4: INFO: Renamed 'tf.reset_default_graph' to 'tf.compat.v1.reset_default_graph'
686:13: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
687:19: INFO: Renamed 'tf.data.Iterator' to 'tf.compat.v1.data.Iterator'
692:14: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

693:20: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

695:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
728:15: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
730:11: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
732:14: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
732:14: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
733:13: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
737:29: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
740:12: INFO: Renamed 'tf.gfile.DeleteRecursively' to 'tf.io.gfile.rmtree'
751:26: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
751:44: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
761:20: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
768:17: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
770:19: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
790:19: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
790:19: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
793:19: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
793:19: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
905:25: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
906:37: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
917:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
943:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet/models/resnet_detector.py'
 outputting to 'pyslam/thirdparty/lfnet/models/resnet_detector.py'
--------------------------------------------------------------------------------

24:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
75:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
107:47: INFO: Added keywords to args of function 'tf.shape'
112:19: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
112:37: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet/models/__init__.py'
 outputting to 'pyslam/thirdparty/lfnet/models/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet/models/mso_resnet_detector.py'
 outputting to 'pyslam/thirdparty/lfnet/models/mso_resnet_detector.py'
--------------------------------------------------------------------------------

24:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
78:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
126:24: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
126:36: INFO: Added keywords to args of function 'tf.shape'
127:23: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
127:35: INFO: Added keywords to args of function 'tf.shape'
133:27: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
142:21: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
142:21: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
148:48: INFO: Renamed keyword argument for tf.nn.l2_normalize from dim to axis
150:23: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
150:41: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
159:20: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
159:20: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet/models/simple_desc.py'
 outputting to 'pyslam/thirdparty/lfnet/models/simple_desc.py'
--------------------------------------------------------------------------------

25:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
42:18: INFO: Renamed 'tf.layers.flatten' to 'tf.compat.v1.layers.flatten'
56:55: INFO: Renamed keyword argument for tf.nn.l2_normalize from dim to axis
66:21: INFO: Added keywords to args of function 'tf.norm'
66:56: INFO: Renamed keyword argument for tf.norm from keep_dims to keepdims
73:55: INFO: Renamed keyword argument for tf.nn.l2_normalize from dim to axis
74:21: INFO: Added keywords to args of function 'tf.norm'
74:56: INFO: Renamed keyword argument for tf.norm from keep_dims to keepdims
85:19: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
85:37: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet/common/argparse_utils.py'
 outputting to 'pyslam/thirdparty/lfnet/common/argparse_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet/common/jupyter_utils.py'
 outputting to 'pyslam/thirdparty/lfnet/common/jupyter_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet/common/tf_layer_utils.py'
 outputting to 'pyslam/thirdparty/lfnet/common/tf_layer_utils.py'
--------------------------------------------------------------------------------

38:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
38:14: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
59:22: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

61:22: INFO: tf.variance_scaling_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
61:22: INFO: Renamed 'tf.variance_scaling_initializer' to 'tf.compat.v1.variance_scaling_initializer'
67:52: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
67:52: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
71:12: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
71:12: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
73:12: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
73:12: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
90:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
103:65: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
103:65: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
104:67: INFO: tf.ones_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
104:67: INFO: Renamed 'tf.ones_initializer' to 'tf.compat.v1.ones_initializer'
106:32: INFO: Added keywords to args of function 'tf.nn.moments'
110:23: INFO: Added keywords to args of function 'tf.cond'
120:20: INFO: Added keywords to args of function 'tf.cond'
125:12: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
125:12: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
126:12: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
126:12: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
127:12: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
127:12: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
128:12: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
128:12: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
192:17: INFO: Renamed 'tf.layers.batch_normalization' to 'tf.compat.v1.layers.batch_normalization'
222:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
223:18: INFO: Added keywords to args of function 'tf.cond'
224:32: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

259:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
276:18: INFO: Added keywords to args of function 'tf.nn.conv2d'
276:18: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
305:24: INFO: Added keywords to args of function 'tf.pad'
308:24: INFO: Added keywords to args of function 'tf.pad'
370:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
391:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
391:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
392:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
392:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
394:18: INFO: Added keywords to args of function 'tf.nn.conv2d'
394:18: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
421:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
452:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
464:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
464:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
465:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
465:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
499:14: INFO: Added keywords to args of function 'tf.nn.max_pool'
499:14: INFO: Renamed keyword argument for tf.nn.max_pool from value to input
499:14: INFO: Renamed 'tf.nn.max_pool' to 'tf.nn.max_pool2d'
534:14: INFO: Added keywords to args of function 'tf.nn.avg_pool'
534:14: INFO: Renamed keyword argument for tf.nn.avg_pool from value to input
534:14: INFO: Renamed 'tf.nn.avg_pool' to 'tf.nn.avg_pool2d'
549:15: INFO: Added keywords to args of function 'tf.reduce_mean'
551:15: INFO: Added keywords to args of function 'tf.reduce_mean'
558:15: INFO: Added keywords to args of function 'tf.reduce_max'
560:15: INFO: Added keywords to args of function 'tf.reduce_max'
566:15: INFO: Added keywords to args of function 'tf.shape'
567:15: INFO: Added keywords to args of function 'tf.shape'
616:8: INFO: Added keywords to args of function 'tf.reduce_max'
616:47: INFO: Renamed keyword argument for tf.reduce_max from keep_dims to keepdims
631:8: INFO: Added keywords to args of function 'tf.reduce_sum'
631:55: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet/common/__init__.py'
 outputting to 'pyslam/thirdparty/lfnet/common/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet/common/tfvisualizer.py'
 outputting to 'pyslam/thirdparty/lfnet/common/tfvisualizer.py'
--------------------------------------------------------------------------------

18:16: INFO: Renamed 'tf.GraphDef' to 'tf.compat.v1.GraphDef'
74:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

74:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
75:12: INFO: Added keywords to args of function 'tf.shape'
76:20: INFO: Renamed 'tf.ceil' to 'tf.math.ceil'
78:18: INFO: Added keywords to args of function 'tf.pad'
79:15: INFO: Added keywords to args of function 'tf.shape'
84:18: INFO: Added keywords to args of function 'tf.transpose'
98:26: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
98:26: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
113:18: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
113:36: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
138:22: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
142:32: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
146:18: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
170:18: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
174:28: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
178:18: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
194:18: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
198:28: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
202:18: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
213:15: INFO: Renamed 'tf.HistogramProto' to 'tf.compat.v1.HistogramProto'
232:18: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
232:36: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet/common/io_utils.py'
 outputting to 'pyslam/thirdparty/lfnet/common/io_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet/common/tf_train_utils.py'
 outputting to 'pyslam/thirdparty/lfnet/common/tf_train_utils.py'
--------------------------------------------------------------------------------

4:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet/mydatasets/se3dataset.py'
 outputting to 'pyslam/thirdparty/lfnet/mydatasets/se3dataset.py'
--------------------------------------------------------------------------------

74:20: INFO: Added keywords to args of function 'tf.convert_to_tensor'
76:32: INFO: Added keywords to args of function 'tf.convert_to_tensor'
78:32: INFO: Added keywords to args of function 'tf.convert_to_tensor'
80:34: INFO: Added keywords to args of function 'tf.convert_to_tensor'
82:27: INFO: Added keywords to args of function 'tf.convert_to_tensor'
108:31: INFO: Added keywords to args of function 'tf.convert_to_tensor'
109:31: INFO: Added keywords to args of function 'tf.convert_to_tensor'
110:27: INFO: Added keywords to args of function 'tf.convert_to_tensor'
120:36: INFO: Added keywords to args of function 'tf.convert_to_tensor'
121:38: INFO: Added keywords to args of function 'tf.convert_to_tensor'
144:21: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
175:21: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
176:19: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
187:24: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
188:24: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
209:42: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
209:68: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
210:42: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
210:68: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
222:17: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
223:17: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
226:14: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
228:14: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
238:16: INFO: Renamed 'tf.read_file' to 'tf.io.read_file'
249:16: INFO: Renamed 'tf.read_file' to 'tf.io.read_file'
256:16: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
278:16: INFO: Renamed 'tf.matrix_inverse' to 'tf.linalg.inv'
361:20: INFO: Added keywords to args of function 'tf.convert_to_tensor'
363:32: INFO: Added keywords to args of function 'tf.convert_to_tensor'
365:32: INFO: Added keywords to args of function 'tf.convert_to_tensor'
367:34: INFO: Added keywords to args of function 'tf.convert_to_tensor'
369:27: INFO: Added keywords to args of function 'tf.convert_to_tensor'
376:31: INFO: Added keywords to args of function 'tf.convert_to_tensor'
377:31: INFO: Added keywords to args of function 'tf.convert_to_tensor'
378:27: INFO: Added keywords to args of function 'tf.convert_to_tensor'
446:20: INFO: Added keywords to args of function 'tf.convert_to_tensor'
448:32: INFO: Added keywords to args of function 'tf.convert_to_tensor'
450:32: INFO: Added keywords to args of function 'tf.convert_to_tensor'
452:34: INFO: Added keywords to args of function 'tf.convert_to_tensor'
454:27: INFO: Added keywords to args of function 'tf.convert_to_tensor'
461:31: INFO: Added keywords to args of function 'tf.convert_to_tensor'
462:31: INFO: Added keywords to args of function 'tf.convert_to_tensor'
463:27: INFO: Added keywords to args of function 'tf.convert_to_tensor'
488:21: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
519:21: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
520:19: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
550:42: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
550:68: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
551:42: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
551:68: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
563:17: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
564:17: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
565:15: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
566:15: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
569:14: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
571:14: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
582:14: INFO: Renamed 'tf.read_file' to 'tf.io.read_file'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet/mydatasets/sfmdataset.py'
 outputting to 'pyslam/thirdparty/lfnet/mydatasets/sfmdataset.py'
--------------------------------------------------------------------------------

30:24: INFO: Added keywords to args of function 'tf.convert_to_tensor'
34:26: INFO: Added keywords to args of function 'tf.convert_to_tensor'
85:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

85:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
86:22: INFO: Added keywords to args of function 'tf.parse_single_example'
86:22: INFO: Renamed 'tf.parse_single_example' to 'tf.io.parse_single_example'
87:33: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
88:33: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
89:35: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
90:35: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
91:26: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
92:26: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
93:25: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
94:25: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
95:24: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
96:24: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
97:22: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
98:22: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
157:14: INFO: Renamed 'tf.read_file' to 'tf.io.read_file'
165:16: INFO: Renamed 'tf.read_file' to 'tf.io.read_file'
171:16: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
179:17: INFO: Added keywords to args of function 'tf.shape'
180:16: INFO: Added keywords to args of function 'tf.shape'
183:31: INFO: Added keywords to args of function 'tf.cond'
189:20: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
192:13: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
192:52: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
193:13: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
193:52: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
217:24: INFO: Added keywords to args of function 'tf.convert_to_tensor'
221:26: INFO: Added keywords to args of function 'tf.convert_to_tensor'
272:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

272:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
273:22: INFO: Added keywords to args of function 'tf.parse_single_example'
273:22: INFO: Renamed 'tf.parse_single_example' to 'tf.io.parse_single_example'
274:33: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
275:33: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
276:35: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
277:35: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
278:26: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
279:26: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
280:25: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
281:25: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
282:24: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
283:24: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
284:22: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
285:22: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
343:14: INFO: Renamed 'tf.read_file' to 'tf.io.read_file'
349:16: INFO: Renamed 'tf.read_file' to 'tf.io.read_file'
355:16: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
363:17: INFO: Added keywords to args of function 'tf.shape'
364:16: INFO: Added keywords to args of function 'tf.shape'
367:31: INFO: Added keywords to args of function 'tf.cond'
373:20: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
376:13: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
376:52: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
377:13: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
377:52: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
410:24: INFO: Added keywords to args of function 'tf.convert_to_tensor'
414:26: INFO: Added keywords to args of function 'tf.convert_to_tensor'
465:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

465:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
466:22: INFO: Added keywords to args of function 'tf.parse_single_example'
466:22: INFO: Renamed 'tf.parse_single_example' to 'tf.io.parse_single_example'
467:33: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
468:33: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
469:35: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
470:35: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
471:26: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
472:26: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
473:25: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
474:25: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
475:24: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
476:24: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
477:22: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
478:22: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
498:36: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
499:22: INFO: Added keywords to args of function 'tf.cond'
543:38: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
543:61: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
544:38: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
544:61: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
547:44: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
547:56: INFO: Added keywords to args of function 'tf.shape'
548:44: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
548:56: INFO: Added keywords to args of function 'tf.shape'
549:44: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
549:56: INFO: Added keywords to args of function 'tf.shape'
550:44: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
550:56: INFO: Added keywords to args of function 'tf.shape'
557:19: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
558:18: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
560:19: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
561:18: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
586:24: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
587:24: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
593:14: INFO: Renamed 'tf.read_file' to 'tf.io.read_file'
599:16: INFO: Renamed 'tf.read_file' to 'tf.io.read_file'
605:16: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet/mydatasets/__init__.py'
 outputting to 'pyslam/thirdparty/lfnet/mydatasets/__init__.py'
--------------------------------------------------------------------------------

8:17: INFO: Added keywords to args of function 'tf.shape'
52:17: INFO: Added keywords to args of function 'tf.shape'
66:8: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
66:8: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
70:8: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
70:8: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
74:18: INFO: Renamed 'tf.matrix_inverse' to 'tf.linalg.inv'
75:18: INFO: Renamed 'tf.matrix_inverse' to 'tf.linalg.inv'
82:15: INFO: Added keywords to args of function 'tf.cond'
86:15: INFO: Added keywords to args of function 'tf.cond'
101:10: INFO: Added keywords to args of function 'tf.cond'
105:10: INFO: Added keywords to args of function 'tf.cond'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet/mydatasets/dataset_tools.py'
 outputting to 'pyslam/thirdparty/lfnet/mydatasets/dataset_tools.py'
--------------------------------------------------------------------------------

23:12: INFO: Renamed 'tf.matrix_inverse' to 'tf.linalg.inv'
102:36: INFO: Added keywords to args of function 'tf.convert_to_tensor'
103:38: INFO: Added keywords to args of function 'tf.convert_to_tensor'
126:21: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
127:19: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/match.py'
 outputting to 'pyslam/thirdparty/disk/match.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/view_h5.py'
 outputting to 'pyslam/thirdparty/disk/view_h5.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/train.py'
 outputting to 'pyslam/thirdparty/disk/train.py'
--------------------------------------------------------------------------------

215:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/compute_validation_auc.py'
 outputting to 'pyslam/thirdparty/disk/compute_validation_auc.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/detect.py'
 outputting to 'pyslam/thirdparty/disk/detect.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/disk/__init__.py'
 outputting to 'pyslam/thirdparty/disk/disk/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/disk/loss/discrete_metric.py'
 outputting to 'pyslam/thirdparty/disk/disk/loss/discrete_metric.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/disk/loss/__init__.py'
 outputting to 'pyslam/thirdparty/disk/disk/loss/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/disk/loss/pose_metric.py'
 outputting to 'pyslam/thirdparty/disk/disk/loss/pose_metric.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/disk/loss/ransac.py'
 outputting to 'pyslam/thirdparty/disk/disk/loss/ransac.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/disk/loss/reinforce.py'
 outputting to 'pyslam/thirdparty/disk/disk/loss/reinforce.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/disk/loss/rewards.py'
 outputting to 'pyslam/thirdparty/disk/disk/loss/rewards.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/disk/data/__init__.py'
 outputting to 'pyslam/thirdparty/disk/disk/data/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/disk/data/datasets.py'
 outputting to 'pyslam/thirdparty/disk/disk/data/datasets.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/disk/data/disk_dataset.py'
 outputting to 'pyslam/thirdparty/disk/disk/data/disk_dataset.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/disk/data/limited_dataset.py'
 outputting to 'pyslam/thirdparty/disk/disk/data/limited_dataset.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/disk/data/tuple_dataset.py'
 outputting to 'pyslam/thirdparty/disk/disk/data/tuple_dataset.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/disk/geom/distance_matrix.py'
 outputting to 'pyslam/thirdparty/disk/disk/geom/distance_matrix.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/disk/geom/pose.py'
 outputting to 'pyslam/thirdparty/disk/disk/geom/pose.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/disk/geom/__init__.py'
 outputting to 'pyslam/thirdparty/disk/disk/geom/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/disk/geom/epi.py'
 outputting to 'pyslam/thirdparty/disk/disk/geom/epi.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/disk/common/errors.py'
 outputting to 'pyslam/thirdparty/disk/disk/common/errors.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/disk/common/image.py'
 outputting to 'pyslam/thirdparty/disk/disk/common/image.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/disk/common/structs.py'
 outputting to 'pyslam/thirdparty/disk/disk/common/structs.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/disk/common/logger.py'
 outputting to 'pyslam/thirdparty/disk/disk/common/logger.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/disk/common/__init__.py'
 outputting to 'pyslam/thirdparty/disk/disk/common/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/disk/common/vis.py'
 outputting to 'pyslam/thirdparty/disk/disk/common/vis.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/disk/model/detector.py'
 outputting to 'pyslam/thirdparty/disk/disk/model/detector.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/disk/model/consistent_matcher.py'
 outputting to 'pyslam/thirdparty/disk/disk/model/consistent_matcher.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/disk/model/nms.py'
 outputting to 'pyslam/thirdparty/disk/disk/model/nms.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/disk/model/__init__.py'
 outputting to 'pyslam/thirdparty/disk/disk/model/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/disk/model/disk.py'
 outputting to 'pyslam/thirdparty/disk/disk/model/disk.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/disk/model/cycle_matcher.py'
 outputting to 'pyslam/thirdparty/disk/disk/model/cycle_matcher.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/submodules/torch-dimcheck/setup.py'
 outputting to 'pyslam/thirdparty/disk/submodules/torch-dimcheck/setup.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/submodules/torch-dimcheck/tests.py'
 outputting to 'pyslam/thirdparty/disk/submodules/torch-dimcheck/tests.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/submodules/torch-dimcheck/torch_dimcheck/errors.py'
 outputting to 'pyslam/thirdparty/disk/submodules/torch-dimcheck/torch_dimcheck/errors.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/submodules/torch-dimcheck/torch_dimcheck/__init__.py'
 outputting to 'pyslam/thirdparty/disk/submodules/torch-dimcheck/torch_dimcheck/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/submodules/torch-dimcheck/torch_dimcheck/dimcheck.py'
 outputting to 'pyslam/thirdparty/disk/submodules/torch-dimcheck/torch_dimcheck/dimcheck.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/submodules/torch-localize/example1.py'
 outputting to 'pyslam/thirdparty/disk/submodules/torch-localize/example1.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/submodules/torch-localize/example2.py'
 outputting to 'pyslam/thirdparty/disk/submodules/torch-localize/example2.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/submodules/torch-localize/setup.py'
 outputting to 'pyslam/thirdparty/disk/submodules/torch-localize/setup.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/submodules/torch-localize/example3.py'
 outputting to 'pyslam/thirdparty/disk/submodules/torch-localize/example3.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/submodules/torch-localize/torch_localize/localize.py'
 outputting to 'pyslam/thirdparty/disk/submodules/torch-localize/torch_localize/localize.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/submodules/torch-localize/torch_localize/__init__.py'
 outputting to 'pyslam/thirdparty/disk/submodules/torch-localize/torch_localize/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/submodules/unets/setup.py'
 outputting to 'pyslam/thirdparty/disk/submodules/unets/setup.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/submodules/unets/tests.py'
 outputting to 'pyslam/thirdparty/disk/submodules/unets/tests.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/submodules/unets/unets/__init__.py'
 outputting to 'pyslam/thirdparty/disk/submodules/unets/unets/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/submodules/unets/unets/blocks.py'
 outputting to 'pyslam/thirdparty/disk/submodules/unets/unets/blocks.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/submodules/unets/unets/utils.py'
 outputting to 'pyslam/thirdparty/disk/submodules/unets/unets/utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/submodules/unets/unets/ops.py'
 outputting to 'pyslam/thirdparty/disk/submodules/unets/unets/ops.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/submodules/unets/unets/unet.py'
 outputting to 'pyslam/thirdparty/disk/submodules/unets/unets/unet.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/colmap/h5_to_db.py'
 outputting to 'pyslam/thirdparty/disk/colmap/h5_to_db.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/colmap/merge_datasets.py'
 outputting to 'pyslam/thirdparty/disk/colmap/merge_datasets.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/colmap/colmap2dataset.py'
 outputting to 'pyslam/thirdparty/disk/colmap/colmap2dataset.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/colmap/colmap/database.py'
 outputting to 'pyslam/thirdparty/disk/colmap/colmap/database.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/colmap/colmap/read_model.py'
 outputting to 'pyslam/thirdparty/disk/colmap/colmap/read_model.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/colmap/colmap/__init__.py'
 outputting to 'pyslam/thirdparty/disk/colmap/colmap/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/disk/colmap/colmap/read_dense.py'
 outputting to 'pyslam/thirdparty/disk/colmap/colmap/read_dense.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/pangolin/python/examples/SimpleDisplayMenu.py'
 outputting to 'pyslam/thirdparty/pangolin/python/examples/SimpleDisplayMenu.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/pangolin/python/examples/SimplePlotDisplay.py'
 outputting to 'pyslam/thirdparty/pangolin/python/examples/SimplePlotDisplay.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/pangolin/python/examples/simple_draw.py'
 outputting to 'pyslam/thirdparty/pangolin/python/examples/simple_draw.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/pangolin/python/examples/SimpleScene.py'
 outputting to 'pyslam/thirdparty/pangolin/python/examples/SimpleScene.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/pangolin/python/examples/SimpleMultiDisplay.py'
 outputting to 'pyslam/thirdparty/pangolin/python/examples/SimpleMultiDisplay.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/pangolin/python/examples/HelloPangolin.py'
 outputting to 'pyslam/thirdparty/pangolin/python/examples/HelloPangolin.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/pangolin/python/examples/SimpleDisplayImage.py'
 outputting to 'pyslam/thirdparty/pangolin/python/examples/SimpleDisplayImage.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/pangolin/python/examples/SimplePlot.py'
 outputting to 'pyslam/thirdparty/pangolin/python/examples/SimplePlot.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/geodesc/__init__.py'
 outputting to 'pyslam/thirdparty/geodesc/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/geodesc/examples/extract_features_of_hpatches.py'
 outputting to 'pyslam/thirdparty/geodesc/examples/extract_features_of_hpatches.py'
--------------------------------------------------------------------------------

21:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
23:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
25:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
27:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
29:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
54:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
69:4: ERROR: Using member tf.flags.mark_flags_as_required in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
70:4: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/geodesc/examples/image_matching.py'
 outputting to 'pyslam/thirdparty/geodesc/examples/image_matching.py'
--------------------------------------------------------------------------------

26:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
28:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
30:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
32:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
34:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
36:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
38:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
41:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
43:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
45:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
123:11: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
156:4: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/geodesc/utils/opencvhelper.py'
 outputting to 'pyslam/thirdparty/geodesc/utils/opencvhelper.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/geodesc/utils/__init__.py'
 outputting to 'pyslam/thirdparty/geodesc/utils/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/geodesc/utils/tf.py'
 outputting to 'pyslam/thirdparty/geodesc/utils/tf.py'
--------------------------------------------------------------------------------

15:4: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/superpoint/demo_superpoint.py'
 outputting to 'pyslam/thirdparty/superpoint/demo_superpoint.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/keynet_changes/keynet_architecture.py'
 outputting to 'pyslam/thirdparty/keynet_changes/keynet_architecture.py'
--------------------------------------------------------------------------------

8:4: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/orbslam2_features/test.py'
 outputting to 'pyslam/thirdparty/orbslam2_features/test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet_changes/inference.py'
 outputting to 'pyslam/thirdparty/lfnet_changes/inference.py'
--------------------------------------------------------------------------------

8:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

8:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
9:21: INFO: Added keywords to args of function 'tf.shape'
10:17: INFO: Added keywords to args of function 'tf.shape'
11:16: INFO: Added keywords to args of function 'tf.shape'
63:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

63:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
65:21: INFO: Added keywords to args of function 'tf.shape'
66:17: INFO: Added keywords to args of function 'tf.shape'
67:16: INFO: Added keywords to args of function 'tf.shape'
86:24: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
100:12: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
100:12: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
102:27: INFO: Added keywords to args of function 'tf.reduce_max'
102:72: INFO: Renamed keyword argument for tf.reduce_max from keep_dims to keepdims
103:29: INFO: Added keywords to args of function 'tf.argmax'
133:12: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
133:12: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
135:19: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
151:47: INFO: Added keywords to args of function 'tf.reduce_max'
151:92: INFO: Renamed keyword argument for tf.reduce_max from keep_dims to keepdims
152:25: INFO: Added keywords to args of function 'tf.argmax'
160:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

160:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
162:21: INFO: Added keywords to args of function 'tf.shape'
163:17: INFO: Added keywords to args of function 'tf.shape'
164:16: INFO: Added keywords to args of function 'tf.shape'
178:21: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
195:12: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
195:12: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
197:27: INFO: Added keywords to args of function 'tf.reduce_max'
197:66: INFO: Renamed keyword argument for tf.reduce_max from keep_dims to keepdims
198:29: INFO: Added keywords to args of function 'tf.argmax'
228:12: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
228:12: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
230:19: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
244:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

244:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
265:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

265:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
285:36: INFO: Added keywords to args of function 'tf.reduce_sum'
285:50: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
289:25: INFO: Added keywords to args of function 'tf.reduce_sum'
290:18: INFO: Added keywords to args of function 'tf.reduce_sum'
291:17: INFO: Added keywords to args of function 'tf.reduce_sum'
291:67: INFO: Added keywords to args of function 'tf.reduce_sum'
300:21: INFO: Added keywords to args of function 'tf.reduce_sum'
308:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

308:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
309:20: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
310:20: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
311:19: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
312:19: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
313:25: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
314:28: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
316:13: INFO: Added keywords to args of function 'tf.shape'
323:40: INFO: Added keywords to args of function 'tf.reduce_sum'
323:54: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
327:29: INFO: Added keywords to args of function 'tf.reduce_sum'
328:22: INFO: Added keywords to args of function 'tf.reduce_sum'
329:21: INFO: Added keywords to args of function 'tf.reduce_sum'
329:71: INFO: Added keywords to args of function 'tf.reduce_sum'
345:25: INFO: Added keywords to args of function 'tf.reduce_sum'
352:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

352:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/setup.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/setup.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_text/train_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/adversarial_text/train_utils.py'
--------------------------------------------------------------------------------

27:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
46:2: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
51:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
53:24: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
57:20: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
58:30: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
60:20: INFO: Renamed 'tf.train.Supervisor' to 'tf.compat.v1.train.Supervisor'
61:30: INFO: Renamed 'tf.train.Supervisor' to 'tf.compat.v1.train.Supervisor'
64:7: INFO: Renamed 'tf.train.Supervisor' to 'tf.compat.v1.train.Supervisor'
76:13: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
84:17: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
96:6: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
104:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
127:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_text/inputs.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/adversarial_text/inputs.py'
--------------------------------------------------------------------------------

95:8: INFO: Renamed 'tf.contrib.rnn.LSTMStateTuple' to 'tf.nn.rnn_cell.LSTMStateTuple'
170:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
171:15: INFO: Renamed 'tf.train.string_input_producer' to 'tf.compat.v1.train.string_input_producer'
172:11: INFO: Renamed 'tf.TFRecordReader' to 'tf.compat.v1.TFRecordReader'
174:18: INFO: Renamed 'tf.parse_single_sequence_example' to 'tf.io.parse_single_sequence_example'
178:14: INFO: Renamed 'tf.FixedLenSequenceFeature' to 'tf.io.FixedLenSequenceFeature'
180:14: INFO: Renamed 'tf.FixedLenSequenceFeature' to 'tf.io.FixedLenSequenceFeature'
182:14: INFO: Renamed 'tf.FixedLenSequenceFeature' to 'tf.io.FixedLenSequenceFeature'
215:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
233:10: ERROR: Using member tf.contrib.training.batch_sequences_with_states in deprecated module tf.contrib. tf.contrib.training.batch_sequences_with_states cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
237:19: INFO: Added keywords to args of function 'tf.shape'
278:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

278:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_text/graphs_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/adversarial_text/graphs_test.py'
--------------------------------------------------------------------------------

35:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
122:11: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
151:4: INFO: Renamed 'tf.reset_default_graph' to 'tf.compat.v1.reset_default_graph'
161:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
162:6: INFO: Renamed 'tf.train.start_queue_runners' to 'tf.compat.v1.train.start_queue_runners'
168:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
169:6: INFO: Renamed 'tf.train.start_queue_runners' to 'tf.compat.v1.train.start_queue_runners'
187:29: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
215:29: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_text/layers.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/adversarial_text/layers.py'
--------------------------------------------------------------------------------

69:22: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
69:22: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
79:15: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
79:15: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
87:17: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

92:33: INFO: Added keywords to args of function 'tf.reduce_sum'
93:11: INFO: Added keywords to args of function 'tf.reduce_sum'
93:43: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
94:10: INFO: Added keywords to args of function 'tf.reduce_sum'
94:61: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
114:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
115:13: INFO: Renamed 'tf.contrib.rnn.MultiRNNCell' to 'tf.compat.v1.nn.rnn_cell.MultiRNNCell'
116:10: INFO: Renamed 'tf.contrib.rnn.BasicLSTMCell' to 'tf.compat.v1.nn.rnn_cell.BasicLSTMCell'
119:20: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
125:29: INFO: Renamed 'tf.nn.dynamic_rnn' to 'tf.compat.v1.nn.dynamic_rnn'
131:19: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

185:16: WARNING: tf.nn.sampled_softmax_loss requires manual check. `partition_strategy` has been removed from tf.nn.sampled_softmax_loss.  The 'div' strategy will be used by default.
186:18: INFO: Added keywords to args of function 'tf.transpose'
202:8: INFO: Added keywords to args of function 'tf.reduce_sum'
220:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

220:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
231:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
231:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
233:8: INFO: Added keywords to args of function 'tf.reduce_sum'
247:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

247:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
250:8: INFO: Added keywords to args of function 'tf.reduce_sum'
256:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

256:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
262:13: INFO: Added keywords to args of function 'tf.argmax'
268:15: INFO: Added keywords to args of function 'tf.reduce_sum'
269:15: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
303:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

303:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
305:12: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
306:12: INFO: Added keywords to args of function 'tf.gradients'
327:9: INFO: tf.train.exponential_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

327:9: INFO: Renamed 'tf.train.exponential_decay' to 'tf.compat.v1.train.exponential_decay'
329:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
329:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
330:10: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
337:12: INFO: Renamed 'tf.train.SyncReplicasOptimizer' to 'tf.compat.v1.train.SyncReplicasOptimizer'
349:6: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
349:27: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
353:8: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
356:6: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
357:6: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
369:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
370:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
372:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
378:11: INFO: Added keywords to args of function 'tf.reduce_mean'
379:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
379:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
380:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

380:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
381:23: INFO: Added keywords to args of function 'tf.reduce_mean'
382:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
382:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
383:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
383:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
383:34: INFO: Added keywords to args of function 'tf.reduce_max'
384:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
384:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
384:34: INFO: Added keywords to args of function 'tf.reduce_min'
385:4: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
385:4: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
394:6: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
394:6: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
395:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
395:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
395:46: INFO: Renamed 'tf.global_norm' to 'tf.linalg.global_norm'
397:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_text/adversarial_losses.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/adversarial_text/adversarial_losses.py'
--------------------------------------------------------------------------------

25:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
54:10: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
54:33: INFO: Added keywords to args of function 'tf.shape'
61:10: INFO: Added keywords to args of function 'tf.gradients'
101:6: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
101:29: INFO: Added keywords to args of function 'tf.shape'
113:9: INFO: Added keywords to args of function 'tf.gradients'
126:11: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
126:34: INFO: Added keywords to args of function 'tf.shape'
134:10: INFO: Added keywords to args of function 'tf.gradients'
157:22: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
157:45: INFO: Added keywords to args of function 'tf.shape'
167:15: INFO: Added keywords to args of function 'tf.gradients'
195:10: INFO: Added keywords to args of function 'tf.reduce_max'
195:43: INFO: Renamed keyword argument for tf.reduce_max from keep_dims to keepdims
197:6: INFO: Added keywords to args of function 'tf.reduce_sum'
197:50: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
226:9: INFO: Added keywords to args of function 'tf.reduce_sum'
229:15: INFO: Added keywords to args of function 'tf.reduce_sum'
230:15: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
235:21: INFO: Added keywords to args of function 'tf.reduce_sum'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_text/graphs.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/adversarial_text/graphs.py'
--------------------------------------------------------------------------------

31:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
121:23: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
182:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
182:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
194:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
194:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
198:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
198:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
204:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
204:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
240:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
240:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
269:12: ERROR: Using member tf.contrib.metrics.streaming_accuracy in deprecated module tf.contrib. tf.contrib.metrics.streaming_accuracy cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
384:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

384:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
433:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
433:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
438:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
438:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
442:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
442:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
450:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
450:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
499:12: ERROR: Using member tf.contrib.metrics.streaming_accuracy in deprecated module tf.contrib. tf.contrib.metrics.streaming_accuracy cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
624:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

624:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
654:5: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
655:9: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
674:11: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
675:12: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_text/gen_vocab.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/adversarial_text/gen_vocab.py'
--------------------------------------------------------------------------------

30:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
71:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
71:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
96:2: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
101:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_text/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/adversarial_text/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_text/gen_data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/adversarial_text/gen_data.py'
--------------------------------------------------------------------------------

41:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
61:9: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
201:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
201:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
202:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
209:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
212:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
217:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_text/evaluate.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/adversarial_text/evaluate.py'
--------------------------------------------------------------------------------

30:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
60:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
78:7: INFO: Renamed 'tf.train.Supervisor' to 'tf.compat.v1.train.Supervisor'
93:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
96:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
109:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
110:12: INFO: tf.summary.Summary requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
110:12: INFO: Renamed 'tf.summary.Summary' to 'tf.compat.v1.summary.Summary'
113:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
116:31: INFO: Renamed 'tf.train.get_global_step' to 'tf.compat.v1.train.get_global_step'
117:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
122:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
122:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
123:2: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
124:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
128:10: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
129:19: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
129:19: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
130:28: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
140:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_text/train_classifier.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/adversarial_text/train_classifier.py'
--------------------------------------------------------------------------------

41:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
50:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
50:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
51:17: INFO: Renamed 'tf.train.replica_device_setter' to 'tf.compat.v1.train.replica_device_setter'
63:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_text/pretrain.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/adversarial_text/pretrain.py'
--------------------------------------------------------------------------------

33:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
38:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
38:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
39:17: INFO: Renamed 'tf.train.replica_device_setter' to 'tf.compat.v1.train.replica_device_setter'
46:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_text/data/data_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/adversarial_text/data/data_utils.py'
--------------------------------------------------------------------------------

65:9: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
327:2: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_text/data/document_generators.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/adversarial_text/data/document_generators.py'
--------------------------------------------------------------------------------

31:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
180:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
247:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
293:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
344:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_text/data/data_utils_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/adversarial_text/data/data_utils_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_text/data/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/adversarial_text/data/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/a3c_blogpost/a3c_cartpole.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/a3c_blogpost/a3c_cartpole.py'
--------------------------------------------------------------------------------

17:0: INFO: Renamed 'tf.enable_eager_execution' to 'tf.compat.v1.enable_eager_execution'
138:15: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
142:22: INFO: Added keywords to args of function 'tf.convert_to_tensor'
193:30: INFO: Added keywords to args of function 'tf.convert_to_tensor'
267:12: INFO: Added keywords to args of function 'tf.convert_to_tensor'
330:10: INFO: Added keywords to args of function 'tf.convert_to_tensor'
341:8: INFO: Added keywords to args of function 'tf.convert_to_tensor'
344:16: INFO: Added keywords to args of function 'tf.convert_to_tensor'
351:14: INFO: Renamed 'tf.nn.softmax_cross_entropy_with_logits_v2' to 'tf.nn.softmax_cross_entropy_with_logits'
357:17: INFO: Added keywords to args of function 'tf.reduce_mean'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/train.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/train.py'
--------------------------------------------------------------------------------

26:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
27:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
28:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
29:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
31:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
32:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
33:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
34:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
37:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
38:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
39:0: ERROR: Using member tf.flags.DEFINE_bool in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
40:0: ERROR: Using member tf.flags.DEFINE_bool in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
41:0: ERROR: Using member tf.flags.DEFINE_bool in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
43:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
67:2: ERROR: Using member tf.contrib.tfprof.model_analyzer.print_model_analysis in deprecated module tf.contrib. tf.contrib.tfprof.model_analyzer.print_model_analysis cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
67:56: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
69:19: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
69:19: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
70:7: INFO: Renamed 'tf.train.Supervisor' to 'tf.compat.v1.train.Supervisor'
76:27: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
106:11: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
107:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
108:11: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
110:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
122:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/model.py'
--------------------------------------------------------------------------------

26:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
70:6: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
70:6: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
71:24: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
71:24: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
77:8: INFO: tf.train.exponential_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

77:8: INFO: Renamed 'tf.train.exponential_decay' to 'tf.compat.v1.train.exponential_decay'
79:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
79:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
80:16: INFO: Renamed 'tf.train.GradientDescentOptimizer' to 'tf.compat.v1.train.GradientDescentOptimizer'
89:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
91:18: INFO: Added keywords to args of function 'tf.reduce_mean'
92:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
92:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
95:26: INFO: Added keywords to args of function 'tf.reduce_mean'
97:32: INFO: Renamed 'tf.log' to 'tf.math.log'
98:24: INFO: Renamed 'tf.check_numerics' to 'tf.debugging.check_numerics'
99:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
99:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
102:25: INFO: Added keywords to args of function 'tf.reduce_mean'
105:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
105:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
108:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
108:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
118:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
135:18: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
141:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
151:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
173:11: INFO: Added keywords to args of function 'tf.nn.depthwise_conv2d'
180:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
201:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
201:14: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
205:20: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
205:20: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
222:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/sprites_gen.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/sprites_gen.py'
--------------------------------------------------------------------------------

28:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
29:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
36:10: INFO: Renamed 'tf.gfile.Glob' to 'tf.io.gfile.glob'
36:24: ERROR: Using member tf.flags.FLAGS.data_filepattern in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
65:17: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
66:6: ERROR: Using member tf.flags.FLAGS.out_file.replace in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
67:16: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
68:6: ERROR: Using member tf.flags.FLAGS.out_file.replace in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
98:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/example_gen.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/example_gen.py'
--------------------------------------------------------------------------------

25:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
66:11: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
66:39: ERROR: Using member tf.flags.FLAGS.out_file in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
67:12: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
67:40: ERROR: Using member tf.flags.FLAGS.out_file  in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
93:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/eval.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/eval.py'
--------------------------------------------------------------------------------

29:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
30:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
31:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
34:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
35:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
36:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
37:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
40:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
41:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
43:0: ERROR: Using member tf.flags.DEFINE_bool in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
44:0: ERROR: Using member tf.flags.DEFINE_bool in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
45:0: ERROR: Using member tf.flags.DEFINE_bool in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
47:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
72:19: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
72:19: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
73:10: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
74:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
74:31: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
75:2: INFO: Renamed 'tf.train.start_queue_runners' to 'tf.compat.v1.train.start_queue_runners'
91:11: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
95:9: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
97:9: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
119:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/reader.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/next_frame_prediction/cross_conv/reader.py'
--------------------------------------------------------------------------------

41:8: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
62:14: INFO: Renamed 'tf.gfile.Glob' to 'tf.io.gfile.glob'
63:19: INFO: Renamed 'tf.train.string_input_producer' to 'tf.compat.v1.train.string_input_producer'
64:11: INFO: Renamed 'tf.TFRecordReader' to 'tf.compat.v1.TFRecordReader'
67:21: INFO: Renamed 'tf.FixedLenSequenceFeature' to 'tf.io.FixedLenSequenceFeature'
69:16: INFO: Renamed 'tf.parse_single_sequence_example' to 'tf.io.parse_single_sequence_example'
74:15: INFO: Renamed 'tf.train.shuffle_batch' to 'tf.compat.v1.train.shuffle_batch'
81:15: INFO: Renamed 'tf.train.batch' to 'tf.compat.v1.train.batch'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/export_inference_graph.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/export_inference_graph.py'
--------------------------------------------------------------------------------

111:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
112:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
137:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
138:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
139:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
145:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
162:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/inputs.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/inputs.py'
--------------------------------------------------------------------------------

63:23: INFO: Added keywords to args of function 'tf.shape'
67:9: INFO: Added keywords to args of function 'tf.cond'
67:17: INFO: Added keywords to args of function 'tf.size'
163:23: INFO: Added keywords to args of function 'tf.shape'
168:6: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
168:32: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
169:6: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
169:31: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
239:68: INFO: Added keywords to args of function 'tf.shape'
454:6: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
456:15: INFO: Added keywords to args of function 'tf.cond'
470:24: INFO: Renamed 'tf.string_to_hash_bucket_fast' to 'tf.strings.to_hash_bucket_fast'
750:14: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/export_tflite_ssd_graph.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/export_tflite_ssd_graph.py'
--------------------------------------------------------------------------------

99:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
133:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
143:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/model_hparams.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/model_hparams.py'
--------------------------------------------------------------------------------

37:12: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/model_lib_v2.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/model_lib_v2.py'
--------------------------------------------------------------------------------

298:2: INFO: Renamed 'tf.train.init_from_checkpoint' to 'tf.compat.v1.train.init_from_checkpoint'
378:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
493:10: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
498:10: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
581:19: INFO: Renamed 'tf.contrib.tpu.outside_compilation' to 'tf.compat.v1.tpu.outside_compilation'
622:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
718:4: INFO: Renamed 'tf.logging.warning' to 'tf.compat.v1.logging.warning'
730:4: INFO: Renamed 'tf.logging.warning' to 'tf.compat.v1.logging.warning'
756:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
773:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
778:10: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
782:10: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
788:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/exporter.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/exporter.py'
--------------------------------------------------------------------------------

30:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
59:37: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
64:18: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
64:18: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
75:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
110:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
111:19: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
113:20: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
114:6: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
121:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
135:33: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
162:32: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
278:4: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
302:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
306:16: INFO: Renamed 'tf.saved_model.builder.SavedModelBuilder' to 'tf.compat.v1.saved_model.builder.SavedModelBuilder'
309:20: INFO: Renamed 'tf.saved_model.utils.build_tensor_info' to 'tf.compat.v1.saved_model.utils.build_tensor_info'
312:33: INFO: Renamed 'tf.saved_model.utils.build_tensor_info' to 'tf.compat.v1.saved_model.utils.build_tensor_info'
315:10: INFO: Renamed 'tf.saved_model.signature_def_utils.build_signature_def' to 'tf.compat.v1.saved_model.signature_def_utils.build_signature_def'
318:26: INFO: Renamed 'tf.saved_model.signature_constants.PREDICT_METHOD_NAME' to 'tf.saved_model.PREDICT_METHOD_NAME'
323:11: INFO: Renamed 'tf.saved_model.tag_constants.SERVING' to 'tf.saved_model.SERVING'
325:14: INFO: Renamed 'tf.saved_model.signature_constants.DEFAULT_SERVING_SIGNATURE_DEF_KEY' to 'tf.saved_model.DEFAULT_SERVING_SIGNATURE_DEF_KEY'
330:6: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
342:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
343:14: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
346:6: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
402:2: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
415:26: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
426:8: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
432:10: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
436:26: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
441:26: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
446:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
455:22: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
527:6: ERROR: Using member (
      tf.contrib.tfprof.model_analyzer.TRAINABLE_VARS_PARAMS_STAT_OPTIONS) in deprecated module tf.contrib. (
      tf.contrib.tfprof.model_analyzer.TRAINABLE_VARS_PARAMS_STAT_OPTIONS) cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
528:24: ERROR: Using member tf.contrib.tfprof.model_analyzer.FLOAT_OPS_OPTIONS in deprecated module tf.contrib. tf.contrib.tfprof.model_analyzer.FLOAT_OPS_OPTIONS cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
537:2: ERROR: Using member tf.contrib.tfprof.model_analyzer.print_model_analysis in deprecated module tf.contrib. tf.contrib.tfprof.model_analyzer.print_model_analysis cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
541:2: ERROR: Using member tf.contrib.tfprof.model_analyzer.print_model_analysis in deprecated module tf.contrib. tf.contrib.tfprof.model_analyzer.print_model_analysis cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/model_tpu_main.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/model_tpu_main.py'
--------------------------------------------------------------------------------

32:0: ERROR: Using member tf.flags.DEFINE_bool in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
80:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
88:6: INFO: Renamed 'tf.contrib.cluster_resolver.TPUClusterResolver' to 'tf.distribute.cluster_resolver.TPUClusterResolver'
94:11: INFO: Renamed 'tf.contrib.tpu.RunConfig' to 'tf.compat.v1.estimator.tpu.RunConfig'
98:17: INFO: Renamed 'tf.contrib.tpu.TPUConfig' to 'tf.compat.v1.estimator.tpu.TPUConfig'
142:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/inputs_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/inputs_test.py'
--------------------------------------------------------------------------------

34:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
39:23: INFO: Renamed 'tf.resource_loader.get_data_files_path' to 'tf.compat.v1.resource_loader.get_data_files_path'
41:32: INFO: Renamed 'tf.resource_loader.get_data_files_path' to 'tf.compat.v1.resource_loader.get_data_files_path'
43:27: INFO: Renamed 'tf.resource_loader.get_data_files_path' to 'tf.compat.v1.resource_loader.get_data_files_path'
64:13: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

65:2: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
65:23: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
467:25: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
481:25: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
488:4: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
669:32: INFO: Added keywords to args of function 'tf.shape'
673:23: INFO: Added keywords to args of function 'tf.shape'
747:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
936:22: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
939:24: INFO: Added keywords to args of function 'tf.transpose'
940:12: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
940:35: INFO: Added keywords to args of function 'tf.transpose'
943:21: INFO: Added keywords to args of function 'tf.shape'
975:43: INFO: Added keywords to args of function 'tf.shape'
1032:40: INFO: Added keywords to args of function 'tf.shape'
1089:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
1091:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
1093:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
1095:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
1097:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
1124:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
1126:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
1128:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
1167:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
1182:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
1184:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
1204:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
1206:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
1208:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
1220:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
1235:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
1237:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
1257:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
1259:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/eval_util.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/eval_util.py'
--------------------------------------------------------------------------------

40:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
80:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
81:19: INFO: tf.summary.FileWriterCache requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
81:19: INFO: Renamed 'tf.summary.FileWriterCache' to 'tf.compat.v1.summary.FileWriterCache'
83:14: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
84:8: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
87:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
88:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
168:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
222:12: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
223:6: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
225:16: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
229:19: INFO: tf.summary.FileWriterCache requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
229:19: INFO: Renamed 'tf.summary.FileWriterCache' to 'tf.compat.v1.summary.FileWriterCache'
232:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
308:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
308:34: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
309:11: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
310:11: INFO: Renamed 'tf.local_variables_initializer' to 'tf.compat.v1.local_variables_initializer'
311:11: INFO: Renamed 'tf.tables_initializer' to 'tf.compat.v1.tables_initializer'
319:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
323:4: INFO: Renamed 'tf.train.write_graph' to 'tf.io.write_graph'
327:7: ERROR: Using member tf.contrib.slim.queues.QueueRunners in deprecated module tf.contrib. tf.contrib.slim.queues.QueueRunners cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
331:10: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
341:12: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
366:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
368:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
371:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
372:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
378:12: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
381:12: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
388:20: INFO: Renamed 'tf.train.global_step' to 'tf.compat.v1.train.global_step'
388:47: INFO: Renamed 'tf.train.get_global_step' to 'tf.compat.v1.train.get_global_step'
395:10: INFO: Renamed 'tf.logging.error' to 'tf.compat.v1.logging.error'
495:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
499:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
502:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
523:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
529:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
558:6: INFO: Removed argument align_corners for function tf.image.resize_images
554:9: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
627:19: INFO: Added keywords to args of function 'tf.shape'
756:23: INFO: Added keywords to args of function 'tf.shape'
757:19: INFO: Added keywords to args of function 'tf.shape'
767:23: INFO: Added keywords to args of function 'tf.shape'
768:19: INFO: Added keywords to args of function 'tf.shape'
796:8: INFO: Changed tf.to_int64 call to tf.cast(..., dtype=tf.int64).
850:26: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/model_lib.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/model_lib.py'
--------------------------------------------------------------------------------

86:28: INFO: Added keywords to args of function 'tf.shape'
97:6: INFO: Added keywords to args of function 'tf.argmax'
300:11: INFO: Renamed 'tf.contrib.tpu.bfloat16_scope' to 'tf.compat.v1.tpu.bfloat16_scope'
315:21: INFO: Renamed 'tf.contrib.tpu.outside_compilation' to 'tf.compat.v1.tpu.outside_compilation'
347:12: INFO: Renamed 'tf.train.init_from_checkpoint' to 'tf.compat.v1.train.init_from_checkpoint'
349:19: INFO: Renamed 'tf.train.Scaffold' to 'tf.compat.v1.train.Scaffold'
353:10: INFO: Renamed 'tf.train.init_from_checkpoint' to 'tf.compat.v1.train.init_from_checkpoint'
380:20: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
386:29: INFO: Renamed 'tf.contrib.tpu.CrossShardOptimizer' to 'tf.compat.v1.tpu.CrossShardOptimizer'
397:28: ERROR: Using member tf.contrib.framework.filter_variables in deprecated module tf.contrib. tf.contrib.framework.filter_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
398:10: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
408:10: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
408:10: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
412:17: ERROR: Using member tf.contrib.layers.optimize_loss in deprecated module tf.contrib. tf.contrib.layers.optimize_loss cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
426:10: INFO: Renamed 'tf.saved_model.signature_constants.PREDICT_METHOD_NAME' to 'tf.saved_model.PREDICT_METHOD_NAME'
484:36: INFO: tf.metrics.mean requires manual check. tf.metrics have been replaced with object oriented versions in TF 2.0 and after. The metric function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
484:36: INFO: Renamed 'tf.metrics.mean' to 'tf.compat.v1.metrics.mean'
496:16: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
499:19: INFO: Renamed 'tf.train.Scaffold' to 'tf.compat.v1.train.Scaffold'
503:13: INFO: Renamed 'tf.contrib.tpu.TPUEstimatorSpec' to 'tf.compat.v1.estimator.tpu.TPUEstimatorSpec'
515:16: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
519:8: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
519:29: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
520:19: INFO: Renamed 'tf.train.Scaffold' to 'tf.compat.v1.train.Scaffold'
628:4: INFO: Renamed 'tf.logging.warning' to 'tf.compat.v1.logging.warning'
641:4: INFO: Renamed 'tf.logging.warning' to 'tf.compat.v1.logging.warning'
679:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
684:16: INFO: Renamed 'tf.contrib.tpu.TPUEstimator' to 'tf.compat.v1.estimator.tpu.TPUEstimator'
785:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
788:14: INFO: Renamed 'tf.contrib.training.checkpoints_iterator' to 'tf.train.checkpoints_iterator'
792:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
796:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
801:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
806:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
846:2: INFO: Renamed 'tf.logging.warning' to 'tf.compat.v1.logging.warning'
865:6: ERROR: Using member tf.contrib.learn.utils.saved_model_export_utils.make_export_strategy in deprecated module tf.contrib. tf.contrib.learn.utils.saved_model_export_utils.make_export_strategy cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
869:9: ERROR: Using member tf.contrib.learn.Experiment in deprecated module tf.contrib. tf.contrib.learn.Experiment cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/eval_util_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/eval_util_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/model_lib_v2_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/model_lib_v2_test.py'
--------------------------------------------------------------------------------

37:22: INFO: Renamed 'tf.resource_loader.get_data_files_path' to 'tf.compat.v1.resource_loader.get_data_files_path'
43:22: INFO: Renamed 'tf.resource_loader.get_data_files_path' to 'tf.compat.v1.resource_loader.get_data_files_path'
49:22: INFO: Renamed 'tf.resource_loader.get_data_files_path' to 'tf.compat.v1.resource_loader.get_data_files_path'
85:16: INFO: Renamed 'tf.test.get_temp_dir' to 'tf.compat.v1.test.get_temp_dir'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/exporter_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/exporter_test.py'
--------------------------------------------------------------------------------

39:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
55:21: INFO: Renamed 'tf.layers.conv2d' to 'tf.compat.v1.layers.conv2d'
116:10: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
121:6: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
128:14: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
129:13: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
132:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
137:21: INFO: Renamed 'tf.GraphDef' to 'tf.compat.v1.GraphDef'
138:11: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
222:21: INFO: Renamed 'tf.saved_model.loader.load' to 'tf.compat.v1.saved_model.loader.load'
223:19: INFO: Renamed 'tf.saved_model.tag_constants.SERVING' to 'tf.saved_model.SERVING'
329:10: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
712:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
728:14: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
731:26: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
788:11: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
817:21: INFO: Renamed 'tf.saved_model.loader.load' to 'tf.compat.v1.saved_model.loader.load'
818:19: INFO: Renamed 'tf.saved_model.tag_constants.SERVING' to 'tf.saved_model.SERVING'
865:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
881:14: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
884:26: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
903:21: INFO: Renamed 'tf.saved_model.loader.load' to 'tf.compat.v1.saved_model.loader.load'
904:19: INFO: Renamed 'tf.saved_model.tag_constants.SERVING' to 'tf.saved_model.SERVING'
964:20: INFO: Renamed 'tf.train.import_meta_graph' to 'tf.compat.v1.train.import_meta_graph'
998:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
1013:14: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
1016:30: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
1025:20: INFO: Renamed 'tf.train.import_meta_graph' to 'tf.compat.v1.train.import_meta_graph'
1083:15: ERROR: Using member tf.contrib.slim.conv2d in deprecated module tf.contrib. tf.contrib.slim.conv2d cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
1109:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1109:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1114:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1114:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/model_main.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/model_main.py'
--------------------------------------------------------------------------------

109:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/export_tflite_ssd_graph_lib_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/export_tflite_ssd_graph_lib_test.py'
--------------------------------------------------------------------------------

48:15: ERROR: Using member tf.contrib.slim.conv2d in deprecated module tf.contrib. tf.contrib.slim.conv2d cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
58:9: INFO: Added keywords to args of function 'tf.convert_to_tensor'
89:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
93:6: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
101:14: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
102:13: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
105:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
108:9: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
117:18: INFO: Renamed 'tf.GraphDef' to 'tf.compat.v1.GraphDef'
118:11: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
332:18: INFO: Renamed 'tf.GraphDef' to 'tf.compat.v1.GraphDef'
333:11: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
364:18: INFO: Renamed 'tf.GraphDef' to 'tf.compat.v1.GraphDef'
365:11: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
383:18: INFO: Renamed 'tf.GraphDef' to 'tf.compat.v1.GraphDef'
384:11: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/export_tflite_ssd_graph_lib.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/export_tflite_ssd_graph_lib.py'
--------------------------------------------------------------------------------

52:7: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
193:2: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
237:10: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
249:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

249:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
267:2: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
286:8: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
292:10: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
295:22: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
326:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
329:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/model_lib_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/model_lib_test.py'
--------------------------------------------------------------------------------

45:22: INFO: Renamed 'tf.resource_loader.get_data_files_path' to 'tf.compat.v1.resource_loader.get_data_files_path'
51:22: INFO: Renamed 'tf.resource_loader.get_data_files_path' to 'tf.compat.v1.resource_loader.get_data_files_path'
57:22: INFO: Renamed 'tf.resource_loader.get_data_files_path' to 'tf.compat.v1.resource_loader.get_data_files_path'
86:13: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

87:2: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
87:23: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
95:4: INFO: Renamed 'tf.reset_default_graph' to 'tf.compat.v1.reset_default_graph'
178:20: INFO: Renamed 'tf.saved_model.signature_constants.PREDICT_METHOD_NAME' to 'tf.saved_model.PREDICT_METHOD_NAME'
336:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
337:36: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
338:38: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
340:38: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
381:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
382:36: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
383:38: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
384:38: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
385:34: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/tf_record_creation_util_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/dataset_tools/tf_record_creation_util_test.py'
--------------------------------------------------------------------------------

30:23: INFO: Renamed 'tf.test.get_temp_dir' to 'tf.compat.v1.test.get_temp_dir'
36:23: INFO: Renamed 'tf.test.get_temp_dir' to 'tf.compat.v1.test.get_temp_dir'
37:21: INFO: Renamed 'tf.python_io.tf_record_iterator' to 'tf.compat.v1.python_io.tf_record_iterator'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_kitti_tf_record_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_kitti_tf_record_test.py'
--------------------------------------------------------------------------------

44:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_pascal_tf_record.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_pascal_tf_record.py'
--------------------------------------------------------------------------------

41:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
87:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
158:11: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
172:11: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
185:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_kitti_tf_record.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_kitti_tf_record.py'
--------------------------------------------------------------------------------

51:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
56:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
61:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
65:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
67:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
69:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
107:17: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
109:15: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
112:18: INFO: Renamed 'tf.gfile.ListDirectory' to 'tf.io.gfile.listdir'
150:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
310:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_pet_tf_record.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_pet_tf_record.py'
--------------------------------------------------------------------------------

46:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
109:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
117:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
205:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
248:11: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
318:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/oid_hierarchical_labels_expansion.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/dataset_tools/oid_hierarchical_labels_expansion.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_oid_tf_record.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_oid_tf_record.py'
--------------------------------------------------------------------------------

49:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
51:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
54:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
56:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
57:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
61:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
63:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
67:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
67:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
85:15: INFO: Renamed 'tf.gfile.Glob' to 'tf.io.gfile.glob'
92:2: INFO: Renamed 'tf.logging.log' to 'tf.compat.v1.logging.log'
92:17: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
100:6: INFO: Renamed 'tf.logging.log_every_n' to 'tf.compat.v1.logging.log_every_n'
100:29: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
106:11: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
117:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_coco_tf_record.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_coco_tf_record.py'
--------------------------------------------------------------------------------

50:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
51:0: ERROR: Using member tf.flags.DEFINE_boolean in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
54:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
56:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
58:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
60:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
62:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
64:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
66:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
70:0: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
70:25: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
113:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
155:6: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
207:6: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
217:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
230:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
236:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
243:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
255:9: INFO: Renamed 'tf.gfile.IsDirectory' to 'tf.io.gfile.isdir'
256:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
282:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/oid_tfrecord_creation_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/dataset_tools/oid_tfrecord_creation_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/dataset_tools/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/oid_tfrecord_creation.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/dataset_tools/oid_tfrecord_creation.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/tf_record_creation_util.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/dataset_tools/tf_record_creation_util.py'
--------------------------------------------------------------------------------

42:31: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_pascal_tf_record_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_pascal_tf_record_test.py'
--------------------------------------------------------------------------------

44:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_coco_tf_record_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/dataset_tools/create_coco_tf_record_test.py'
--------------------------------------------------------------------------------

46:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
119:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
200:6: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/dataset_tools/oid_hierarchical_labels_expansion_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/dataset_tools/oid_hierarchical_labels_expansion_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/box_coders/faster_rcnn_box_coder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/box_coders/faster_rcnn_box_coder.py'
--------------------------------------------------------------------------------

82:9: INFO: Renamed 'tf.log' to 'tf.math.log'
83:9: INFO: Renamed 'tf.log' to 'tf.math.log'
90:11: INFO: Added keywords to args of function 'tf.transpose'
104:32: INFO: Added keywords to args of function 'tf.transpose'
118:28: INFO: Added keywords to args of function 'tf.transpose'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/box_coders/mean_stddev_box_coder_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/box_coders/mean_stddev_box_coder_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/box_coders/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/box_coders/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/box_coders/keypoint_box_coder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/box_coders/keypoint_box_coder.py'
--------------------------------------------------------------------------------

98:16: INFO: Added keywords to args of function 'tf.transpose'
110:9: INFO: Renamed 'tf.log' to 'tf.math.log'
111:9: INFO: Renamed 'tf.log' to 'tf.math.log'
128:11: INFO: Added keywords to args of function 'tf.transpose'
143:16: INFO: Added keywords to args of function 'tf.shape'
144:24: INFO: Added keywords to args of function 'tf.transpose'
163:8: INFO: Added keywords to args of function 'tf.transpose'
170:27: INFO: Added keywords to args of function 'tf.transpose'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/box_coders/square_box_coder_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/box_coders/square_box_coder_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/box_coders/mean_stddev_box_coder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/box_coders/mean_stddev_box_coder.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/box_coders/square_box_coder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/box_coders/square_box_coder.py'
--------------------------------------------------------------------------------

93:9: INFO: Renamed 'tf.log' to 'tf.math.log'
99:11: INFO: Added keywords to args of function 'tf.transpose'
114:28: INFO: Added keywords to args of function 'tf.transpose'
126:28: INFO: Added keywords to args of function 'tf.transpose'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/box_coders/faster_rcnn_box_coder_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/box_coders/faster_rcnn_box_coder_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/box_coders/keypoint_box_coder_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/box_coders/keypoint_box_coder_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/tpu_exporters/export_saved_model_tpu_lib_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/tpu_exporters/export_saved_model_tpu_lib_test.py'
--------------------------------------------------------------------------------

29:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
34:22: INFO: Renamed 'tf.resource_loader.get_data_files_path' to 'tf.compat.v1.resource_loader.get_data_files_path'
53:7: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
54:6: INFO: Renamed 'tf.gfile.DeleteRecursively' to 'tf.io.gfile.rmtree'
64:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/tpu_exporters/utils_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/tpu_exporters/utils_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/tpu_exporters/ssd.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/tpu_exporters/ssd.py'
--------------------------------------------------------------------------------

94:24: INFO: Added keywords to args of function 'tf.transpose'
96:18: INFO: Added keywords to args of function 'tf.transpose'
100:38: INFO: Added keywords to args of function 'tf.transpose'
106:12: INFO: Added keywords to args of function 'tf.transpose'
149:24: INFO: Added keywords to args of function 'tf.transpose'
172:26: INFO: Added keywords to args of function 'tf.transpose'
174:11: INFO: Renamed 'tf.contrib.tpu.bfloat16_scope' to 'tf.compat.v1.tpu.bfloat16_scope'
183:8: INFO: Added keywords to args of function 'tf.transpose'
184:8: INFO: Added keywords to args of function 'tf.transpose'
186:8: INFO: Added keywords to args of function 'tf.transpose'
191:11: INFO: Renamed 'tf.contrib.tpu.rewrite' to 'tf.compat.v1.tpu.rewrite'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/tpu_exporters/export_saved_model_tpu.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/tpu_exporters/export_saved_model_tpu.py'
--------------------------------------------------------------------------------

23:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
51:2: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
52:2: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
53:2: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
54:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/tpu_exporters/faster_rcnn.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/tpu_exporters/faster_rcnn.py'
--------------------------------------------------------------------------------

141:24: INFO: Added keywords to args of function 'tf.transpose'
149:26: INFO: Added keywords to args of function 'tf.transpose'
156:8: INFO: Added keywords to args of function 'tf.transpose'
158:8: INFO: Added keywords to args of function 'tf.transpose'
162:8: INFO: Added keywords to args of function 'tf.transpose'
172:11: INFO: Renamed 'tf.contrib.tpu.bfloat16_scope' to 'tf.compat.v1.tpu.bfloat16_scope'
173:15: INFO: Renamed 'tf.contrib.tpu.rewrite' to 'tf.compat.v1.tpu.rewrite'
176:13: INFO: Renamed 'tf.contrib.tpu.rewrite' to 'tf.compat.v1.tpu.rewrite'
191:10: INFO: Added keywords to args of function 'tf.transpose'
193:10: INFO: Added keywords to args of function 'tf.transpose'
196:10: INFO: Added keywords to args of function 'tf.transpose'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/tpu_exporters/export_saved_model_tpu_lib.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/tpu_exporters/export_saved_model_tpu_lib.py'
--------------------------------------------------------------------------------

40:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
73:32: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
77:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
78:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
85:14: INFO: Renamed 'tf.saved_model.builder.SavedModelBuilder' to 'tf.compat.v1.saved_model.builder.SavedModelBuilder'
88:12: INFO: Renamed 'tf.saved_model.utils.build_tensor_info' to 'tf.compat.v1.saved_model.utils.build_tensor_info'
91:11: INFO: Renamed 'tf.saved_model.utils.build_tensor_info' to 'tf.compat.v1.saved_model.utils.build_tensor_info'
95:8: INFO: Renamed 'tf.saved_model.signature_def_utils.build_signature_def' to 'tf.compat.v1.saved_model.signature_def_utils.build_signature_def'
98:24: INFO: Renamed 'tf.saved_model.signature_constants.PREDICT_METHOD_NAME' to 'tf.saved_model.PREDICT_METHOD_NAME'
100:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
102:8: INFO: Renamed 'tf.saved_model.signature_constants.PREDICT_METHOD_NAME' to 'tf.saved_model.PREDICT_METHOD_NAME'
106:12: INFO: Renamed 'tf.saved_model.tag_constants.SERVING' to 'tf.saved_model.SERVING'
107:12: INFO: Renamed 'tf.saved_model.tag_constants.TPU' to 'tf.saved_model.TPU'
110:12: INFO: Renamed 'tf.saved_model.signature_constants.DEFAULT_SERVING_SIGNATURE_DEF_KEY' to 'tf.saved_model.DEFAULT_SERVING_SIGNATURE_DEF_KEY'
117:9: INFO: Renamed 'tf.saved_model.tag_constants.SERVING' to 'tf.saved_model.SERVING'
119:12: INFO: Renamed 'tf.saved_model.signature_constants.DEFAULT_SERVING_SIGNATURE_DEF_KEY' to 'tf.saved_model.DEFAULT_SERVING_SIGNATURE_DEF_KEY'
124:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
125:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
156:32: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
160:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
161:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
163:13: INFO: Renamed 'tf.contrib.tpu.initialize_system' to 'tf.compat.v1.tpu.initialize_system'
173:13: INFO: Renamed 'tf.contrib.tpu.shutdown_system' to 'tf.compat.v1.tpu.shutdown_system'
193:32: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
197:13: INFO: Renamed 'tf.contrib.tpu.initialize_system' to 'tf.compat.v1.tpu.initialize_system'
213:13: INFO: Renamed 'tf.contrib.tpu.shutdown_system' to 'tf.compat.v1.tpu.shutdown_system'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/tpu_exporters/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/tpu_exporters/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/tpu_exporters/utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/tpu_exporters/utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/tpu_exporters/testdata/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/tpu_exporters/testdata/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v2_fpn_feature_extractor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v2_fpn_feature_extractor_test.py'
--------------------------------------------------------------------------------

298:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
312:22: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
407:28: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
426:50: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v3_feature_extractor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v3_feature_extractor.py'
--------------------------------------------------------------------------------

136:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/faster_rcnn_mobilenet_v1_feature_extractor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/faster_rcnn_mobilenet_v1_feature_extractor_test.py'
--------------------------------------------------------------------------------

37:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
41:21: INFO: Added keywords to args of function 'tf.shape'
43:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
52:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
56:21: INFO: Added keywords to args of function 'tf.shape'
58:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
67:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
71:21: INFO: Added keywords to args of function 'tf.shape'
73:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
86:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
89:21: INFO: Added keywords to args of function 'tf.shape'
91:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
102:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
111:28: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
116:21: INFO: Added keywords to args of function 'tf.shape'
118:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v3_feature_extractor_testbase.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v3_feature_extractor_testbase.py'
--------------------------------------------------------------------------------

109:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
116:34: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/embedded_ssd_mobilenet_v1_feature_extractor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/embedded_ssd_mobilenet_v1_feature_extractor_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_resnet_v1_ppn_feature_extractor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_resnet_v1_ppn_feature_extractor.py'
--------------------------------------------------------------------------------

139:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v1_feature_extractor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v1_feature_extractor.py'
--------------------------------------------------------------------------------

116:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v1_feature_extractor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v1_feature_extractor_test.py'
--------------------------------------------------------------------------------

269:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
280:22: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_inception_v2_feature_extractor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_inception_v2_feature_extractor.py'
--------------------------------------------------------------------------------

123:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/faster_rcnn_resnet_v1_feature_extractor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/faster_rcnn_resnet_v1_feature_extractor_test.py'
--------------------------------------------------------------------------------

50:28: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
54:23: INFO: Added keywords to args of function 'tf.shape'
56:16: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
65:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
69:21: INFO: Added keywords to args of function 'tf.shape'
71:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
80:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
84:21: INFO: Added keywords to args of function 'tf.shape'
86:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
99:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
102:21: INFO: Added keywords to args of function 'tf.shape'
104:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
115:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
124:28: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
129:21: INFO: Added keywords to args of function 'tf.shape'
131:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
143:28: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
151:23: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/faster_rcnn_inception_v2_feature_extractor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/faster_rcnn_inception_v2_feature_extractor.py'
--------------------------------------------------------------------------------

124:40: INFO: Added keywords to args of function 'tf.shape'
125:40: INFO: Added keywords to args of function 'tf.shape'
129:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
160:34: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
160:34: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
165:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
175:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
176:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
183:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
192:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
197:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
198:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
201:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
208:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
217:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
226:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
227:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
230:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
237:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
246:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v1_ppn_feature_extractor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v1_ppn_feature_extractor.py'
--------------------------------------------------------------------------------

63:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v2_fpn_feature_extractor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v2_fpn_feature_extractor.py'
--------------------------------------------------------------------------------

138:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
155:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v1_ppn_feature_extractor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v1_ppn_feature_extractor_test.py'
--------------------------------------------------------------------------------

176:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
183:34: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_resnet_v1_fpn_feature_extractor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_resnet_v1_fpn_feature_extractor_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/faster_rcnn_nas_feature_extractor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/faster_rcnn_nas_feature_extractor.py'
--------------------------------------------------------------------------------

109:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v3_feature_extractor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v3_feature_extractor_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_resnet_v1_fpn_feature_extractor_testbase.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_resnet_v1_fpn_feature_extractor_testbase.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_inception_v3_feature_extractor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_inception_v3_feature_extractor_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_inception_v3_feature_extractor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_inception_v3_feature_extractor.py'
--------------------------------------------------------------------------------

124:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_edgetpu_feature_extractor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_edgetpu_feature_extractor.py'
--------------------------------------------------------------------------------

22:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_inception_v2_feature_extractor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_inception_v2_feature_extractor_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/faster_rcnn_pnas_feature_extractor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/faster_rcnn_pnas_feature_extractor.py'
--------------------------------------------------------------------------------

110:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v2_fpn_keras_feature_extractor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v2_fpn_keras_feature_extractor.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v2_keras_feature_extractor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v2_keras_feature_extractor.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_edgetpu_feature_extractor_testbase.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_edgetpu_feature_extractor_testbase.py'
--------------------------------------------------------------------------------

25:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
108:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
115:34: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/faster_rcnn_mobilenet_v1_feature_extractor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/faster_rcnn_mobilenet_v1_feature_extractor.py'
--------------------------------------------------------------------------------

139:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
177:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_pnasnet_feature_extractor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_pnasnet_feature_extractor.py'
--------------------------------------------------------------------------------

148:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_feature_extractor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_feature_extractor_test.py'
--------------------------------------------------------------------------------

157:21: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
184:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
193:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
219:28: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
226:30: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/faster_rcnn_inception_resnet_v2_feature_extractor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/faster_rcnn_inception_resnet_v2_feature_extractor.py'
--------------------------------------------------------------------------------

108:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
132:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
140:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
141:19: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
147:19: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
153:19: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
161:19: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/faster_rcnn_resnet_v1_feature_extractor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/faster_rcnn_resnet_v1_feature_extractor.py'
--------------------------------------------------------------------------------

120:29: INFO: Added keywords to args of function 'tf.shape'
121:29: INFO: Added keywords to args of function 'tf.shape'
134:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
162:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v2_feature_extractor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v2_feature_extractor.py'
--------------------------------------------------------------------------------

119:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/faster_rcnn_pnas_feature_extractor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/faster_rcnn_pnas_feature_extractor_test.py'
--------------------------------------------------------------------------------

36:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
40:21: INFO: Added keywords to args of function 'tf.shape'
42:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
51:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
55:21: INFO: Added keywords to args of function 'tf.shape'
57:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
66:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
70:21: INFO: Added keywords to args of function 'tf.shape'
72:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
85:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
94:28: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
99:21: INFO: Added keywords to args of function 'tf.shape'
101:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_resnet_v1_fpn_feature_extractor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_resnet_v1_fpn_feature_extractor.py'
--------------------------------------------------------------------------------

158:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
178:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/feature_map_generators_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/feature_map_generators_test.py'
--------------------------------------------------------------------------------

102:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
103:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
104:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
120:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
131:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
132:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
133:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
151:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
162:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
163:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
164:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
182:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
192:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
193:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
194:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
211:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
222:31: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
224:31: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
241:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
252:31: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
269:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
279:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
280:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
281:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
319:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
324:34: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
334:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
335:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
336:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
394:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
399:34: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
459:19: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
460:19: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
461:19: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
462:19: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
478:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
489:19: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
490:19: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
491:19: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
492:19: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
509:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
522:25: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
524:25: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
526:25: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
528:25: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
608:16: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
636:19: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
637:19: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
638:19: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
639:19: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
656:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
667:19: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
668:19: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
669:19: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
670:19: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
712:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
717:34: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
726:19: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
727:19: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
728:19: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
729:19: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
778:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
783:34: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
811:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
837:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
852:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
880:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
885:34: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/faster_rcnn_inception_resnet_v2_keras_feature_extractor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/faster_rcnn_inception_resnet_v2_keras_feature_extractor_test.py'
--------------------------------------------------------------------------------

35:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
39:21: INFO: Added keywords to args of function 'tf.shape'
41:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
50:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
54:21: INFO: Added keywords to args of function 'tf.shape'
56:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
65:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
69:21: INFO: Added keywords to args of function 'tf.shape'
71:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
84:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
93:28: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
99:21: INFO: Added keywords to args of function 'tf.shape'
101:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v1_fpn_keras_feature_extractor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v1_fpn_keras_feature_extractor.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v1_keras_feature_extractor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v1_keras_feature_extractor.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v1_fpn_feature_extractor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v1_fpn_feature_extractor.py'
--------------------------------------------------------------------------------

138:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
157:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v2_feature_extractor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v2_feature_extractor_test.py'
--------------------------------------------------------------------------------

200:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
211:34: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_resnet_v1_ppn_feature_extractor_testbase.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_resnet_v1_ppn_feature_extractor_testbase.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_pnasnet_feature_extractor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_pnasnet_feature_extractor_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/faster_rcnn_inception_resnet_v2_keras_feature_extractor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/faster_rcnn_inception_resnet_v2_keras_feature_extractor.py'
--------------------------------------------------------------------------------

97:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

97:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
98:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

98:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
131:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

131:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
132:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

132:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_resnet_v1_fpn_keras_feature_extractor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_resnet_v1_fpn_keras_feature_extractor.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v1_fpn_feature_extractor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_v1_fpn_feature_extractor_test.py'
--------------------------------------------------------------------------------

212:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
225:22: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/faster_rcnn_inception_resnet_v2_feature_extractor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/faster_rcnn_inception_resnet_v2_feature_extractor_test.py'
--------------------------------------------------------------------------------

36:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
40:21: INFO: Added keywords to args of function 'tf.shape'
42:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
51:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
55:21: INFO: Added keywords to args of function 'tf.shape'
57:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
66:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
70:21: INFO: Added keywords to args of function 'tf.shape'
72:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
85:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
94:28: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
99:21: INFO: Added keywords to args of function 'tf.shape'
101:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_resnet_v1_ppn_feature_extractor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_resnet_v1_ppn_feature_extractor_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/faster_rcnn_inception_v2_feature_extractor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/faster_rcnn_inception_v2_feature_extractor_test.py'
--------------------------------------------------------------------------------

37:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
41:21: INFO: Added keywords to args of function 'tf.shape'
43:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
52:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
56:21: INFO: Added keywords to args of function 'tf.shape'
58:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
67:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
71:21: INFO: Added keywords to args of function 'tf.shape'
73:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
86:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
89:21: INFO: Added keywords to args of function 'tf.shape'
91:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
102:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
111:28: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
116:21: INFO: Added keywords to args of function 'tf.shape'
118:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/feature_map_generators.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/feature_map_generators.py'
--------------------------------------------------------------------------------

574:17: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
587:27: INFO: Added keywords to args of function 'tf.shape'
631:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

631:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
687:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

687:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
708:15: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

708:15: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
711:23: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
724:27: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/embedded_ssd_mobilenet_v1_feature_extractor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/embedded_ssd_mobilenet_v1_feature_extractor.py'
--------------------------------------------------------------------------------

125:34: INFO: Added keywords to args of function 'tf.shape'
126:34: INFO: Added keywords to args of function 'tf.shape'
144:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_edgetpu_feature_extractor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/ssd_mobilenet_edgetpu_feature_extractor_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/faster_rcnn_nas_feature_extractor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/faster_rcnn_nas_feature_extractor_test.py'
--------------------------------------------------------------------------------

36:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
40:21: INFO: Added keywords to args of function 'tf.shape'
42:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
51:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
55:21: INFO: Added keywords to args of function 'tf.shape'
57:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
66:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
70:21: INFO: Added keywords to args of function 'tf.shape'
72:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
85:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
94:28: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
99:21: INFO: Added keywords to args of function 'tf.shape'
101:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/keras_models/resnet_v1.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/keras_models/resnet_v1.py'
--------------------------------------------------------------------------------

48:18: INFO: Added keywords to args of function 'tf.pad'
96:23: INFO: tf.variance_scaling_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
96:23: INFO: Renamed 'tf.variance_scaling_initializer' to 'tf.compat.v1.variance_scaling_initializer'
218:31: INFO: Renamed 'tf.placeholder_with_default' to 'tf.compat.v1.placeholder_with_default'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/keras_models/resnet_v1_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/keras_models/resnet_v1_test.py'
--------------------------------------------------------------------------------

149:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/keras_models/mobilenet_v2.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/keras_models/mobilenet_v2.py'
--------------------------------------------------------------------------------

91:23: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
91:23: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
231:31: INFO: Renamed 'tf.placeholder_with_default' to 'tf.compat.v1.placeholder_with_default'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/keras_models/model_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/keras_models/model_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/keras_models/mobilenet_v2_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/keras_models/mobilenet_v2_test.py'
--------------------------------------------------------------------------------

128:21: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
148:28: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
154:30: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/keras_models/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/keras_models/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/keras_models/inception_resnet_v2.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/keras_models/inception_resnet_v2.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/keras_models/mobilenet_v1.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/keras_models/mobilenet_v1.py'
--------------------------------------------------------------------------------

49:18: INFO: Added keywords to args of function 'tf.pad'
106:23: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
106:23: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
243:31: INFO: Renamed 'tf.placeholder_with_default' to 'tf.compat.v1.placeholder_with_default'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/keras_models/test_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/keras_models/test_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/keras_models/mobilenet_v1_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/keras_models/mobilenet_v1_test.py'
--------------------------------------------------------------------------------

139:21: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
160:28: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
167:30: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/keras_models/inception_resnet_v2_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/keras_models/inception_resnet_v2_test.py'
--------------------------------------------------------------------------------

165:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/models/keras_models/base_models/original_mobilenet_v2.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/models/keras_models/base_models/original_mobilenet_v2.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/legacy/evaluator.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/legacy/evaluator.py'
--------------------------------------------------------------------------------

240:18: INFO: Renamed 'tf.train.global_step' to 'tf.compat.v1.train.global_step'
240:45: INFO: Renamed 'tf.train.get_global_step' to 'tf.compat.v1.train.get_global_step'
263:25: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
264:16: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
270:10: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/legacy/train.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/legacy/train.py'
--------------------------------------------------------------------------------

56:0: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
56:25: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
58:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
91:22: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
96:6: INFO: Renamed 'tf.gfile.Copy' to 'tf.io.gfile.copy'
108:8: INFO: Renamed 'tf.gfile.Copy' to 'tf.io.gfile.copy'
121:11: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

151:13: INFO: Renamed 'tf.train.Server' to 'tf.distribute.Server'
185:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/legacy/trainer.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/legacy/trainer.py'
--------------------------------------------------------------------------------

209:4: INFO: tf.losses.add_loss requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
209:4: INFO: Renamed 'tf.losses.add_loss' to 'tf.compat.v1.losses.add_loss'
286:20: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
286:38: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
301:17: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
301:35: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
307:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
307:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
311:27: INFO: Renamed 'tf.train.SyncReplicasOptimizer' to 'tf.compat.v1.train.SyncReplicasOptimizer'
323:19: INFO: Renamed 'tf.check_numerics' to 'tf.debugging.check_numerics'
340:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

340:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
354:27: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
354:27: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
356:23: INFO: tf.losses.get_losses requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
356:23: INFO: Renamed 'tf.losses.get_losses' to 'tf.compat.v1.losses.get_losses'
357:27: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
357:27: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
360:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
360:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
360:46: INFO: tf.losses.get_total_loss requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
360:46: INFO: Renamed 'tf.losses.get_total_loss' to 'tf.compat.v1.losses.get_total_loss'
364:21: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
364:39: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
369:17: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
369:17: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
372:21: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
377:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
399:19: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/legacy/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/legacy/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/legacy/eval.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/legacy/eval.py'
--------------------------------------------------------------------------------

57:0: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
57:25: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
59:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
88:2: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
92:4: INFO: Renamed 'tf.gfile.Copy' to 'tf.io.gfile.copy'
104:6: INFO: Renamed 'tf.gfile.Copy' to 'tf.io.gfile.copy'
116:11: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

143:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/legacy/trainer_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/legacy/trainer_test.py'
--------------------------------------------------------------------------------

35:10: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
37:16: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
39:14: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
41:22: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
77:11: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
159:29: INFO: Added keywords to args of function 'tf.reduce_sum'
160:31: INFO: Added keywords to args of function 'tf.reduce_sum'
187:40: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/data_decoders/tf_example_decoder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/data_decoders/tf_example_decoder.py'
--------------------------------------------------------------------------------

32:23: ERROR: Using member tf.contrib.slim.tfexample_decoder in deprecated module tf.contrib. tf.contrib.slim.tfexample_decoder cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
72:15: ERROR: Using member tf.contrib.lookup in deprecated module tf.contrib. tf.contrib.lookup cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
73:25: ERROR: Using member tf.contrib.lookup.HashTable in deprecated module tf.contrib. tf.contrib.lookup.HashTable cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
131:22: INFO: Added keywords to args of function 'tf.reduce_prod'
131:37: INFO: Added keywords to args of function 'tf.shape'
182:12: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
184:12: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
186:12: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
188:12: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
190:12: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
192:12: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
194:12: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
197:12: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
199:12: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
202:12: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
204:12: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
206:12: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
208:12: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
210:12: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
212:12: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
214:12: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
216:12: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
218:12: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
220:12: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
222:12: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
274:52: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
279:49: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
287:10: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
289:10: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
298:12: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
305:53: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
393:71: INFO: Added keywords to args of function 'tf.shape'
399:17: INFO: Added keywords to args of function 'tf.transpose'
404:11: INFO: Added keywords to args of function 'tf.shape'
407:62: INFO: Added keywords to args of function 'tf.cond'
409:12: INFO: Added keywords to args of function 'tf.shape'
430:10: INFO: Renamed 'tf.sparse_tensor_to_dense' to 'tf.sparse.to_dense'
434:10: INFO: Renamed 'tf.sparse_tensor_to_dense' to 'tf.sparse.to_dense'
458:14: INFO: Renamed 'tf.sparse_tensor_to_dense' to 'tf.sparse.to_dense'
488:18: INFO: Renamed 'tf.sparse_tensor_to_dense' to 'tf.sparse.to_dense'
489:11: INFO: Added keywords to args of function 'tf.cond'
490:19: INFO: Added keywords to args of function 'tf.size'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/data_decoders/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/data_decoders/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/data_decoders/tf_example_decoder_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/data_decoders/tf_example_decoder_test.py'
--------------------------------------------------------------------------------

27:23: ERROR: Using member tf.contrib.slim.tfexample_decoder in deprecated module tf.contrib. tf.contrib.slim.tfexample_decoder cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
77:41: INFO: Added keywords to args of function 'tf.convert_to_tensor'
101:41: INFO: Added keywords to args of function 'tf.convert_to_tensor'
129:41: INFO: Added keywords to args of function 'tf.convert_to_tensor'
152:41: INFO: Added keywords to args of function 'tf.convert_to_tensor'
192:41: INFO: Added keywords to args of function 'tf.convert_to_tensor'
222:41: INFO: Added keywords to args of function 'tf.convert_to_tensor'
255:41: INFO: Added keywords to args of function 'tf.convert_to_tensor'
298:41: INFO: Added keywords to args of function 'tf.convert_to_tensor'
344:41: INFO: Added keywords to args of function 'tf.convert_to_tensor'
371:41: INFO: Added keywords to args of function 'tf.convert_to_tensor'
412:41: INFO: Added keywords to args of function 'tf.convert_to_tensor'
444:41: INFO: Added keywords to args of function 'tf.convert_to_tensor'
475:9: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
480:41: INFO: Added keywords to args of function 'tf.convert_to_tensor'
485:11: INFO: Renamed 'tf.tables_initializer' to 'tf.compat.v1.tables_initializer'
523:9: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
528:41: INFO: Added keywords to args of function 'tf.convert_to_tensor'
530:11: INFO: Renamed 'tf.tables_initializer' to 'tf.compat.v1.tables_initializer'
564:9: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
568:41: INFO: Added keywords to args of function 'tf.convert_to_tensor'
574:15: INFO: Renamed 'tf.tables_initializer' to 'tf.compat.v1.tables_initializer'
606:9: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
610:41: INFO: Added keywords to args of function 'tf.convert_to_tensor'
616:15: INFO: Renamed 'tf.tables_initializer' to 'tf.compat.v1.tables_initializer'
653:9: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
657:41: INFO: Added keywords to args of function 'tf.convert_to_tensor'
660:15: INFO: Renamed 'tf.tables_initializer' to 'tf.compat.v1.tables_initializer'
692:9: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
696:41: INFO: Added keywords to args of function 'tf.convert_to_tensor'
702:15: INFO: Renamed 'tf.tables_initializer' to 'tf.compat.v1.tables_initializer'
724:41: INFO: Added keywords to args of function 'tf.convert_to_tensor'
750:41: INFO: Added keywords to args of function 'tf.convert_to_tensor'
778:41: INFO: Added keywords to args of function 'tf.convert_to_tensor'
806:41: INFO: Added keywords to args of function 'tf.convert_to_tensor'
834:41: INFO: Added keywords to args of function 'tf.convert_to_tensor'
882:41: INFO: Added keywords to args of function 'tf.convert_to_tensor'
936:41: INFO: Added keywords to args of function 'tf.convert_to_tensor'
951:41: INFO: Added keywords to args of function 'tf.convert_to_tensor'
981:9: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
985:41: INFO: Added keywords to args of function 'tf.convert_to_tensor'
987:15: INFO: Renamed 'tf.tables_initializer' to 'tf.compat.v1.tables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/class_agnostic_nms_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/class_agnostic_nms_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/batch_multiclass_nms_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/batch_multiclass_nms_test.py'
--------------------------------------------------------------------------------

435:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
436:25: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
437:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/prefetcher_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/prefetcher_test.py'
--------------------------------------------------------------------------------

26:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
38:14: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
42:14: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
56:6: INFO: Renamed 'tf.initialize_all_variables' to 'tf.compat.v1.initialize_all_variables'
73:14: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
79:14: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
94:6: INFO: Renamed 'tf.initialize_all_variables' to 'tf.compat.v1.initialize_all_variables'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/box_coder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/box_coder.py'
--------------------------------------------------------------------------------

77:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

77:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
91:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

91:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/balanced_positive_negative_sampler.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/balanced_positive_negative_sampler.py'
--------------------------------------------------------------------------------

74:19: INFO: Added keywords to args of function 'tf.shape'
77:22: INFO: Added keywords to args of function 'tf.reduce_sum'
104:19: INFO: Added keywords to args of function 'tf.shape'
148:19: INFO: Added keywords to args of function 'tf.shape'
152:23: INFO: Added keywords to args of function 'tf.reduce_sum'
160:18: INFO: Renamed 'tf.random_shuffle' to 'tf.random.shuffle'
167:20: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
172:19: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
196:36: INFO: Added keywords to args of function 'tf.reduce_sum'
238:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

238:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
250:24: INFO: Added keywords to args of function 'tf.reduce_sum'
254:26: INFO: Added keywords to args of function 'tf.reduce_sum'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/minibatch_sampler.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/minibatch_sampler.py'
--------------------------------------------------------------------------------

84:14: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
85:14: INFO: Renamed 'tf.random_shuffle' to 'tf.random.shuffle'
88:29: INFO: Added keywords to args of function 'tf.size'
92:53: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/batcher_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/batcher_test.py'
--------------------------------------------------------------------------------

28:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
53:6: INFO: Renamed 'tf.initialize_all_variables' to 'tf.compat.v1.initialize_all_variables'
86:6: INFO: Renamed 'tf.initialize_all_variables' to 'tf.compat.v1.initialize_all_variables'
117:6: INFO: Renamed 'tf.initialize_all_variables' to 'tf.compat.v1.initialize_all_variables'
149:6: INFO: Renamed 'tf.initialize_all_variables' to 'tf.compat.v1.initialize_all_variables'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/target_assigner.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/target_assigner.py'
--------------------------------------------------------------------------------

201:26: INFO: Added keywords to args of function 'tf.shape'
202:22: INFO: Added keywords to args of function 'tf.shape'
269:18: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
668:23: INFO: Added keywords to args of function 'tf.reduce_any'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/keypoint_ops_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/keypoint_ops_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/box_list_ops_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/box_list_ops_test.py'
--------------------------------------------------------------------------------

392:14: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
393:16: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
394:14: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
449:14: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
450:14: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
451:14: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
500:25: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
585:19: INFO: Added keywords to args of function 'tf.reduce_sum'
906:17: INFO: Added keywords to args of function 'tf.shape'
906:35: INFO: Added keywords to args of function 'tf.shape'
920:17: INFO: Added keywords to args of function 'tf.shape'
920:35: INFO: Added keywords to args of function 'tf.shape'
932:60: INFO: Added keywords to args of function 'tf.shape'
933:60: INFO: Added keywords to args of function 'tf.shape'
947:60: INFO: Added keywords to args of function 'tf.shape'
948:60: INFO: Added keywords to args of function 'tf.shape'
963:53: INFO: Added keywords to args of function 'tf.shape'
964:53: INFO: Added keywords to args of function 'tf.shape'
966:51: INFO: Added keywords to args of function 'tf.shape'
967:51: INFO: Added keywords to args of function 'tf.shape'
981:51: INFO: Added keywords to args of function 'tf.shape'
982:51: INFO: Added keywords to args of function 'tf.shape'
984:53: INFO: Added keywords to args of function 'tf.shape'
985:53: INFO: Added keywords to args of function 'tf.shape'
998:8: INFO: Added keywords to args of function 'tf.shape'
999:8: INFO: Added keywords to args of function 'tf.shape'
1100:14: INFO: Added keywords to args of function 'tf.reduce_max'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/preprocessor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/preprocessor.py'
--------------------------------------------------------------------------------

115:6: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
152:6: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
212:9: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
234:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

234:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
235:13: INFO: Added keywords to args of function 'tf.convert_to_tensor'
244:17: INFO: Added keywords to args of function 'tf.reduce_sum'
245:41: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
268:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

268:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
327:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

327:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
329:14: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
330:49: INFO: Renamed 'tf.is_nan' to 'tf.math.is_nan'
404:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

404:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
406:14: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
408:12: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
408:30: INFO: Added keywords to args of function 'tf.shape'
451:13: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
458:38: INFO: Added keywords to args of function 'tf.shape'
561:10: INFO: Added keywords to args of function 'tf.transpose'
624:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

624:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
627:39: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
635:12: INFO: Added keywords to args of function 'tf.cond'
640:14: INFO: Added keywords to args of function 'tf.cond'
646:14: INFO: Added keywords to args of function 'tf.cond'
653:18: INFO: Added keywords to args of function 'tf.cond'
721:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

721:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
724:39: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
731:12: INFO: Added keywords to args of function 'tf.cond'
736:14: INFO: Added keywords to args of function 'tf.cond'
742:14: INFO: Added keywords to args of function 'tf.cond'
749:18: INFO: Added keywords to args of function 'tf.cond'
810:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

810:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
814:39: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
821:12: INFO: Added keywords to args of function 'tf.cond'
827:14: INFO: Added keywords to args of function 'tf.cond'
833:14: INFO: Added keywords to args of function 'tf.cond'
839:18: INFO: Added keywords to args of function 'tf.cond'
873:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

873:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
875:8: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
875:27: INFO: Added keywords to args of function 'tf.shape'
915:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

915:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
917:18: INFO: Added keywords to args of function 'tf.shape'
921:8: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
935:49: INFO: Removed argument align_corners for function tf.image.resize_images
934:12: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
941:10: INFO: Removed argument align_corners for function tf.image.resize_images
938:14: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
979:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

979:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
981:39: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
986:12: INFO: Added keywords to args of function 'tf.cond'
1015:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1015:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1016:39: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
1057:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1057:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1058:39: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
1094:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1094:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1095:39: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
1133:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1133:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1134:39: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
1169:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1169:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1230:19: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
1240:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1240:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1242:18: INFO: Added keywords to args of function 'tf.shape'
1326:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1326:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1327:18: INFO: Added keywords to args of function 'tf.shape'
1539:39: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
1558:13: INFO: Added keywords to args of function 'tf.cond'
1614:16: INFO: Added keywords to args of function 'tf.reduce_mean'
1616:16: INFO: Added keywords to args of function 'tf.shape'
1630:18: INFO: Added keywords to args of function 'tf.cond'
1635:17: INFO: Added keywords to args of function 'tf.cond'
1640:18: INFO: Added keywords to args of function 'tf.cond'
1645:17: INFO: Added keywords to args of function 'tf.cond'
1737:19: INFO: Added keywords to args of function 'tf.shape'
1824:15: INFO: Added keywords to args of function 'tf.shape'
1960:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1960:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1961:18: INFO: Added keywords to args of function 'tf.shape'
1974:20: INFO: Added keywords to args of function 'tf.cond'
1982:19: INFO: Added keywords to args of function 'tf.cond'
2129:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

2129:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
2130:18: INFO: Added keywords to args of function 'tf.shape'
2135:20: INFO: Added keywords to args of function 'tf.cond'
2139:19: INFO: Added keywords to args of function 'tf.cond'
2158:39: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
2239:18: INFO: Added keywords to args of function 'tf.shape'
2249:39: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
2273:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

2273:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
2275:41: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
2282:14: INFO: Added keywords to args of function 'tf.cond'
2318:8: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
2334:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

2334:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
2335:39: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
2340:12: INFO: Added keywords to args of function 'tf.cond'
2402:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

2402:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
2403:37: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
2411:8: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
2422:18: INFO: Added keywords to args of function 'tf.shape'
2440:13: INFO: Added keywords to args of function 'tf.cond'
2444:13: INFO: Added keywords to args of function 'tf.cond'
2504:12: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
2512:12: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
2519:18: INFO: Added keywords to args of function 'tf.shape'
2522:12: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
2530:12: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
2550:20: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
2553:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

2553:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
2556:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
2558:12: INFO: Added keywords to args of function 'tf.cond'
2604:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

2604:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
2626:24: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
2691:8: INFO: Removed argument align_corners for function tf.image.resize_images
2689:11: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
2697:8: INFO: Removed argument align_corners for function tf.image.resize_images
2695:11: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
2699:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

2699:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
2707:18: INFO: Added keywords to args of function 'tf.cond'
2708:18: INFO: Added keywords to args of function 'tf.shape'
2708:38: INFO: Added keywords to args of function 'tf.shape'
2711:17: INFO: Added keywords to args of function 'tf.shape'
2720:14: INFO: Added keywords to args of function 'tf.pad'
2736:10: INFO: Removed argument align_corners for function tf.image.resize_images
2732:18: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
2749:17: INFO: Added keywords to args of function 'tf.shape'
2750:16: INFO: Added keywords to args of function 'tf.shape'
2751:17: INFO: Added keywords to args of function 'tf.shape'
2787:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

2787:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
2800:8: INFO: Removed argument align_corners for function tf.image.resize_images
2797:12: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
2804:14: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
2804:14: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
2845:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

2845:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
2858:8: INFO: Removed argument align_corners for function tf.image.resize_images
2855:12: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
2862:14: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
2862:14: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
2893:17: INFO: Added keywords to args of function 'tf.shape'
2894:16: INFO: Added keywords to args of function 'tf.shape'
2934:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

2934:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
2940:8: INFO: Removed argument align_corners for function tf.image.resize_images
2937:16: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
2944:22: INFO: Added keywords to args of function 'tf.shape'
2948:20: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
2948:20: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
2961:14: INFO: Added keywords to args of function 'tf.cond'
2981:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

2981:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
3006:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

3006:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
3011:11: INFO: Added keywords to args of function 'tf.reduce_max'
3073:21: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
3077:23: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
3105:40: WARNING: tf.cond called with strict argument, requires manual check: tf.cond no longer takes 'strict' argument, it behaves as if was set to True.
3105:40: INFO: Added keywords to args of function 'tf.cond'
3109:6: INFO: Removed argument strict for function tf.cond
3111:12: WARNING: tf.cond called with strict argument, requires manual check: tf.cond no longer takes 'strict' argument, it behaves as if was set to True.
3111:12: INFO: Added keywords to args of function 'tf.cond'
3115:6: INFO: Removed argument strict for function tf.cond
3118:24: INFO: Added keywords to args of function 'tf.cond'
3121:19: INFO: Added keywords to args of function 'tf.cond'
3126:24: INFO: Added keywords to args of function 'tf.cond'
3129:19: INFO: Added keywords to args of function 'tf.cond'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/data_decoder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/data_decoder.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/freezable_batch_norm.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/freezable_batch_norm.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/model.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/multiclass_nms_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/multiclass_nms_test.py'
--------------------------------------------------------------------------------

179:16: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/post_processing.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/post_processing.py'
--------------------------------------------------------------------------------

51:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

51:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
58:43: INFO: Added keywords to args of function 'tf.transpose'
59:43: INFO: Added keywords to args of function 'tf.transpose'
60:43: INFO: Added keywords to args of function 'tf.transpose'
61:43: INFO: Added keywords to args of function 'tf.transpose'
70:25: INFO: Added keywords to args of function 'tf.transpose'
79:10: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
102:17: INFO: Added keywords to args of function 'tf.reduce_max'
105:10: INFO: Added keywords to args of function 'tf.reduce_max'
107:16: INFO: Added keywords to args of function 'tf.reduce_sum'
110:6: INFO: Added keywords to args of function 'tf.reduce_any'
135:14: INFO: Added keywords to args of function 'tf.reduce_all'
157:14: INFO: Added keywords to args of function 'tf.shape'
162:23: INFO: Added keywords to args of function 'tf.while_loop'
173:28: INFO: Added keywords to args of function 'tf.while_loop'
178:7: INFO: Added keywords to args of function 'tf.reduce_sum'
179:19: INFO: Added keywords to args of function 'tf.reduce_sum'
191:17: INFO: Added keywords to args of function 'tf.reduce_sum'
192:14: INFO: Added keywords to args of function 'tf.reduce_any'
254:14: INFO: Added keywords to args of function 'tf.shape'
256:6: INFO: Renamed 'tf.ceil' to 'tf.math.ceil'
261:14: INFO: Added keywords to args of function 'tf.shape'
263:10: INFO: Added keywords to args of function 'tf.pad'
265:11: INFO: Added keywords to args of function 'tf.pad'
277:8: INFO: Added keywords to args of function 'tf.reduce_min'
280:38: INFO: Added keywords to args of function 'tf.while_loop'
287:18: INFO: Added keywords to args of function 'tf.reduce_any'
292:20: INFO: Added keywords to args of function 'tf.reduce_sum'
369:22: INFO: Added keywords to args of function 'tf.shape'
371:24: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
375:35: INFO: Added keywords to args of function 'tf.reduce_sum'
475:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

475:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
476:17: INFO: Added keywords to args of function 'tf.shape'
548:32: INFO: Added keywords to args of function 'tf.shape'
567:32: INFO: Added keywords to args of function 'tf.shape'
580:10: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
601:39: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
708:8: INFO: Added keywords to args of function 'tf.argmax'
709:12: INFO: Renamed 'tf.batch_gather' to 'tf.compat.v1.batch_gather'
711:14: INFO: Renamed 'tf.batch_gather' to 'tf.compat.v1.batch_gather'
713:19: INFO: Renamed 'tf.batch_gather' to 'tf.compat.v1.batch_gather'
720:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

720:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
722:17: INFO: Added keywords to args of function 'tf.reduce_max'
723:30: INFO: Added keywords to args of function 'tf.argmax'
776:30: INFO: Added keywords to args of function 'tf.shape'
795:30: INFO: Added keywords to args of function 'tf.shape'
806:8: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
826:28: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
979:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

979:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1017:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1017:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1023:19: INFO: Added keywords to args of function 'tf.shape'
1025:20: INFO: Added keywords to args of function 'tf.shape'
1040:10: INFO: Added keywords to args of function 'tf.reduce_min'
1041:10: INFO: Added keywords to args of function 'tf.reduce_min'
1042:10: INFO: Added keywords to args of function 'tf.reduce_max'
1043:10: INFO: Added keywords to args of function 'tf.reduce_max'
1102:26: INFO: Added keywords to args of function 'tf.shape'
1103:27: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/minibatch_sampler_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/minibatch_sampler_test.py'
--------------------------------------------------------------------------------

39:16: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/preprocessor_cache.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/preprocessor_cache.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/box_predictor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/box_predictor.py'
--------------------------------------------------------------------------------

101:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/data_parser.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/data_parser.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/box_list.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/box_list.py'
--------------------------------------------------------------------------------

68:11: INFO: Added keywords to args of function 'tf.shape'
170:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

170:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
172:42: INFO: Added keywords to args of function 'tf.transpose'
185:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

185:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/region_similarity_calculator.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/region_similarity_calculator.py'
--------------------------------------------------------------------------------

55:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

55:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
155:48: INFO: Added keywords to args of function 'tf.shape'
156:23: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/matcher.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/matcher.py'
--------------------------------------------------------------------------------

94:34: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
106:11: INFO: Added keywords to args of function 'tf.size'
116:34: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
128:11: INFO: Added keywords to args of function 'tf.size'
138:34: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
151:11: INFO: Added keywords to args of function 'tf.size'
161:34: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
182:11: INFO: Added keywords to args of function 'tf.size'
248:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

248:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
250:29: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/standard_fields.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/standard_fields.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/anchor_generator.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/anchor_generator.py'
--------------------------------------------------------------------------------

107:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

107:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
171:11: INFO: tf.assert_equal requires manual check. tf.assert_equal has been changed to return None, the data argument has been removed, and arguments have been reordered.
The calls have been converted to compat.v1 for safety (even though  they may already have been correct).
171:11: INFO: Renamed 'tf.assert_equal' to 'tf.compat.v1.assert_equal'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/preprocessor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/preprocessor_test.py'
--------------------------------------------------------------------------------

654:18: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
655:18: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
659:19: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
660:19: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
684:19: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
685:19: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
710:13: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
751:18: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
752:18: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
756:19: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
757:19: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
781:19: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
782:19: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
807:13: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
848:18: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
849:18: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
853:19: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
854:19: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
878:19: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
879:19: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
901:13: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
968:28: INFO: Added keywords to args of function 'tf.shape'
969:26: INFO: Added keywords to args of function 'tf.shape'
999:21: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
1002:21: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
1006:21: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
1009:21: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
1013:21: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
1016:21: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
1049:27: INFO: Added keywords to args of function 'tf.shape'
1050:25: INFO: Added keywords to args of function 'tf.shape'
1083:27: INFO: Added keywords to args of function 'tf.shape'
1084:27: INFO: Added keywords to args of function 'tf.shape'
1117:27: INFO: Added keywords to args of function 'tf.shape'
1118:22: INFO: Added keywords to args of function 'tf.shape'
1148:28: INFO: Added keywords to args of function 'tf.shape'
1152:35: INFO: Added keywords to args of function 'tf.shape'
1176:18: INFO: Added keywords to args of function 'tf.shape'
1180:28: INFO: Added keywords to args of function 'tf.shape'
1350:18: INFO: Added keywords to args of function 'tf.shape'
1351:28: INFO: Added keywords to args of function 'tf.shape'
1352:19: INFO: Added keywords to args of function 'tf.shape'
1353:29: INFO: Added keywords to args of function 'tf.shape'
1591:12: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
1657:12: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
1942:12: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
2077:12: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
2198:18: INFO: Added keywords to args of function 'tf.shape'
2199:25: INFO: Added keywords to args of function 'tf.shape'
2200:19: INFO: Added keywords to args of function 'tf.shape'
2201:26: INFO: Added keywords to args of function 'tf.shape'
2248:18: INFO: Added keywords to args of function 'tf.shape'
2249:25: INFO: Added keywords to args of function 'tf.shape'
2250:22: INFO: Added keywords to args of function 'tf.shape'
2251:29: INFO: Added keywords to args of function 'tf.shape'
2252:19: INFO: Added keywords to args of function 'tf.shape'
2253:26: INFO: Added keywords to args of function 'tf.shape'
2295:21: INFO: Added keywords to args of function 'tf.shape'
2296:18: INFO: Added keywords to args of function 'tf.shape'
2349:18: INFO: Added keywords to args of function 'tf.shape'
2350:25: INFO: Added keywords to args of function 'tf.shape'
2351:19: INFO: Added keywords to args of function 'tf.shape'
2352:26: INFO: Added keywords to args of function 'tf.shape'
2392:18: INFO: Added keywords to args of function 'tf.shape'
2393:26: INFO: Added keywords to args of function 'tf.shape'
2394:19: INFO: Added keywords to args of function 'tf.shape'
2395:27: INFO: Added keywords to args of function 'tf.shape'
2427:18: INFO: Added keywords to args of function 'tf.shape'
2428:25: INFO: Added keywords to args of function 'tf.shape'
2429:19: INFO: Added keywords to args of function 'tf.shape'
2430:26: INFO: Added keywords to args of function 'tf.shape'
2473:19: INFO: Added keywords to args of function 'tf.shape'
2474:27: INFO: Added keywords to args of function 'tf.shape'
2491:19: INFO: Added keywords to args of function 'tf.shape'
2492:27: INFO: Added keywords to args of function 'tf.shape'
2535:19: INFO: Added keywords to args of function 'tf.shape'
2536:27: INFO: Added keywords to args of function 'tf.shape'
2550:13: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
2555:23: INFO: Added keywords to args of function 'tf.shape'
2566:13: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
2567:12: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
2579:30: INFO: Added keywords to args of function 'tf.shape'
2580:29: INFO: Added keywords to args of function 'tf.shape'
2606:13: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
2611:19: INFO: Added keywords to args of function 'tf.shape'
2612:30: INFO: Added keywords to args of function 'tf.shape'
2626:13: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
2631:19: INFO: Added keywords to args of function 'tf.shape'
2632:30: INFO: Added keywords to args of function 'tf.shape'
2652:19: INFO: Added keywords to args of function 'tf.shape'
2653:27: INFO: Added keywords to args of function 'tf.shape'
2702:19: INFO: Added keywords to args of function 'tf.shape'
2703:27: INFO: Added keywords to args of function 'tf.shape'
2722:19: INFO: Added keywords to args of function 'tf.shape'
2723:18: INFO: Added keywords to args of function 'tf.shape'
2724:29: INFO: Added keywords to args of function 'tf.shape'
2725:28: INFO: Added keywords to args of function 'tf.shape'
2767:27: INFO: Added keywords to args of function 'tf.shape'
2790:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
2791:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
2794:24: INFO: Added keywords to args of function 'tf.shape'
2795:24: INFO: Added keywords to args of function 'tf.shape'
2817:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
2818:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
2821:24: INFO: Added keywords to args of function 'tf.shape'
2822:24: INFO: Added keywords to args of function 'tf.shape'
2844:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
2845:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
2848:24: INFO: Added keywords to args of function 'tf.shape'
2849:24: INFO: Added keywords to args of function 'tf.shape'
2865:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
2878:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
2881:24: INFO: Added keywords to args of function 'tf.shape'
2895:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
2902:24: INFO: Added keywords to args of function 'tf.shape'
2916:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
2942:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
2943:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
2962:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
2963:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
2970:24: INFO: Added keywords to args of function 'tf.shape'
2971:24: INFO: Added keywords to args of function 'tf.shape'
2997:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
2998:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
2999:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
3002:24: INFO: Added keywords to args of function 'tf.shape'
3003:24: INFO: Added keywords to args of function 'tf.shape'
3029:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
3030:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
3033:24: INFO: Added keywords to args of function 'tf.shape'
3034:24: INFO: Added keywords to args of function 'tf.shape'
3043:12: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
3055:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
3058:24: INFO: Added keywords to args of function 'tf.shape'
3077:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
3078:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
3079:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
3082:24: INFO: Added keywords to args of function 'tf.shape'
3083:24: INFO: Added keywords to args of function 'tf.shape'
3108:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
3109:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
3112:24: INFO: Added keywords to args of function 'tf.shape'
3113:24: INFO: Added keywords to args of function 'tf.shape'
3122:12: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
3138:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
3139:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
3140:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
3143:24: INFO: Added keywords to args of function 'tf.shape'
3144:24: INFO: Added keywords to args of function 'tf.shape'
3169:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
3170:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
3173:24: INFO: Added keywords to args of function 'tf.shape'
3174:24: INFO: Added keywords to args of function 'tf.shape'
3183:12: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
3196:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
3217:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
3247:4: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
3275:18: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/region_similarity_calculator_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/region_similarity_calculator_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/prefetcher.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/prefetcher.py'
--------------------------------------------------------------------------------

51:19: INFO: Renamed 'tf.PaddingFIFOQueue' to 'tf.queue.PaddingFIFOQueue'
56:2: INFO: Renamed 'tf.train.queue_runner.add_queue_runner' to 'tf.compat.v1.train.queue_runner.add_queue_runner'
56:41: INFO: Renamed 'tf.train.queue_runner.QueueRunner' to 'tf.compat.v1.train.queue_runner.QueueRunner'
58:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
58:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/target_assigner_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/target_assigner_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/matcher_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/matcher_test.py'
--------------------------------------------------------------------------------

137:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/losses_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/losses_test.py'
--------------------------------------------------------------------------------

44:11: INFO: Added keywords to args of function 'tf.reduce_sum'
80:11: INFO: Added keywords to args of function 'tf.reduce_sum'
99:11: INFO: Added keywords to args of function 'tf.reduce_sum'
125:11: INFO: Added keywords to args of function 'tf.reduce_sum'
153:11: INFO: Added keywords to args of function 'tf.reduce_sum'
173:11: INFO: Added keywords to args of function 'tf.reduce_sum'
191:11: INFO: Added keywords to args of function 'tf.reduce_sum'
227:11: INFO: Added keywords to args of function 'tf.reduce_sum'
261:11: INFO: Added keywords to args of function 'tf.reduce_sum'
299:11: INFO: Added keywords to args of function 'tf.reduce_sum'
349:11: INFO: Added keywords to args of function 'tf.reduce_sum'
383:17: INFO: Added keywords to args of function 'tf.reduce_sum'
385:19: INFO: Added keywords to args of function 'tf.reduce_sum'
409:17: INFO: Added keywords to args of function 'tf.reduce_sum'
411:19: INFO: Added keywords to args of function 'tf.reduce_sum'
435:17: INFO: Added keywords to args of function 'tf.reduce_sum'
437:19: INFO: Added keywords to args of function 'tf.reduce_sum'
461:17: INFO: Added keywords to args of function 'tf.reduce_sum'
463:19: INFO: Added keywords to args of function 'tf.reduce_sum'
489:17: INFO: Added keywords to args of function 'tf.reduce_sum'
491:19: INFO: Added keywords to args of function 'tf.reduce_sum'
603:17: INFO: Added keywords to args of function 'tf.reduce_sum'
641:17: INFO: Added keywords to args of function 'tf.reduce_sum'
694:17: INFO: Added keywords to args of function 'tf.reduce_sum'
737:11: INFO: Added keywords to args of function 'tf.reduce_sum'
857:11: INFO: Added keywords to args of function 'tf.reduce_sum'
887:20: INFO: Added keywords to args of function 'tf.shape'
894:11: INFO: Added keywords to args of function 'tf.reduce_sum'
920:20: INFO: Added keywords to args of function 'tf.shape'
954:20: INFO: Added keywords to args of function 'tf.shape'
1016:11: INFO: Added keywords to args of function 'tf.reduce_sum'
1051:11: INFO: Added keywords to args of function 'tf.reduce_sum'
1086:11: INFO: Added keywords to args of function 'tf.reduce_sum'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/keypoint_ops.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/keypoint_ops.py'
--------------------------------------------------------------------------------

38:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

38:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
59:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

59:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
84:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

84:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
92:12: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
93:12: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
120:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

120:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
152:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

152:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
157:16: INFO: Added keywords to args of function 'tf.reduce_max'
186:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

186:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
192:16: INFO: Added keywords to args of function 'tf.reduce_max'
224:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

224:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
225:16: INFO: Added keywords to args of function 'tf.transpose'
230:20: INFO: Added keywords to args of function 'tf.transpose'
256:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

256:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
257:16: INFO: Added keywords to args of function 'tf.transpose'
262:20: INFO: Added keywords to args of function 'tf.transpose'
276:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

276:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
277:16: INFO: Added keywords to args of function 'tf.transpose'
281:20: INFO: Added keywords to args of function 'tf.transpose'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/balanced_positive_negative_sampler_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/balanced_positive_negative_sampler_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/box_coder_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/box_coder_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/batcher.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/batcher.py'
--------------------------------------------------------------------------------

91:31: INFO: Added keywords to args of function 'tf.shape'
96:22: INFO: Renamed 'tf.train.batch' to 'tf.compat.v1.train.batch'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/box_list_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/box_list_test.py'
--------------------------------------------------------------------------------

46:25: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
84:18: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/losses.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/losses.py'
--------------------------------------------------------------------------------

41:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
76:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

76:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
79:24: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
79:33: INFO: Renamed 'tf.is_nan' to 'tf.math.is_nan'
90:30: INFO: Added keywords to args of function 'tf.convert_to_tensor'
141:11: INFO: Added keywords to args of function 'tf.reduce_sum'
177:11: INFO: Added keywords to args of function 'tf.reduce_sum'
177:25: INFO: tf.losses.huber_loss requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
177:25: INFO: Renamed 'tf.losses.huber_loss' to 'tf.compat.v1.losses.huber_loss'
183:18: INFO: Renamed 'tf.losses.Reduction' to 'tf.compat.v1.losses.Reduction'
244:38: INFO: Added keywords to args of function 'tf.shape'
294:38: INFO: Added keywords to args of function 'tf.shape'
344:14: INFO: Added keywords to args of function 'tf.reduce_mean'
348:25: INFO: Changing labels arg of tf.nn.softmax_cross_entropy_with_logits to tf.stop_gradient(labels). Please check this transformation.

351:41: INFO: Added keywords to args of function 'tf.shape'
394:14: INFO: Added keywords to args of function 'tf.reduce_mean'
400:25: INFO: Changing labels arg of tf.nn.softmax_cross_entropy_with_logits to tf.stop_gradient(labels). Please check this transformation.

403:41: INFO: Added keywords to args of function 'tf.shape'
613:10: INFO: Added keywords to args of function 'tf.reduce_sum'
615:10: INFO: Added keywords to args of function 'tf.reduce_sum'
616:20: INFO: Added keywords to args of function 'tf.reduce_sum'
617:15: INFO: Added keywords to args of function 'tf.reduce_sum'
626:26: INFO: Added keywords to args of function 'tf.reduce_mean'
628:26: INFO: Added keywords to args of function 'tf.reduce_mean'
630:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
630:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
631:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
631:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
673:20: INFO: Added keywords to args of function 'tf.reduce_sum'
680:35: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
682:20: INFO: Added keywords to args of function 'tf.size'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/box_list_ops.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/box_list_ops.py'
--------------------------------------------------------------------------------

59:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

59:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
76:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

76:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
94:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

94:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
126:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

126:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
141:21: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
165:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

165:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
174:8: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
174:32: INFO: Added keywords to args of function 'tf.reduce_any'
197:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

197:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
206:8: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
206:32: INFO: Added keywords to args of function 'tf.reduce_any'
221:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

221:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
226:44: INFO: Added keywords to args of function 'tf.transpose'
227:44: INFO: Added keywords to args of function 'tf.transpose'
229:44: INFO: Added keywords to args of function 'tf.transpose'
230:44: INFO: Added keywords to args of function 'tf.transpose'
246:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

246:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
271:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

271:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
277:11: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
293:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

293:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
298:11: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
318:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

318:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
343:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

343:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
345:11: INFO: Added keywords to args of function 'tf.reduce_max'
345:31: INFO: Renamed keyword argument for tf.reduce_max from reduction_indices to axis
347:27: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
363:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

363:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
367:38: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
390:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

390:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
421:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

421:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
422:14: INFO: Added keywords to args of function 'tf.reduce_sum'
422:58: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
423:14: INFO: Added keywords to args of function 'tf.reduce_sum'
423:58: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
426:21: INFO: Added keywords to args of function 'tf.transpose'
457:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

457:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
474:31: INFO: Added keywords to args of function 'tf.shape'
480:36: INFO: Added keywords to args of function 'tf.boolean_mask'
486:23: INFO: Added keywords to args of function 'tf.boolean_mask'
516:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

516:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
558:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

558:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
608:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

608:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
617:18: INFO: Added keywords to args of function 'tf.size'
626:23: INFO: Renamed 'tf.reverse_v2' to 'tf.reverse'
649:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

649:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
651:36: INFO: Added keywords to args of function 'tf.shape'
676:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

676:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
682:30: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
707:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

707:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
719:8: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
744:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

744:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
795:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

795:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
800:16: INFO: Added keywords to args of function 'tf.reduce_max'
834:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

834:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
840:20: INFO: Added keywords to args of function 'tf.reduce_max'
971:16: INFO: Added keywords to args of function 'tf.reduce_sum'
976:6: INFO: Added keywords to args of function 'tf.reduce_all'
982:6: INFO: Added keywords to args of function 'tf.reduce_all'
1010:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1010:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1039:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1039:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1046:21: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
1052:9: INFO: Added keywords to args of function 'tf.cond'
1075:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1075:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1081:23: INFO: Added keywords to args of function 'tf.reduce_min'
1082:23: INFO: Added keywords to args of function 'tf.reduce_min'
1083:23: INFO: Added keywords to args of function 'tf.reduce_max'
1084:23: INFO: Added keywords to args of function 'tf.reduce_max'
1090:11: INFO: Added keywords to args of function 'tf.cond'
1119:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1119:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1121:18: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
1129:25: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
1130:25: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
1131:25: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
1132:25: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/core/freezable_batch_norm_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/core/freezable_batch_norm_test.py'
--------------------------------------------------------------------------------

54:22: INFO: Added keywords to args of function 'tf.convert_to_tensor'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/convolutional_box_predictor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/predictors/convolutional_box_predictor_test.py'
--------------------------------------------------------------------------------

144:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
165:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
173:12: INFO: Added keywords to args of function 'tf.shape'
173:37: INFO: Added keywords to args of function 'tf.shape'
177:34: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
191:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
213:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
221:12: INFO: Added keywords to args of function 'tf.shape'
221:37: INFO: Added keywords to args of function 'tf.shape'
225:34: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
243:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
268:14: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
484:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
485:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
487:34: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
552:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
553:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
555:34: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
613:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
614:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
616:34: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
684:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
685:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
687:34: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
744:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
745:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
747:34: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
800:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
801:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
803:34: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
829:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
845:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
853:12: INFO: Added keywords to args of function 'tf.shape'
853:37: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/rfcn_box_predictor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/predictors/rfcn_box_predictor_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/convolutional_keras_box_predictor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/predictors/convolutional_keras_box_predictor_test.py'
--------------------------------------------------------------------------------

147:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
170:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
178:12: INFO: Added keywords to args of function 'tf.shape'
178:37: INFO: Added keywords to args of function 'tf.shape'
182:34: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
198:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
222:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
230:12: INFO: Added keywords to args of function 'tf.shape'
230:37: INFO: Added keywords to args of function 'tf.shape'
234:34: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
460:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
461:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
463:34: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
528:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
529:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
531:34: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
590:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
591:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
593:34: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
663:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
664:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
666:34: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
724:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
725:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
727:34: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
782:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
783:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
785:34: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
811:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
828:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
836:12: INFO: Added keywords to args of function 'tf.shape'
836:37: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/convolutional_keras_box_predictor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/predictors/convolutional_keras_box_predictor.py'
--------------------------------------------------------------------------------

147:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
387:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/rfcn_keras_box_predictor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/predictors/rfcn_keras_box_predictor_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/mask_rcnn_box_predictor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/predictors/mask_rcnn_box_predictor_test.py'
--------------------------------------------------------------------------------

131:21: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/mask_rcnn_keras_box_predictor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/predictors/mask_rcnn_keras_box_predictor_test.py'
--------------------------------------------------------------------------------

120:21: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/rfcn_box_predictor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/predictors/rfcn_box_predictor.py'
--------------------------------------------------------------------------------

21:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
112:17: INFO: Added keywords to args of function 'tf.shape'
113:16: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/convolutional_box_predictor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/predictors/convolutional_box_predictor.py'
--------------------------------------------------------------------------------

23:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
136:10: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
150:12: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
157:26: INFO: Renamed 'tf.AUTO_REUSE' to 'tf.compat.v1.AUTO_REUSE'
361:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
379:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
380:35: INFO: Renamed 'tf.AUTO_REUSE' to 'tf.compat.v1.AUTO_REUSE'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/predictors/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/mask_rcnn_keras_box_predictor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/predictors/mask_rcnn_keras_box_predictor.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/rfcn_keras_box_predictor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/predictors/rfcn_keras_box_predictor.py'
--------------------------------------------------------------------------------

164:17: INFO: Added keywords to args of function 'tf.shape'
165:16: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/mask_rcnn_box_predictor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/predictors/mask_rcnn_box_predictor.py'
--------------------------------------------------------------------------------

21:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/heads/class_head_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/predictors/heads/class_head_test.py'
--------------------------------------------------------------------------------

53:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
73:22: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
79:50: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
111:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
132:22: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
138:50: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
166:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
182:22: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
188:50: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/heads/keras_box_head.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/predictors/heads/keras_box_head.py'
--------------------------------------------------------------------------------

128:19: INFO: Added keywords to args of function 'tf.shape'
224:43: INFO: Added keywords to args of function 'tf.reduce_mean'
225:26: INFO: Renamed keyword argument for tf.reduce_mean from keep_dims to keepdims
324:19: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/heads/mask_head.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/predictors/heads/mask_head.py'
--------------------------------------------------------------------------------

147:19: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
147:19: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
175:10: INFO: Added keywords to args of function 'tf.transpose'
276:19: INFO: Added keywords to args of function 'tf.shape'
352:19: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/heads/keras_mask_head_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/predictors/heads/keras_mask_head_test.py'
--------------------------------------------------------------------------------

58:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
78:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
99:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
120:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
158:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
175:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
207:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
222:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/heads/box_head_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/predictors/heads/box_head_test.py'
--------------------------------------------------------------------------------

55:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
87:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
118:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/heads/box_head.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/predictors/heads/box_head.py'
--------------------------------------------------------------------------------

93:43: INFO: Added keywords to args of function 'tf.reduce_mean'
94:26: INFO: Renamed keyword argument for tf.reduce_mean from keep_dims to keepdims
190:19: INFO: Added keywords to args of function 'tf.shape'
273:19: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/heads/keras_class_head.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/predictors/heads/keras_class_head.py'
--------------------------------------------------------------------------------

125:31: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
125:31: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
147:19: INFO: Added keywords to args of function 'tf.shape'
226:43: INFO: Added keywords to args of function 'tf.reduce_mean'
227:26: INFO: Renamed keyword argument for tf.reduce_mean from keep_dims to keepdims
312:31: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
312:31: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
322:31: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
322:31: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
344:19: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/heads/keras_mask_head.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/predictors/heads/keras_mask_head.py'
--------------------------------------------------------------------------------

157:19: INFO: Added keywords to args of function 'tf.shape'
340:17: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
340:17: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
348:8: INFO: Added keywords to args of function 'tf.transpose'
437:19: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/heads/keypoint_head.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/predictors/heads/keypoint_head.py'
--------------------------------------------------------------------------------

103:22: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
103:22: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
108:10: INFO: Added keywords to args of function 'tf.transpose'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/heads/mask_head_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/predictors/heads/mask_head_test.py'
--------------------------------------------------------------------------------

55:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
71:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
107:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
125:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
160:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
175:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/heads/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/predictors/heads/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/heads/keras_class_head_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/predictors/heads/keras_class_head_test.py'
--------------------------------------------------------------------------------

56:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
74:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
109:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
140:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
152:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
167:22: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
170:35: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
183:22: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
186:35: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/heads/keras_box_head_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/predictors/heads/keras_box_head_test.py'
--------------------------------------------------------------------------------

54:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
69:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
105:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
136:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
148:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
162:22: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
165:35: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
177:22: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
180:35: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/heads/class_head.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/predictors/heads/class_head.py'
--------------------------------------------------------------------------------

87:43: INFO: Added keywords to args of function 'tf.reduce_mean'
88:26: INFO: Renamed keyword argument for tf.reduce_mean from keep_dims to keepdims
202:29: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
202:29: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
209:19: INFO: Added keywords to args of function 'tf.shape'
304:27: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
304:27: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
309:19: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/heads/head.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/predictors/heads/head.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/predictors/heads/keypoint_head_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/predictors/heads/keypoint_head_test.py'
--------------------------------------------------------------------------------

49:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/inference/detection_inference.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/inference/detection_inference.py'
--------------------------------------------------------------------------------

34:19: INFO: Renamed 'tf.train.string_input_producer' to 'tf.compat.v1.train.string_input_producer'
37:21: INFO: Renamed 'tf.TFRecordReader' to 'tf.compat.v1.TFRecordReader'
39:13: INFO: Added keywords to args of function 'tf.parse_single_example'
39:13: INFO: Renamed 'tf.parse_single_example' to 'tf.io.parse_single_example'
43:14: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
68:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
70:14: INFO: Renamed 'tf.GraphDef' to 'tf.compat.v1.GraphDef'
76:6: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
117:23: INFO: Renamed 'tf.get_default_session' to 'tf.compat.v1.get_default_session'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/inference/infer_detections.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/inference/infer_detections.py'
--------------------------------------------------------------------------------

41:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
43:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
45:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
47:0: ERROR: Using member tf.flags.DEFINE_boolean in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
53:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
57:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
57:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
65:7: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
68:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
71:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
76:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
78:13: INFO: Renamed 'tf.local_variables_initializer' to 'tf.compat.v1.local_variables_initializer'
79:4: INFO: Renamed 'tf.train.start_queue_runners' to 'tf.compat.v1.train.start_queue_runners'
80:9: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
84:10: INFO: Renamed 'tf.logging.log_every_n' to 'tf.compat.v1.logging.log_every_n'
84:33: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
92:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
96:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/inference/detection_inference_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/inference/detection_inference_test.py'
--------------------------------------------------------------------------------

30:22: INFO: Renamed 'tf.test.get_temp_dir' to 'tf.compat.v1.test.get_temp_dir'
36:2: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
47:7: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
52:22: INFO: Renamed 'tf.test.get_temp_dir' to 'tf.compat.v1.test.get_temp_dir'
58:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
67:8: INFO: Added keywords to args of function 'tf.reduce_sum'
71:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
90:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
91:15: INFO: Renamed 'tf.local_variables_initializer' to 'tf.compat.v1.local_variables_initializer'
92:6: INFO: Renamed 'tf.train.start_queue_runners' to 'tf.compat.v1.train.start_queue_runners'
141:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
142:15: INFO: Renamed 'tf.local_variables_initializer' to 'tf.compat.v1.local_variables_initializer'
143:6: INFO: Renamed 'tf.train.start_queue_runners' to 'tf.compat.v1.train.start_queue_runners'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/inference/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/inference/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/preprocessor_builder_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/preprocessor_builder_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/input_reader_builder_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/input_reader_builder_test.py'
--------------------------------------------------------------------------------

34:13: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
71:9: INFO: Renamed 'tf.train.MonitoredSession' to 'tf.compat.v1.train.MonitoredSession'
101:9: INFO: Renamed 'tf.train.MonitoredSession' to 'tf.compat.v1.train.MonitoredSession'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/losses_builder_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/losses_builder_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/calibration_builder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/calibration_builder.py'
--------------------------------------------------------------------------------

30:17: INFO: Added keywords to args of function 'tf.argmin'
71:9: INFO: Added keywords to args of function 'tf.convert_to_tensor'
75:9: INFO: Added keywords to args of function 'tf.convert_to_tensor'
201:10: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/matcher_builder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/matcher_builder.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/optimizer_builder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/optimizer_builder.py'
--------------------------------------------------------------------------------

47:16: INFO: Renamed 'tf.train.RMSPropOptimizer' to 'tf.compat.v1.train.RMSPropOptimizer'
58:16: INFO: Renamed 'tf.train.MomentumOptimizer' to 'tf.compat.v1.train.MomentumOptimizer'
67:16: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
74:16: WARNING: tf.contrib.opt.MovingAverageOptimizer requires manual check. (Manual edit required) `tf.contrib.opt.MovingAverageOptimizer` has been migrated to `tfa.optimizers.MovingAverage` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
74:16: ERROR: Using member tf.contrib.opt.MovingAverageOptimizer in deprecated module tf.contrib. tf.contrib.opt.MovingAverageOptimizer cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
157:18: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/region_similarity_calculator_builder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/region_similarity_calculator_builder.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/model_builder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/model_builder.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/optimizer_builder_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/optimizer_builder_test.py'
--------------------------------------------------------------------------------

126:42: INFO: Renamed 'tf.train.RMSPropOptimizer' to 'tf.compat.v1.train.RMSPropOptimizer'
143:42: INFO: Renamed 'tf.train.MomentumOptimizer' to 'tf.compat.v1.train.MomentumOptimizer'
159:42: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
176:30: WARNING: tf.contrib.opt.MovingAverageOptimizer requires manual check. (Manual edit required) `tf.contrib.opt.MovingAverageOptimizer` has been migrated to `tfa.optimizers.MovingAverage` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
176:30: ERROR: Using member tf.contrib.opt.MovingAverageOptimizer in deprecated module tf.contrib. tf.contrib.opt.MovingAverageOptimizer cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
194:30: WARNING: tf.contrib.opt.MovingAverageOptimizer requires manual check. (Manual edit required) `tf.contrib.opt.MovingAverageOptimizer` has been migrated to `tfa.optimizers.MovingAverage` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
194:30: ERROR: Using member tf.contrib.opt.MovingAverageOptimizer in deprecated module tf.contrib. tf.contrib.opt.MovingAverageOptimizer cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/dataset_builder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/dataset_builder.py'
--------------------------------------------------------------------------------

43:13: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

44:2: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
44:23: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
64:14: INFO: Renamed 'tf.gfile.Glob' to 'tf.io.gfile.glob'
71:4: INFO: Renamed 'tf.logging.warning' to 'tf.compat.v1.logging.warning'
78:4: INFO: Renamed 'tf.logging.warning' to 'tf.compat.v1.logging.warning'
82:6: INFO: Renamed 'tf.contrib.data.parallel_interleave' to 'tf.data.experimental.parallel_interleave'
158:10: ERROR: Using member tf.contrib.data.batch_and_drop_remainder in deprecated module tf.contrib. tf.contrib.data.batch_and_drop_remainder cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/input_reader_builder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/input_reader_builder.py'
--------------------------------------------------------------------------------

31:18: ERROR: Using member tf.contrib.slim.parallel_reader in deprecated module tf.contrib. tf.contrib.slim.parallel_reader cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
58:21: INFO: Renamed 'tf.TFRecordReader' to 'tf.compat.v1.TFRecordReader'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/dataset_builder_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/dataset_builder_test.py'
--------------------------------------------------------------------------------

33:13: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
79:18: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

82:9: INFO: Renamed 'tf.train.MonitoredSession' to 'tf.compat.v1.train.MonitoredSession'
110:18: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

113:9: INFO: Renamed 'tf.train.MonitoredSession' to 'tf.compat.v1.train.MonitoredSession'
137:18: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

143:9: INFO: Renamed 'tf.train.MonitoredSession' to 'tf.compat.v1.train.MonitoredSession'
175:18: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

181:9: INFO: Renamed 'tf.train.MonitoredSession' to 'tf.compat.v1.train.MonitoredSession'
212:18: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

215:9: INFO: Renamed 'tf.train.MonitoredSession' to 'tf.compat.v1.train.MonitoredSession'
234:18: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

237:9: INFO: Renamed 'tf.train.MonitoredSession' to 'tf.compat.v1.train.MonitoredSession'
251:11: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
258:11: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
264:14: INFO: Renamed 'tf.string_to_number' to 'tf.strings.to_number'
270:11: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

275:12: ERROR: Using member tf.contrib.lookup.HashTable in deprecated module tf.contrib. tf.contrib.lookup.HashTable cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
276:20: ERROR: Using member tf.contrib.lookup.KeyValueTensorInitializer in deprecated module tf.contrib. tf.contrib.lookup.KeyValueTensorInitializer cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
280:11: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

281:11: INFO: Renamed 'tf.tables_initializer' to 'tf.compat.v1.tables_initializer'
320:4: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/matcher_builder_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/matcher_builder_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/preprocessor_builder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/preprocessor_builder.py'
--------------------------------------------------------------------------------

201:8: INFO: Renamed 'tf.logging.warn' to 'tf.compat.v1.logging.warn'
220:8: INFO: Renamed 'tf.logging.warn' to 'tf.compat.v1.logging.warn'
241:8: INFO: Renamed 'tf.logging.warn' to 'tf.compat.v1.logging.warn'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/target_assigner_builder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/target_assigner_builder.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/anchor_generator_builder_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/anchor_generator_builder_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/post_processing_builder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/post_processing_builder.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/model_builder_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/model_builder_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/box_predictor_builder_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/box_predictor_builder_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/hyperparams_builder_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/hyperparams_builder_test.py'
--------------------------------------------------------------------------------

27:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
578:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
578:14: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
583:17: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/hyperparams_builder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/hyperparams_builder.py'
--------------------------------------------------------------------------------

23:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
219:20: WARNING: tf.contrib.layers.group_norm requires manual check. (Manual edit required) `tf.contrib.layers.group_norm` has been migrated to `tfa.layers.GroupNormalization` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
219:20: ERROR: Using member tf.contrib.layers.group_norm in deprecated module tf.contrib. tf.contrib.layers.group_norm cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
276:11: INFO: Renaming scale arg of regularizer

278:11: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

323:11: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
323:11: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
327:11: INFO: tf.random_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
327:11: INFO: Renamed 'tf.random_normal_initializer' to 'tf.compat.v1.random_normal_initializer'
338:15: INFO: tf.variance_scaling_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
338:15: INFO: Renamed 'tf.variance_scaling_initializer' to 'tf.compat.v1.variance_scaling_initializer'
353:17: INFO: tf.variance_scaling_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
353:17: INFO: Renamed 'tf.variance_scaling_initializer' to 'tf.compat.v1.variance_scaling_initializer'
362:17: INFO: tf.variance_scaling_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
362:17: INFO: Renamed 'tf.variance_scaling_initializer' to 'tf.compat.v1.variance_scaling_initializer'
368:13: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/anchor_generator_builder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/anchor_generator_builder.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/graph_rewriter_builder_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/graph_rewriter_builder_test.py'
--------------------------------------------------------------------------------

26:8: ERROR: Using member tf.contrib.quantize in deprecated module tf.contrib. tf.contrib.quantize cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
28:29: ERROR: Using member tf.contrib.layers in deprecated module tf.contrib. tf.contrib.layers cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
38:48: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
43:27: ERROR: Using member tf.contrib.quantize in deprecated module tf.contrib. tf.contrib.quantize cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
45:29: ERROR: Using member tf.contrib.layers in deprecated module tf.contrib. tf.contrib.layers cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
53:48: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/image_resizer_builder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/image_resizer_builder.py'
--------------------------------------------------------------------------------

109:23: INFO: Added keywords to args of function 'tf.shape'
111:30: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/post_processing_builder_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/post_processing_builder_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/box_predictor_builder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/box_predictor_builder.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/box_coder_builder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/box_coder_builder.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/box_coder_builder_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/box_coder_builder_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/target_assigner_builder_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/target_assigner_builder_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/region_similarity_calculator_builder_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/region_similarity_calculator_builder_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/losses_builder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/losses_builder.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/calibration_builder_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/calibration_builder_test.py'
--------------------------------------------------------------------------------

59:10: INFO: Added keywords to args of function 'tf.convert_to_tensor'
60:10: INFO: Added keywords to args of function 'tf.convert_to_tensor'
61:10: INFO: Added keywords to args of function 'tf.convert_to_tensor'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/image_resizer_builder_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/image_resizer_builder_test.py'
--------------------------------------------------------------------------------

31:8: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
128:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/builders/graph_rewriter_builder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/builders/graph_rewriter_builder.py'
--------------------------------------------------------------------------------

35:6: ERROR: Using member tf.contrib.quantize.experimental_create_training_graph in deprecated module tf.contrib. tf.contrib.quantize.experimental_create_training_graph cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
36:22: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
40:6: ERROR: Using member tf.contrib.quantize.experimental_create_eval_graph in deprecated module tf.contrib. tf.contrib.quantize.experimental_create_eval_graph cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
41:22: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
44:4: ERROR: Using member tf.contrib.layers.summarize_collection in deprecated module tf.contrib. tf.contrib.layers.summarize_collection cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/metrics/oid_challenge_evaluation.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/metrics/oid_challenge_evaluation.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/metrics/oid_vrd_challenge_evaluation_utils_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/metrics/oid_vrd_challenge_evaluation_utils_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/metrics/oid_vrd_challenge_evaluation.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/metrics/oid_vrd_challenge_evaluation.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/metrics/oid_challenge_evaluation_utils_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/metrics/oid_challenge_evaluation_utils_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/metrics/calibration_metrics_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/metrics/calibration_metrics_test.py'
--------------------------------------------------------------------------------

31:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
32:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
40:21: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
40:39: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
41:15: INFO: Renamed 'tf.variables_initializer' to 'tf.compat.v1.variables_initializer'
61:21: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
61:39: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
62:15: INFO: Renamed 'tf.variables_initializer' to 'tf.compat.v1.variables_initializer'
82:21: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
82:39: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
83:15: INFO: Renamed 'tf.variables_initializer' to 'tf.compat.v1.variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/metrics/offline_eval_map_corloc_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/metrics/offline_eval_map_corloc_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/metrics/coco_tools_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/metrics/coco_tools_test.py'
--------------------------------------------------------------------------------

89:31: INFO: Renamed 'tf.test.get_temp_dir' to 'tf.compat.v1.test.get_temp_dir'
97:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
114:31: INFO: Renamed 'tf.test.get_temp_dir' to 'tf.compat.v1.test.get_temp_dir'
123:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
148:31: INFO: Renamed 'tf.test.get_temp_dir' to 'tf.compat.v1.test.get_temp_dir'
156:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
181:31: INFO: Renamed 'tf.test.get_temp_dir' to 'tf.compat.v1.test.get_temp_dir'
190:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/metrics/coco_evaluation.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/metrics/coco_evaluation.py'
--------------------------------------------------------------------------------

87:6: INFO: Renamed 'tf.logging.warning' to 'tf.compat.v1.logging.warning'
138:6: INFO: Renamed 'tf.logging.warning' to 'tf.compat.v1.logging.warning'
165:11: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
166:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
205:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
305:33: INFO: Added keywords to args of function 'tf.shape'
310:34: INFO: Added keywords to args of function 'tf.shape'
321:12: INFO: Added keywords to args of function 'tf.shape'
322:22: INFO: Added keywords to args of function 'tf.shape'
325:12: INFO: Added keywords to args of function 'tf.shape'
326:22: INFO: Added keywords to args of function 'tf.shape'
330:11: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
394:21: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
398:40: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
463:6: INFO: Renamed 'tf.logging.warning' to 'tf.compat.v1.logging.warning'
518:6: INFO: Renamed 'tf.logging.warning' to 'tf.compat.v1.logging.warning'
554:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
555:11: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
703:33: INFO: Added keywords to args of function 'tf.shape'
708:34: INFO: Added keywords to args of function 'tf.shape'
714:12: INFO: Added keywords to args of function 'tf.shape'
715:22: INFO: Added keywords to args of function 'tf.shape'
718:12: INFO: Added keywords to args of function 'tf.shape'
719:22: INFO: Added keywords to args of function 'tf.shape'
721:16: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
756:21: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
760:40: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/metrics/calibration_metrics.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/metrics/calibration_metrics.py'
--------------------------------------------------------------------------------

40:9: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
48:38: INFO: Added keywords to args of function 'tf.reduce_sum'
49:9: INFO: Added keywords to args of function 'tf.reduce_sum'
94:6: INFO: tf.assert_greater_equal requires manual check. tf.assert_greater_equal has been changed to return None, the data argument has been removed, and arguments have been reordered.
The calls have been converted to compat.v1 for safety (even though  they may already have been correct).
94:6: INFO: Renamed 'tf.assert_greater_equal' to 'tf.compat.v1.assert_greater_equal'
95:6: INFO: tf.assert_less_equal requires manual check. tf.assert_less_equal has been changed to return None, the data argument has been removed, and arguments have been reordered.
The calls have been converted to compat.v1 for safety (even though  they may already have been correct).
95:6: INFO: Renamed 'tf.assert_less_equal' to 'tf.compat.v1.assert_less_equal'
100:27: INFO: Renamed 'tf.assign_add' to 'tf.compat.v1.assign_add'
101:28: INFO: Renamed 'tf.bincount' to 'tf.math.bincount'
103:29: INFO: Renamed 'tf.assign_add' to 'tf.compat.v1.assign_add'
105:16: INFO: Renamed 'tf.bincount' to 'tf.math.bincount'
107:30: INFO: Renamed 'tf.assign_add' to 'tf.compat.v1.assign_add'
109:16: INFO: Renamed 'tf.bincount' to 'tf.math.bincount'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/metrics/tf_example_parser_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/metrics/tf_example_parser_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/metrics/tf_example_parser.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/metrics/tf_example_parser.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/metrics/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/metrics/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/metrics/oid_vrd_challenge_evaluation_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/metrics/oid_vrd_challenge_evaluation_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/metrics/calibration_evaluation.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/metrics/calibration_evaluation.py'
--------------------------------------------------------------------------------

100:35: INFO: Added keywords to args of function 'tf.reduce_max'
110:18: INFO: Added keywords to args of function 'tf.argmax'
164:33: INFO: Added keywords to args of function 'tf.shape'
169:34: INFO: Added keywords to args of function 'tf.shape'
180:12: INFO: Added keywords to args of function 'tf.shape'
181:22: INFO: Added keywords to args of function 'tf.shape'
184:12: INFO: Added keywords to args of function 'tf.shape'
185:22: INFO: Added keywords to args of function 'tf.shape'
190:18: INFO: Added keywords to args of function 'tf.boolean_mask'
197:24: INFO: Added keywords to args of function 'tf.boolean_mask'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/metrics/io_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/metrics/io_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/metrics/calibration_evaluation_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/metrics/calibration_evaluation_test.py'
--------------------------------------------------------------------------------

44:21: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
44:39: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
45:15: INFO: Renamed 'tf.variables_initializer' to 'tf.compat.v1.variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/metrics/offline_eval_map_corloc.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/metrics/offline_eval_map_corloc.py'
--------------------------------------------------------------------------------

45:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
46:0: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
46:25: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
105:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
107:24: INFO: Renamed 'tf.python_io.tf_record_iterator' to 'tf.compat.v1.python_io.tf_record_iterator'
111:8: INFO: Renamed 'tf.logging.log_every_n' to 'tf.compat.v1.logging.log_every_n'
111:31: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
128:10: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
142:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
171:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/metrics/coco_evaluation_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/metrics/coco_evaluation_test.py'
--------------------------------------------------------------------------------

239:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
240:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
241:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
242:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
243:23: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
244:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
314:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
315:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
316:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
317:19: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
318:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
319:23: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
320:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
407:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
408:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
409:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
410:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
411:23: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
412:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
504:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
505:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
506:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
507:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
508:23: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
509:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
566:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
567:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
568:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
569:29: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
570:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
571:23: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
572:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
573:30: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
736:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
737:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
738:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
739:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
740:23: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
741:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
742:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
852:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
853:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
854:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
855:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
857:23: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
858:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
859:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/metrics/coco_tools.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/metrics/coco_tools.py'
--------------------------------------------------------------------------------

115:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
137:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
488:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
675:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
755:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
854:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/metrics/oid_challenge_evaluation_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/metrics/oid_challenge_evaluation_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/meta_architectures/ssd_meta_arch.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/meta_architectures/ssd_meta_arch.py'
--------------------------------------------------------------------------------

499:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

499:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
589:38: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
597:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
737:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

737:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
794:21: INFO: Renamed 'contrib_tpu.outside_compilation' to 'tf.compat.v1.tpu.outside_compilation'
870:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

870:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
891:39: INFO: Added keywords to args of function 'tf.reduce_mean'
959:30: INFO: Added keywords to args of function 'tf.reduce_sum'
960:28: INFO: Added keywords to args of function 'tf.reduce_sum'
969:28: INFO: Added keywords to args of function 'tf.reduce_sum'
970:30: INFO: Added keywords to args of function 'tf.reduce_sum'
975:40: INFO: Added keywords to args of function 'tf.reduce_sum'
1018:26: INFO: Added keywords to args of function 'tf.reduce_sum'
1025:23: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
1030:23: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
1083:10: INFO: Added keywords to args of function 'tf.pad'
1088:12: INFO: Added keywords to args of function 'tf.pad'
1142:23: INFO: Added keywords to args of function 'tf.reduce_mean'
1144:22: INFO: Added keywords to args of function 'tf.shape'
1146:31: INFO: Added keywords to args of function 'tf.reduce_mean'
1150:22: INFO: Added keywords to args of function 'tf.reduce_mean'
1154:22: INFO: Added keywords to args of function 'tf.reduce_mean'
1158:26: INFO: Added keywords to args of function 'tf.reduce_mean'
1163:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1163:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1166:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1166:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1169:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1169:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1172:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1172:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1175:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1175:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1275:18: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
1275:36: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
1355:22: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
1355:40: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/meta_architectures/rfcn_meta_arch_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/meta_architectures/rfcn_meta_arch_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/meta_architectures/faster_rcnn_meta_arch.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/meta_architectures/faster_rcnn_meta_arch.py'
--------------------------------------------------------------------------------

168:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
190:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
191:53: INFO: Renamed 'tf.AUTO_REUSE' to 'tf.compat.v1.AUTO_REUSE'
558:18: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
705:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

705:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1249:19: INFO: Added keywords to args of function 'tf.shape'
1250:22: INFO: Added keywords to args of function 'tf.shape'
1299:8: INFO: Added keywords to args of function 'tf.shape'
1327:18: INFO: Added keywords to args of function 'tf.shape'
1332:24: INFO: Added keywords to args of function 'tf.shape'
1513:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1513:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1539:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1539:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1565:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
1591:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1591:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1598:19: INFO: Added keywords to args of function 'tf.shape'
1599:23: INFO: Added keywords to args of function 'tf.shape'
1600:32: INFO: Added keywords to args of function 'tf.reduce_mean'
1604:39: INFO: Added keywords to args of function 'tf.shape'
1611:11: INFO: Added keywords to args of function 'tf.shape'
1612:11: INFO: Added keywords to args of function 'tf.shape'
1613:11: INFO: Added keywords to args of function 'tf.shape'
1841:14: INFO: Added keywords to args of function 'tf.pad'
1857:37: INFO: Added keywords to args of function 'tf.shape'
1858:37: INFO: Added keywords to args of function 'tf.shape'
1879:17: INFO: Added keywords to args of function 'tf.shape'
1919:18: INFO: Added keywords to args of function 'tf.reduce_mean'
1920:36: INFO: Added keywords to args of function 'tf.argmax'
2063:10: INFO: Added keywords to args of function 'tf.argmax'
2067:10: INFO: Renamed 'tf.batch_gather' to 'tf.compat.v1.batch_gather'
2189:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

2189:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
2248:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

2248:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
2256:26: INFO: Added keywords to args of function 'tf.reduce_mean'
2273:10: INFO: Added keywords to args of function 'tf.reduce_sum'
2291:26: INFO: Added keywords to args of function 'tf.reduce_mean'
2292:10: INFO: Added keywords to args of function 'tf.reduce_sum'
2293:24: INFO: Added keywords to args of function 'tf.reduce_mean'
2294:10: INFO: Added keywords to args of function 'tf.reduce_sum'
2376:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

2376:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
2407:49: INFO: Added keywords to args of function 'tf.argmax'
2444:30: INFO: Added keywords to args of function 'tf.reduce_sum'
2447:30: INFO: Added keywords to args of function 'tf.reduce_sum'
2499:45: INFO: Added keywords to args of function 'tf.pad'
2501:53: INFO: Added keywords to args of function 'tf.boolean_mask'
2511:35: INFO: Added keywords to args of function 'tf.shape'
2544:26: INFO: Added keywords to args of function 'tf.reduce_sum'
2546:12: INFO: Added keywords to args of function 'tf.reduce_sum'
2605:47: INFO: Added keywords to args of function 'tf.argmax'
2619:44: INFO: Added keywords to args of function 'tf.pad'
2648:17: INFO: Added keywords to args of function 'tf.size'
2710:18: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
2710:36: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
2792:22: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
2792:40: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/meta_architectures/ssd_meta_arch_test_lib.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/meta_architectures/ssd_meta_arch_test_lib.py'
--------------------------------------------------------------------------------

56:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
69:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

69:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
86:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

86:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
154:34: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/meta_architectures/faster_rcnn_meta_arch_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/meta_architectures/faster_rcnn_meta_arch_test.py'
--------------------------------------------------------------------------------

261:30: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
265:18: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
349:30: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
355:18: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
451:16: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
521:36: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
523:44: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
525:56: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
527:37: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
529:34: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/meta_architectures/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/meta_architectures/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/meta_architectures/rfcn_meta_arch.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/meta_architectures/rfcn_meta_arch.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/meta_architectures/faster_rcnn_meta_arch_test_lib.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/meta_architectures/faster_rcnn_meta_arch_test_lib.py'
--------------------------------------------------------------------------------

60:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
66:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
243:55: INFO: Added keywords to args of function 'tf.transpose'
248:26: INFO: Added keywords to args of function 'tf.transpose'
250:28: INFO: Added keywords to args of function 'tf.shape'
517:28: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
523:16: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
544:28: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
557:16: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
706:32: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
710:20: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
1193:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
1338:8: INFO: Added keywords to args of function 'tf.convert_to_tensor'
1339:8: INFO: Added keywords to args of function 'tf.convert_to_tensor'
1340:8: INFO: Added keywords to args of function 'tf.convert_to_tensor'
1441:30: INFO: Added keywords to args of function 'tf.convert_to_tensor'
1544:30: INFO: Added keywords to args of function 'tf.convert_to_tensor'
1611:25: INFO: Added keywords to args of function 'tf.shape'
1934:14: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
1935:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
1939:16: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
1940:14: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
1944:27: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
1955:23: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
1962:14: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
1965:28: INFO: Renamed 'tf.report_uninitialized_variables' to 'tf.compat.v1.report_uninitialized_variables'
1981:23: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
1987:16: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
1988:14: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
1992:27: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
2002:24: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
2011:14: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
2014:43: INFO: Renamed 'tf.report_uninitialized_variables' to 'tf.compat.v1.report_uninitialized_variables'
2036:10: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/meta_architectures/ssd_meta_arch_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/meta_architectures/ssd_meta_arch_test.py'
--------------------------------------------------------------------------------

79:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
103:41: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
114:18: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
212:28: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
220:18: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
276:28: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
289:18: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
420:28: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
432:18: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
656:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
657:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
661:25: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
666:14: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
668:26: INFO: Renamed 'tf.report_uninitialized_variables' to 'tf.compat.v1.report_uninitialized_variables'
675:14: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
677:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

677:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
683:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
688:16: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
689:14: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
693:27: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
701:23: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
710:14: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
713:28: INFO: Renamed 'tf.report_uninitialized_variables' to 'tf.compat.v1.report_uninitialized_variables'
722:10: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/matchers/bipartite_matcher_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/matchers/bipartite_matcher_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/matchers/argmax_matcher_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/matchers/argmax_matcher_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/matchers/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/matchers/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/matchers/argmax_matcher.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/matchers/argmax_matcher.py'
--------------------------------------------------------------------------------

140:16: INFO: Added keywords to args of function 'tf.argmax'
145:23: INFO: Added keywords to args of function 'tf.reduce_max'
170:33: INFO: Added keywords to args of function 'tf.argmax'
176:30: INFO: Added keywords to args of function 'tf.argmax'
179:12: INFO: Added keywords to args of function 'tf.reduce_max'
180:24: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
192:13: INFO: Added keywords to args of function 'tf.cond'
193:21: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/matchers/bipartite_matcher.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/matchers/bipartite_matcher.py'
--------------------------------------------------------------------------------

56:48: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
59:19: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
65:21: INFO: Added keywords to args of function 'tf.reduce_sum'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/protos/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/protos/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/anchor_generators/flexible_grid_anchor_generator.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/anchor_generators/flexible_grid_anchor_generator.py'
--------------------------------------------------------------------------------

114:18: INFO: Added keywords to args of function 'tf.convert_to_tensor'
115:18: INFO: Added keywords to args of function 'tf.convert_to_tensor'
117:18: INFO: Added keywords to args of function 'tf.convert_to_tensor'
118:18: INFO: Added keywords to args of function 'tf.convert_to_tensor'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/anchor_generators/grid_anchor_generator_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/anchor_generators/grid_anchor_generator_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/anchor_generators/multiple_grid_anchor_generator_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/anchor_generators/multiple_grid_anchor_generator_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/anchor_generators/multiscale_grid_anchor_generator_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/anchor_generators/multiscale_grid_anchor_generator_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/anchor_generators/grid_anchor_generator.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/anchor_generators/grid_anchor_generator.py'
--------------------------------------------------------------------------------

112:39: INFO: Added keywords to args of function 'tf.convert_to_tensor'
114:36: INFO: Added keywords to args of function 'tf.convert_to_tensor'
116:36: INFO: Added keywords to args of function 'tf.convert_to_tensor'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/anchor_generators/multiscale_grid_anchor_generator.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/anchor_generators/multiscale_grid_anchor_generator.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/anchor_generators/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/anchor_generators/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/anchor_generators/flexible_grid_anchor_generator_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/anchor_generators/flexible_grid_anchor_generator_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/anchor_generators/multiple_grid_anchor_generator.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/anchor_generators/multiple_grid_anchor_generator.py'
--------------------------------------------------------------------------------

215:11: INFO: Renamed 'tf.contrib.framework.is_tensor' to 'tf.is_tensor'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/spatial_transform_ops.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/spatial_transform_ops.py'
--------------------------------------------------------------------------------

179:14: INFO: Added keywords to args of function 'tf.shape'
180:15: INFO: Added keywords to args of function 'tf.shape'
181:11: INFO: Added keywords to args of function 'tf.shape'
182:11: INFO: Added keywords to args of function 'tf.shape'
220:13: INFO: Added keywords to args of function 'tf.shape'
221:12: INFO: Added keywords to args of function 'tf.shape'
222:15: INFO: Added keywords to args of function 'tf.reduce_max'
223:14: INFO: Added keywords to args of function 'tf.reduce_max'
230:34: INFO: Added keywords to args of function 'tf.shape'
255:22: INFO: Added keywords to args of function 'tf.shape'
314:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

314:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
316:17: INFO: Added keywords to args of function 'tf.shape'
318:25: INFO: Added keywords to args of function 'tf.shape'
319:24: INFO: Added keywords to args of function 'tf.shape'
321:16: INFO: Added keywords to args of function 'tf.shape'
345:26: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
394:23: INFO: Added keywords to args of function 'tf.nn.avg_pool'
394:23: INFO: Renamed keyword argument for tf.nn.avg_pool from value to input
394:23: INFO: Renamed 'tf.nn.avg_pool' to 'tf.nn.avg_pool2d'
410:24: INFO: Added keywords to args of function 'tf.shape'
416:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

416:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
420:29: INFO: Added keywords to args of function 'tf.shape'
421:29: INFO: Added keywords to args of function 'tf.shape'
474:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

474:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
475:26: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/object_detection_evaluation_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/object_detection_evaluation_test.py'
--------------------------------------------------------------------------------

1096:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/static_shape_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/static_shape_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/np_box_list_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/np_box_list_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/json_utils_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/json_utils_test.py'
--------------------------------------------------------------------------------

26:31: INFO: Renamed 'tf.test.get_temp_dir' to 'tf.compat.v1.test.get_temp_dir'
27:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
29:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
33:31: INFO: Renamed 'tf.test.get_temp_dir' to 'tf.compat.v1.test.get_temp_dir'
34:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
36:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
40:31: INFO: Renamed 'tf.test.get_temp_dir' to 'tf.compat.v1.test.get_temp_dir'
41:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
43:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
47:31: INFO: Renamed 'tf.test.get_temp_dir' to 'tf.compat.v1.test.get_temp_dir'
48:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
50:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/shape_utils_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/shape_utils_test.py'
--------------------------------------------------------------------------------

124:13: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
127:20: INFO: Renamed 'tf.contrib.framework.is_tensor' to 'tf.is_tensor'
131:25: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
151:13: INFO: Added keywords to args of function 'tf.reduce_sum'
152:19: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
155:34: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
170:13: INFO: Added keywords to args of function 'tf.reduce_sum'
174:34: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
186:19: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
187:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
191:34: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
219:34: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
248:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
280:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
281:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
291:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
292:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
319:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
320:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
330:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
331:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
343:13: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
352:13: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
405:13: INFO: Renamed 'tf.placeholder_with_default' to 'tf.compat.v1.placeholder_with_default'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/per_image_evaluation.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/per_image_evaluation.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/object_detection_evaluation.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/object_detection_evaluation.py'
--------------------------------------------------------------------------------

507:11: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
540:21: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
544:40: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/model_util_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/model_util_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/variables_helper_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/variables_helper_test.py'
--------------------------------------------------------------------------------

89:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
102:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
127:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
143:16: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
144:14: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
147:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
154:20: INFO: Renamed 'tf.fixed_size_partitioner' to 'tf.compat.v1.fixed_size_partitioner'
156:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
156:10: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
161:16: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
162:14: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
165:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
174:20: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
179:16: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
180:14: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
183:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
197:16: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
198:14: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
201:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
219:20: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
225:16: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
226:14: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
229:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/label_map_util_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/label_map_util_test.py'
--------------------------------------------------------------------------------

53:9: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
89:9: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
113:9: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
135:9: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
155:9: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
274:9: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
298:9: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
328:9: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/variables_helper.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/variables_helper.py'
--------------------------------------------------------------------------------

30:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
139:16: INFO: Renamed 'tf.train.NewCheckpointReader' to 'tf.compat.v1.train.NewCheckpointReader'
142:31: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
179:9: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/category_util_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/category_util_test.py'
--------------------------------------------------------------------------------

38:9: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/autoaugment_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/autoaugment_utils.py'
--------------------------------------------------------------------------------

170:11: INFO: Added keywords to args of function 'tf.convert_to_tensor'
172:11: INFO: Added keywords to args of function 'tf.convert_to_tensor'
174:11: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
175:11: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
181:9: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
213:17: INFO: Added keywords to args of function 'tf.shape'
214:16: INFO: Added keywords to args of function 'tf.shape'
217:25: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
221:24: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
233:9: INFO: Added keywords to args of function 'tf.pad'
238:10: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
249:9: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
259:9: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
278:9: INFO: Added keywords to args of function 'tf.reduce_sum'
318:10: WARNING: tf.contrib.image.rotate requires manual check. (Manual edit required) `tf.contrib.image.rotate` has been migrated to `tfa.image.rotate` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
318:10: ERROR: Using member tf.contrib.image.rotate in deprecated module tf.contrib. tf.contrib.image.rotate cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
346:17: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
346:29: INFO: Added keywords to args of function 'tf.shape'
347:16: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
347:28: INFO: Added keywords to args of function 'tf.shape'
349:36: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
351:36: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
354:10: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
355:10: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
356:17: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
357:17: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
359:17: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
360:16: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
365:14: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
365:42: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
367:14: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
367:42: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
369:14: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
369:42: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
371:14: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
371:42: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
375:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
378:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
400:6: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
400:31: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
401:6: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
401:31: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
402:6: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
402:31: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
403:6: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
403:31: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
413:11: INFO: Added keywords to args of function 'tf.pad'
417:21: INFO: Added keywords to args of function 'tf.pad'
479:17: INFO: Added keywords to args of function 'tf.cond'
482:17: INFO: Added keywords to args of function 'tf.cond'
521:17: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
521:29: INFO: Added keywords to args of function 'tf.shape'
522:16: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
522:28: INFO: Added keywords to args of function 'tf.shape'
523:10: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
524:10: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
525:10: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
526:10: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
527:17: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
528:16: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
542:27: INFO: Added keywords to args of function 'tf.pad'
550:16: INFO: Added keywords to args of function 'tf.pad'
565:21: INFO: Added keywords to args of function 'tf.reduce_sum'
568:11: INFO: Added keywords to args of function 'tf.cond'
604:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
606:28: INFO: Added keywords to args of function 'tf.cond'
611:22: INFO: Added keywords to args of function 'tf.cond'
650:11: INFO: Added keywords to args of function 'tf.cond'
650:28: INFO: Added keywords to args of function 'tf.size'
664:15: INFO: Added keywords to args of function 'tf.shape'
687:27: INFO: Added keywords to args of function 'tf.while_loop'
704:15: INFO: Added keywords to args of function 'tf.shape'
705:18: INFO: Added keywords to args of function 'tf.cond'
803:6: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
803:33: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
814:11: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
815:10: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
816:11: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
817:10: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
827:33: INFO: Added keywords to args of function 'tf.transpose'
829:12: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
829:24: INFO: Added keywords to args of function 'tf.reduce_max'
830:10: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
830:22: INFO: Added keywords to args of function 'tf.reduce_min'
831:12: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
831:24: INFO: Added keywords to args of function 'tf.reduce_min'
832:10: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
832:22: INFO: Added keywords to args of function 'tf.reduce_max'
861:17: INFO: Added keywords to args of function 'tf.shape'
862:16: INFO: Added keywords to args of function 'tf.shape'
873:10: ERROR: Using member tf.contrib.image.translate in deprecated module tf.contrib. tf.contrib.image.translate cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
879:10: ERROR: Using member tf.contrib.image.translate in deprecated module tf.contrib. tf.contrib.image.translate cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
898:11: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
900:10: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
900:22: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
901:10: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
901:22: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
902:10: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
902:22: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
903:10: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
903:22: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
913:10: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
913:31: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
914:10: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
914:31: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
915:10: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
915:31: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
916:10: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
916:31: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
948:17: INFO: Added keywords to args of function 'tf.shape'
949:16: INFO: Added keywords to args of function 'tf.shape'
964:10: WARNING: tf.contrib.image.transform requires manual check. (Manual edit required) `tf.contrib.image.transform` has been migrated to `tfa.image.transform` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
964:10: ERROR: Using member tf.contrib.image.transform in deprecated module tf.contrib. tf.contrib.image.transform cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
975:10: WARNING: tf.contrib.image.transform requires manual check. (Manual edit required) `tf.contrib.image.transform` has been migrated to `tfa.image.transform` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
975:10: ERROR: Using member tf.contrib.image.transform in deprecated module tf.contrib. tf.contrib.image.transform cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
996:6: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
996:33: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
999:10: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
1000:10: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
1001:10: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
1002:10: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
1016:36: INFO: Added keywords to args of function 'tf.transpose'
1019:10: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
1019:22: INFO: Added keywords to args of function 'tf.reduce_min'
1020:10: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
1020:22: INFO: Added keywords to args of function 'tf.reduce_min'
1021:10: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
1021:22: INFO: Added keywords to args of function 'tf.reduce_max'
1022:10: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
1022:22: INFO: Added keywords to args of function 'tf.reduce_max'
1055:17: INFO: Added keywords to args of function 'tf.shape'
1056:16: INFO: Added keywords to args of function 'tf.shape'
1081:9: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
1081:21: INFO: Added keywords to args of function 'tf.reduce_min'
1082:9: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
1082:21: INFO: Added keywords to args of function 'tf.reduce_max'
1088:11: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
1092:13: INFO: Added keywords to args of function 'tf.cond'
1117:15: INFO: Added keywords to args of function 'tf.nn.depthwise_conv2d'
1118:47: INFO: Renamed keyword argument for tf.nn.depthwise_conv2d from rate to dilations
1125:16: INFO: Added keywords to args of function 'tf.pad'
1126:22: INFO: Added keywords to args of function 'tf.pad'
1127:11: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
1142:14: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
1144:12: INFO: Added keywords to args of function 'tf.reduce_sum'
1158:13: INFO: Added keywords to args of function 'tf.cond'
1175:10: INFO: Added keywords to args of function 'tf.shape'
1199:16: INFO: Added keywords to args of function 'tf.shape'
1209:20: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
1241:17: INFO: Added keywords to args of function 'tf.shape'
1242:16: INFO: Added keywords to args of function 'tf.shape'
1246:10: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
1246:22: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
1247:10: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
1247:22: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
1248:10: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
1248:22: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
1249:10: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
1249:22: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
1253:9: INFO: Added keywords to args of function 'tf.reduce_mean'
1254:24: INFO: Renamed keyword argument for tf.reduce_mean from reduction_indices to axis
1260:20: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
1261:19: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
1264:25: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
1268:24: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
1285:9: INFO: Added keywords to args of function 'tf.pad'
1325:19: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
1326:25: INFO: Added keywords to args of function 'tf.shape'
1337:12: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
1345:10: INFO: Added keywords to args of function 'tf.cond'
1345:27: INFO: Added keywords to args of function 'tf.size'
1388:33: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
1389:17: INFO: Added keywords to args of function 'tf.cond'
1531:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
1532:38: INFO: Added keywords to args of function 'tf.cond'
1541:21: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
1545:20: INFO: Added keywords to args of function 'tf.cond'
1631:25: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/ops_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/ops_test.py'
--------------------------------------------------------------------------------

30:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
36:23: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
39:18: INFO: Added keywords to args of function 'tf.convert_to_tensor'
57:19: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
244:33: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
247:34: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
271:33: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
273:34: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
320:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
323:44: INFO: Added keywords to args of function 'tf.shape'
403:18: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
404:18: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
405:20: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
406:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
407:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
408:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
409:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
410:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
411:20: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
461:18: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
462:20: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
467:20: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
493:18: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
494:20: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
495:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
496:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
497:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
498:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
499:20: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
539:18: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
540:20: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
541:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
542:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
543:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
544:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
545:20: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
577:18: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
578:18: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
579:20: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
580:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
581:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
582:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
583:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
584:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
585:20: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
757:13: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
763:17: ERROR: Using member tf.contrib.framework.get_variables in deprecated module tf.contrib. tf.contrib.framework.get_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
767:13: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
776:13: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
784:13: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
802:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
816:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
830:12: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
853:12: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
860:20: INFO: Added keywords to args of function 'tf.reduce_mean'
919:12: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
956:12: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
988:25: INFO: Added keywords to args of function 'tf.reduce_mean'
989:19: INFO: Renamed keyword argument for tf.reduce_mean from reduction_indices to axis
1017:12: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
1018:12: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
1025:20: INFO: Added keywords to args of function 'tf.reduce_mean'
1077:13: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
1078:12: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
1242:12: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
1341:25: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
1342:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/visualization_utils_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/visualization_utils_test.py'
--------------------------------------------------------------------------------

176:17: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
189:10: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
225:17: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
238:10: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
261:17: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
290:17: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
334:24: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
334:46: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
343:25: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
343:47: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
355:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
356:35: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
357:23: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
358:22: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
362:24: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
366:23: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
370:24: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
374:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
399:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/learning_schedules.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/learning_schedules.py'
--------------------------------------------------------------------------------

66:32: INFO: tf.train.exponential_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

66:32: INFO: Renamed 'tf.train.exponential_decay' to 'tf.compat.v1.train.exponential_decay'
74:22: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
130:22: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
140:22: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
142:11: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
209:17: INFO: Added keywords to args of function 'tf.reduce_max'
209:31: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
213:11: INFO: Added keywords to args of function 'tf.reduce_sum'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/per_image_evaluation_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/per_image_evaluation_test.py'
--------------------------------------------------------------------------------

304:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
323:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
346:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/category_util.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/category_util.py'
--------------------------------------------------------------------------------

49:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
74:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/np_box_mask_list.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/np_box_mask_list.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/test_case.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/test_case.py'
--------------------------------------------------------------------------------

25:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
49:22: INFO: Renamed 'tf.placeholder_with_default' to 'tf.compat.v1.placeholder_with_default'
52:16: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
52:51: INFO: Renamed 'tf.tables_initializer' to 'tf.compat.v1.tables_initializer'
53:16: INFO: Renamed 'tf.local_variables_initializer' to 'tf.compat.v1.local_variables_initializer'
77:22: INFO: Renamed 'tf.placeholder_with_default' to 'tf.compat.v1.placeholder_with_default'
79:16: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
79:51: INFO: Renamed 'tf.tables_initializer' to 'tf.compat.v1.tables_initializer'
80:16: INFO: Renamed 'tf.local_variables_initializer' to 'tf.compat.v1.local_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/spatial_transform_ops_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/spatial_transform_ops_test.py'
--------------------------------------------------------------------------------

387:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
393:33: INFO: Renamed 'tf.contrib.tpu.rewrite' to 'tf.compat.v1.tpu.rewrite'
394:17: INFO: Renamed 'tf.contrib.tpu.initialize_system' to 'tf.compat.v1.tpu.initialize_system'
395:17: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
400:17: INFO: Renamed 'tf.contrib.tpu.shutdown_system' to 'tf.compat.v1.tpu.shutdown_system'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/per_image_vrd_evaluation_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/per_image_vrd_evaluation_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/json_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/json_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/metrics.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/metrics.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/np_box_list.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/np_box_list.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/dataset_util.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/dataset_util.py'
--------------------------------------------------------------------------------

62:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/model_util.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/model_util.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/np_mask_ops.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/np_mask_ops.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/patch_ops_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/patch_ops_test.py'
--------------------------------------------------------------------------------

112:8: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
113:8: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
131:22: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/np_box_ops_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/np_box_ops_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/static_shape.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/static_shape.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/config_util.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/config_util.py'
--------------------------------------------------------------------------------

102:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
148:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
188:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
189:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
218:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
224:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
230:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
236:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
242:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
488:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
498:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/np_mask_ops_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/np_mask_ops_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/per_image_vrd_evaluation.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/per_image_vrd_evaluation.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/context_manager_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/context_manager_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/learning_schedules_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/learning_schedules_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/vrd_evaluation_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/vrd_evaluation_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/test_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/test_utils.py'
--------------------------------------------------------------------------------

58:17: INFO: Added keywords to args of function 'tf.shape'
78:11: INFO: Added keywords to args of function 'tf.reduce_sum'
110:11: INFO: Added keywords to args of function 'tf.reduce_sum'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/test_utils_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/test_utils_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/np_box_mask_list_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/np_box_mask_list_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/metrics_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/metrics_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/dataset_util_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/dataset_util_test.py'
--------------------------------------------------------------------------------

33:9: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/context_manager.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/context_manager.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/ops.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/ops.py'
--------------------------------------------------------------------------------

53:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

53:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
123:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

123:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
124:8: INFO: Added keywords to args of function 'tf.convert_to_tensor'
125:8: INFO: Added keywords to args of function 'tf.convert_to_tensor'
126:33: INFO: Added keywords to args of function 'tf.shape'
127:33: INFO: Added keywords to args of function 'tf.shape'
155:18: INFO: Added keywords to args of function 'tf.pad'
187:17: INFO: Added keywords to args of function 'tf.shape'
190:20: INFO: Added keywords to args of function 'tf.shape'
192:8: INFO: Renamed 'tf.ceil' to 'tf.math.ceil'
201:19: INFO: Added keywords to args of function 'tf.shape'
203:8: INFO: Renamed 'tf.ceil' to 'tf.math.ceil'
212:19: INFO: Added keywords to args of function 'tf.shape'
269:11: INFO: Added keywords to args of function 'tf.pad'
270:11: INFO: Added keywords to args of function 'tf.cond'
270:30: INFO: Added keywords to args of function 'tf.size'
296:20: INFO: Added keywords to args of function 'tf.reduce_sum'
340:9: INFO: Added keywords to args of function 'tf.reduce_sum'
375:27: INFO: Added keywords to args of function 'tf.shape'
427:17: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
441:9: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
442:6: INFO: Renamed 'tf.is_nan' to 'tf.math.is_nan'
442:39: INFO: Added keywords to args of function 'tf.shape'
466:27: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
490:36: INFO: Added keywords to args of function 'tf.reduce_sum'
491:53: INFO: Renamed keyword argument for tf.reduce_sum from reduction_indices to axis
491:6: INFO: Renamed 'tf.is_nan' to 'tf.math.is_nan'
493:18: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
521:23: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
568:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
591:18: ERROR: Using member tf.contrib.framework.model_variable in deprecated module tf.contrib. tf.contrib.framework.model_variable cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
596:13: INFO: Added keywords to args of function 'tf.reduce_mean'
597:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
597:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
597:24: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
598:32: INFO: Added keywords to args of function 'tf.reduce_sum'
766:19: INFO: Added keywords to args of function 'tf.shape'
773:34: INFO: Added keywords to args of function 'tf.reduce_mean'
779:21: INFO: Added keywords to args of function 'tf.space_to_depth'
779:21: INFO: Renamed 'tf.space_to_depth' to 'tf.compat.v1.space_to_depth'
787:8: INFO: Renamed 'tf.batch_to_space_nd' to 'tf.batch_to_space'
794:36: INFO: Added keywords to args of function 'tf.depth_to_space'
794:36: INFO: Renamed 'tf.depth_to_space' to 'tf.compat.v1.depth_to_space'
832:16: INFO: Added keywords to args of function 'tf.shape'
839:8: INFO: Renamed keyword argument for tf.image.crop_and_resize from box_ind to box_indices
842:16: INFO: Added keywords to args of function 'tf.cond'
843:6: INFO: Added keywords to args of function 'tf.shape'
875:16: INFO: Added keywords to args of function 'tf.shape'
876:18: INFO: Added keywords to args of function 'tf.shape'
877:22: INFO: Added keywords to args of function 'tf.shape'
883:25: INFO: tf.assert_equal requires manual check. tf.assert_equal has been changed to return None, the data argument has been removed, and arguments have been reordered.
The calls have been converted to compat.v1 for safety (even though  they may already have been correct).
883:25: INFO: Renamed 'tf.assert_equal' to 'tf.compat.v1.assert_equal'
889:22: INFO: Changed tf.to_int64 call to tf.cast(..., dtype=tf.int64).
897:16: INFO: Added keywords to args of function 'tf.shape'
898:23: INFO: Added keywords to args of function 'tf.shape'
899:25: INFO: Renamed 'tf.unsorted_segment_min' to 'tf.math.unsorted_segment_min'
902:21: INFO: Changed tf.to_int64 call to tf.cast(..., dtype=tf.int64).
903:14: INFO: Changed tf.to_int64 call to tf.cast(..., dtype=tf.int64).
910:20: INFO: Added keywords to args of function 'tf.boolean_mask'
911:24: INFO: Added keywords to args of function 'tf.boolean_mask'
912:28: INFO: Renamed 'tf.sparse_to_dense' to 'tf.compat.v1.sparse_to_dense'
915:33: INFO: Renamed 'tf.sparse_to_dense' to 'tf.compat.v1.sparse_to_dense'
923:17: INFO: Changed tf.to_int64 call to tf.cast(..., dtype=tf.int64).
965:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

965:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
992:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

992:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1026:23: INFO: Added keywords to args of function 'tf.reduce_prod'
1027:18: INFO: Renamed 'tf.log' to 'tf.math.log'
1029:6: INFO: Renamed 'tf.floordiv' to 'tf.math.floordiv'
1029:18: INFO: Renamed 'tf.log' to 'tf.math.log'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/np_box_mask_list_ops.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/np_box_mask_list_ops.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/visualization_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/visualization_utils.py'
--------------------------------------------------------------------------------

109:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
110:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
124:2: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
402:6: INFO: Removed argument align_corners for function tf.image.resize_images
398:10: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
497:23: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
904:13: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
905:2: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
905:2: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
933:14: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
934:2: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
934:2: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
1042:13: INFO: Added keywords to args of function 'tf.cond'
1043:19: INFO: Added keywords to args of function 'tf.size'
1043:27: INFO: Added keywords to args of function 'tf.shape'
1044:18: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1044:18: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
1051:18: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
1052:22: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/config_util_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/config_util_test.py'
--------------------------------------------------------------------------------

40:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
212:14: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
305:14: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
327:14: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
342:14: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
359:14: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
368:14: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
378:14: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
385:14: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
404:14: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
427:14: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/shape_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/shape_utils.py'
--------------------------------------------------------------------------------

73:12: INFO: Added keywords to args of function 'tf.shape'
76:14: INFO: Added keywords to args of function 'tf.cond'
131:17: INFO: Added keywords to args of function 'tf.shape'
133:6: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
143:25: INFO: Added keywords to args of function 'tf.shape'
154:18: INFO: Added keywords to args of function 'tf.pad'
175:25: INFO: Added keywords to args of function 'tf.shape'
283:40: INFO: Added keywords to args of function 'tf.shape'
284:40: INFO: Added keywords to args of function 'tf.shape'
323:11: INFO: tf.assert_equal requires manual check. tf.assert_equal has been changed to return None, the data argument has been removed, and arguments have been reordered.
The calls have been converted to compat.v1 for safety (even though  they may already have been correct).
323:11: INFO: Renamed 'tf.assert_equal' to 'tf.compat.v1.assert_equal'
352:11: INFO: tf.assert_equal requires manual check. tf.assert_equal has been changed to return None, the data argument has been removed, and arguments have been reordered.
The calls have been converted to compat.v1 for safety (even though  they may already have been correct).
352:11: INFO: Renamed 'tf.assert_equal' to 'tf.compat.v1.assert_equal'
369:16: INFO: Added keywords to args of function 'tf.reduce_min'
370:16: INFO: Added keywords to args of function 'tf.reduce_max'
408:23: INFO: Added keywords to args of function 'tf.reduce_prod'
459:14: INFO: tf.assert_equal requires manual check. tf.assert_equal has been changed to return None, the data argument has been removed, and arguments have been reordered.
The calls have been converted to compat.v1 for safety (even though  they may already have been correct).
459:14: INFO: Renamed 'tf.assert_equal' to 'tf.compat.v1.assert_equal'
460:23: INFO: Added keywords to args of function 'tf.reduce_prod'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/patch_ops.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/patch_ops.py'
--------------------------------------------------------------------------------

56:6: INFO: tf.debugging.assert_greater_equal requires manual check. tf.debugging.assert_greater_equal has been changed to return None, the data argument has been removed, and arguments have been reordered.
The calls have been converted to compat.v1 for safety (even though  they may already have been correct).
56:6: INFO: Renamed 'tf.debugging.assert_greater_equal' to 'tf.compat.v1.debugging.assert_greater_equal'
59:6: INFO: tf.debugging.assert_greater_equal requires manual check. tf.debugging.assert_greater_equal has been changed to return None, the data argument has been removed, and arguments have been reordered.
The calls have been converted to compat.v1 for safety (even though  they may already have been correct).
59:6: INFO: Renamed 'tf.debugging.assert_greater_equal' to 'tf.compat.v1.debugging.assert_greater_equal'
62:6: INFO: tf.debugging.assert_less requires manual check. tf.debugging.assert_less has been changed to return None, the data argument has been removed, and arguments have been reordered.
The calls have been converted to compat.v1 for safety (even though  they may already have been correct).
62:6: INFO: Renamed 'tf.debugging.assert_less' to 'tf.compat.v1.debugging.assert_less'
70:36: INFO: Renamed 'tf.ceil' to 'tf.math.ceil'
85:9: INFO: Added keywords to args of function 'tf.pad'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/np_box_list_ops_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/np_box_list_ops_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/np_box_ops.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/np_box_ops.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/np_box_list_ops.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/np_box_list_ops.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/label_map_util.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/label_map_util.py'
--------------------------------------------------------------------------------

138:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/vrd_evaluation.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/vrd_evaluation.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/object_detection/utils/np_box_mask_list_ops_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/object_detection/utils/np_box_mask_list_ops_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/trust_region.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/pcl_rl/trust_region.py'
--------------------------------------------------------------------------------

37:10: INFO: Added keywords to args of function 'tf.gradients'
75:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
76:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
99:8: INFO: Added keywords to args of function 'tf.reduce_sum'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/policy.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/pcl_rl/policy.py'
--------------------------------------------------------------------------------

37:23: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
37:23: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
38:23: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
38:23: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
52:11: INFO: Renamed 'tf.contrib.rnn.LSTMCell' to 'tf.compat.v1.nn.rnn_cell.LSTMCell'
54:41: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
56:11: WARNING: Using member tf.contrib.rnn.OutputProjectionWrapper in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
56:11: ERROR: Using member tf.contrib.rnn.OutputProjectionWrapper in deprecated module tf.contrib. tf.contrib.rnn.OutputProjectionWrapper cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
58:14: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
65:17: INFO: Added keywords to args of function 'tf.shape'
71:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
71:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
76:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
76:10: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
89:16: INFO: Renamed 'tf.mod' to 'tf.math.floormod'
90:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
90:14: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
93:24: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
96:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
96:14: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
114:14: INFO: Added keywords to args of function 'tf.argmax'
116:25: INFO: Added keywords to args of function 'tf.multinomial'
116:25: INFO: Renamed 'tf.multinomial' to 'tf.random.categorical'
123:21: INFO: Added keywords to args of function 'tf.shape'
124:28: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
134:16: INFO: Added keywords to args of function 'tf.reduce_sum'
139:16: INFO: Added keywords to args of function 'tf.reduce_sum'
140:21: INFO: Renamed 'tf.log' to 'tf.math.log'
156:16: INFO: Added keywords to args of function 'tf.reduce_sum'
164:16: INFO: Added keywords to args of function 'tf.reduce_sum'
165:10: INFO: Renamed 'tf.log' to 'tf.math.log'
178:21: INFO: Added keywords to args of function 'tf.reduce_sum'
183:30: INFO: Renamed 'tf.log' to 'tf.math.log'
185:21: INFO: Added keywords to args of function 'tf.reduce_sum'
205:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
205:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
250:16: INFO: Added keywords to args of function 'tf.reduce_sum'
256:16: INFO: Added keywords to args of function 'tf.reduce_sum'
257:12: INFO: Renamed 'tf.log' to 'tf.math.log'
295:17: INFO: Added keywords to args of function 'tf.shape'
296:18: INFO: Added keywords to args of function 'tf.shape'
334:17: INFO: Added keywords to args of function 'tf.shape'
335:18: INFO: Added keywords to args of function 'tf.shape'
357:11: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
357:11: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
358:11: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
358:11: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
360:11: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
360:11: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
361:11: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
361:11: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
363:11: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
363:11: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
364:11: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
364:11: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
366:13: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
366:13: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
381:17: INFO: Added keywords to args of function 'tf.shape'
404:17: INFO: Added keywords to args of function 'tf.shape'
405:18: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/replay_buffer.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/pcl_rl/replay_buffer.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/pcl_rl/model.py'
--------------------------------------------------------------------------------

58:30: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
60:33: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
64:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
72:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
75:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
84:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
87:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
96:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
99:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
107:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
110:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
113:10: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
116:19: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
117:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
118:16: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
120:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
128:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
128:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
129:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
129:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
131:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
133:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
141:23: INFO: Added keywords to args of function 'tf.reduce_sum'
142:23: INFO: Added keywords to args of function 'tf.reduce_sum'
145:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
153:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
162:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
168:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
194:23: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
197:23: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
202:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
204:16: INFO: Added keywords to args of function 'tf.reduce_sum'
205:16: INFO: Added keywords to args of function 'tf.reduce_sum'
213:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
222:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
225:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/trainer.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/pcl_rl/trainer.py'
--------------------------------------------------------------------------------

43:8: ERROR: Using member tf.flags in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
240:10: INFO: tf.train.exponential_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

240:10: INFO: Renamed 'tf.train.exponential_decay' to 'tf.compat.v1.train.exponential_decay'
375:27: ERROR: Using member tf.contrib.framework.get_or_create_global_step in deprecated module tf.contrib. tf.contrib.framework.get_or_create_global_step cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
376:8: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
380:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
380:31: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
384:16: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
396:6: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
397:25: ERROR: Using member tf.contrib.framework.get_or_create_global_step in deprecated module tf.contrib. tf.contrib.framework.get_or_create_global_step cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
401:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
401:29: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
405:14: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
406:13: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
407:15: INFO: Renamed 'tf.initialize_all_variables' to 'tf.compat.v1.initialize_all_variables'
463:6: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/expert_paths.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/pcl_rl/expert_paths.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/controller.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/pcl_rl/controller.py'
--------------------------------------------------------------------------------

29:8: ERROR: Using member tf.flags in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/objective.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/pcl_rl/objective.py'
--------------------------------------------------------------------------------

32:11: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
38:13: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
39:12: INFO: Added keywords to args of function 'tf.gradients'
43:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
43:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
60:38: INFO: Added keywords to args of function 'tf.shape'
62:16: INFO: Added keywords to args of function 'tf.transpose'
62:40: INFO: Added keywords to args of function 'tf.nn.conv1d'
62:40: INFO: Renamed keyword argument for tf.nn.conv1d from value to input
63:21: INFO: Added keywords to args of function 'tf.transpose'
75:30: INFO: Added keywords to args of function 'tf.shape'
76:30: INFO: Added keywords to args of function 'tf.shape'
78:16: INFO: Added keywords to args of function 'tf.transpose'
78:40: INFO: Added keywords to args of function 'tf.nn.conv1d'
78:40: INFO: Renamed keyword argument for tf.nn.conv1d from value to input
79:21: INFO: Added keywords to args of function 'tf.transpose'
115:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
115:22: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
116:38: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
116:38: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
118:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
128:17: INFO: Added keywords to args of function 'tf.shape'
156:18: INFO: Added keywords to args of function 'tf.reduce_mean'
157:8: INFO: Added keywords to args of function 'tf.reduce_sum'
158:18: INFO: Added keywords to args of function 'tf.reduce_mean'
159:8: INFO: Added keywords to args of function 'tf.reduce_sum'
160:18: INFO: Added keywords to args of function 'tf.reduce_mean'
161:8: INFO: Added keywords to args of function 'tf.reduce_sum'
167:15: INFO: Added keywords to args of function 'tf.reduce_mean'
168:8: INFO: Added keywords to args of function 'tf.reduce_sum'
173:4: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
173:4: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
173:38: INFO: Added keywords to args of function 'tf.reduce_sum'
174:4: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
174:4: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
174:36: INFO: Added keywords to args of function 'tf.reduce_sum'
175:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
175:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
176:22: INFO: Added keywords to args of function 'tf.reduce_mean'
176:37: INFO: Added keywords to args of function 'tf.reduce_sum'
177:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
177:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
178:22: INFO: Added keywords to args of function 'tf.reduce_mean'
178:37: INFO: Added keywords to args of function 'tf.reduce_sum'
179:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
179:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
180:22: INFO: Added keywords to args of function 'tf.reduce_mean'
180:37: INFO: Added keywords to args of function 'tf.reduce_sum'
181:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
181:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
182:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
182:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
185:26: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
185:26: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
201:17: INFO: Added keywords to args of function 'tf.shape'
261:18: INFO: Added keywords to args of function 'tf.reduce_mean'
262:8: INFO: Added keywords to args of function 'tf.reduce_sum'
263:18: INFO: Added keywords to args of function 'tf.reduce_mean'
264:8: INFO: Added keywords to args of function 'tf.reduce_sum'
271:15: INFO: Added keywords to args of function 'tf.reduce_mean'
272:8: INFO: Added keywords to args of function 'tf.reduce_sum'
277:4: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
277:4: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
277:38: INFO: Added keywords to args of function 'tf.reduce_sum'
278:4: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
278:4: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
278:36: INFO: Added keywords to args of function 'tf.reduce_sum'
279:4: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
279:4: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
280:4: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
280:4: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
281:4: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
281:4: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
282:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
282:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
283:22: INFO: Added keywords to args of function 'tf.reduce_mean'
283:37: INFO: Added keywords to args of function 'tf.reduce_sum'
284:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
284:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
285:22: INFO: Added keywords to args of function 'tf.reduce_mean'
285:37: INFO: Added keywords to args of function 'tf.reduce_sum'
286:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
286:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
287:22: INFO: Added keywords to args of function 'tf.reduce_mean'
287:37: INFO: Added keywords to args of function 'tf.reduce_sum'
288:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
288:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
289:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
289:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
289:34: INFO: Added keywords to args of function 'tf.reduce_mean'
290:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
290:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
294:26: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
294:26: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
305:17: INFO: Added keywords to args of function 'tf.shape'
334:18: INFO: Added keywords to args of function 'tf.reduce_mean'
335:8: INFO: Added keywords to args of function 'tf.reduce_sum'
336:18: INFO: Added keywords to args of function 'tf.reduce_mean'
337:8: INFO: Added keywords to args of function 'tf.reduce_sum'
352:4: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
352:4: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
352:38: INFO: Added keywords to args of function 'tf.reduce_sum'
353:4: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
353:4: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
353:36: INFO: Added keywords to args of function 'tf.reduce_sum'
354:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
354:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
355:22: INFO: Added keywords to args of function 'tf.reduce_mean'
355:37: INFO: Added keywords to args of function 'tf.reduce_sum'
356:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
356:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
357:22: INFO: Added keywords to args of function 'tf.reduce_mean'
357:37: INFO: Added keywords to args of function 'tf.reduce_sum'
358:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
358:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
359:22: INFO: Added keywords to args of function 'tf.reduce_mean'
359:37: INFO: Added keywords to args of function 'tf.reduce_sum'
360:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
360:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
361:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
361:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
364:26: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
364:26: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/gym_wrapper.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/pcl_rl/gym_wrapper.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/baseline.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/pcl_rl/baseline.py'
--------------------------------------------------------------------------------

45:23: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
45:23: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
97:17: INFO: Added keywords to args of function 'tf.shape'
98:18: INFO: Added keywords to args of function 'tf.shape'
127:21: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
137:17: INFO: Added keywords to args of function 'tf.shape'
138:18: INFO: Added keywords to args of function 'tf.shape'
150:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
151:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
151:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
155:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
155:10: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
169:17: INFO: Added keywords to args of function 'tf.shape'
170:18: INFO: Added keywords to args of function 'tf.shape'
178:14: INFO: Added keywords to args of function 'tf.reduce_max'
178:42: INFO: Renamed keyword argument for tf.reduce_max from keep_dims to keepdims
179:45: INFO: Renamed 'tf.log' to 'tf.math.log'
180:10: INFO: Added keywords to args of function 'tf.reduce_sum'
192:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
192:10: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/full_episode_objective.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/pcl_rl/full_episode_objective.py'
--------------------------------------------------------------------------------

47:17: INFO: Added keywords to args of function 'tf.shape'
53:20: INFO: Added keywords to args of function 'tf.reduce_sum'
54:22: INFO: Added keywords to args of function 'tf.reduce_sum'
60:15: INFO: Added keywords to args of function 'tf.reduce_mean'
60:52: INFO: Renamed keyword argument for tf.reduce_mean from keep_dims to keepdims
63:11: INFO: Added keywords to args of function 'tf.reduce_mean'
69:4: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
69:4: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
70:4: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
70:4: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
71:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
71:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
72:22: INFO: Added keywords to args of function 'tf.reduce_mean'
73:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
73:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
75:51: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
75:51: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/optimizers.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/pcl_rl/optimizers.py'
--------------------------------------------------------------------------------

39:10: INFO: Added keywords to args of function 'tf.gradients'
77:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
78:27: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
86:21: INFO: Added keywords to args of function 'tf.reduce_sum'
87:23: INFO: Added keywords to args of function 'tf.reduce_sum'
121:11: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
125:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
126:27: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
134:21: INFO: Added keywords to args of function 'tf.reduce_sum'
135:23: INFO: Added keywords to args of function 'tf.reduce_sum'
139:12: INFO: Added keywords to args of function 'tf.gradients'
159:33: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
172:36: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/pcl_rl/env_spec.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/pcl_rl/env_spec.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/swivel/nearest.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/swivel/nearest.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/swivel/vecs.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/swivel/vecs.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/swivel/glove_to_shards.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/swivel/glove_to_shards.py'
--------------------------------------------------------------------------------

49:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
56:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
155:7: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
198:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/swivel/swivel.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/swivel/swivel.py'
--------------------------------------------------------------------------------

66:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
143:25: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
143:25: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
146:20: INFO: tf.random_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
146:20: INFO: Renamed 'tf.random_normal_initializer' to 'tf.compat.v1.random_normal_initializer'
148:25: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
148:25: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
151:20: INFO: tf.random_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
151:20: INFO: Renamed 'tf.random_normal_initializer' to 'tf.compat.v1.random_normal_initializer'
161:20: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
161:20: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
162:20: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
162:20: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
170:23: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
173:36: INFO: Renamed 'tf.log' to 'tf.math.log'
189:32: INFO: Added keywords to args of function 'tf.reduce_sum'
192:37: INFO: Added keywords to args of function 'tf.reduce_sum'
198:12: INFO: Renamed 'tf.train.AdagradOptimizer' to 'tf.compat.v1.train.AdagradOptimizer'
200:12: INFO: Renamed 'tf.train.RMSPropOptimizer' to 'tf.compat.v1.train.RMSPropOptimizer'
204:23: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
204:23: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
229:21: INFO: Renamed 'tf.train.string_input_producer' to 'tf.compat.v1.train.string_input_producer'
230:13: INFO: Renamed 'tf.WholeFileReader' to 'tf.compat.v1.WholeFileReader'
232:15: INFO: Added keywords to args of function 'tf.parse_single_example'
232:15: INFO: Renamed 'tf.parse_single_example' to 'tf.io.parse_single_example'
235:26: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
236:26: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
237:32: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
238:32: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
239:28: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
253:12: INFO: Renamed 'tf.sparse_to_dense' to 'tf.compat.v1.sparse_to_dense'
277:12: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
277:12: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
281:12: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
281:12: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
287:14: INFO: Added keywords to args of function 'tf.reduce_sum'
288:34: INFO: Renamed keyword argument for tf.nn.l2_normalize from dim to axis
288:69: INFO: Renamed keyword argument for tf.nn.l2_normalize from dim to axis
295:11: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
334:12: INFO: Renamed keyword argument for tf.nn.l2_normalize from dim to axis
333:12: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
333:12: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
343:64: INFO: Renamed keyword argument for tf.nn.l2_normalize from dim to axis
359:11: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
387:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
387:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
401:15: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
403:15: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
403:42: INFO: Renamed 'tf.GPUOptions' to 'tf.compat.v1.GPUOptions'
409:13: INFO: Renamed 'tf.train.Server' to 'tf.distribute.Server'
418:20: INFO: Renamed 'tf.train.replica_device_setter' to 'tf.compat.v1.train.replica_device_setter'
424:20: INFO: Renamed 'tf.train.replica_device_setter' to 'tf.compat.v1.train.replica_device_setter'
443:12: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
443:12: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
452:12: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
452:12: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
454:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
454:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
457:17: INFO: Renamed 'tf.train.Supervisor' to 'tf.compat.v1.train.Supervisor'
477:10: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
482:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
489:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/swivel/text2bin.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/swivel/text2bin.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/swivel/wordsim.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/swivel/wordsim.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/swivel/prep.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/swivel/prep.py'
--------------------------------------------------------------------------------

67:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
317:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/struct2depth/project.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/struct2depth/project.py'
--------------------------------------------------------------------------------

45:9: INFO: Added keywords to args of function 'tf.shape'
65:24: INFO: Added keywords to args of function 'tf.transpose'
73:14: INFO: Added keywords to args of function 'tf.shape'
113:6: INFO: Added keywords to args of function 'tf.transpose'
143:15: INFO: Added keywords to args of function 'tf.shape'
197:32: INFO: Renamed keyword argument for tf.squeeze from squeeze_dims to axis
227:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
232:17: INFO: Added keywords to args of function 'tf.shape'
235:8: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
236:8: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
240:20: INFO: Added keywords to args of function 'tf.shape'
241:20: INFO: Added keywords to args of function 'tf.shape'
256:11: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
280:14: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
286:11: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
287:11: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
303:23: INFO: Added keywords to args of function 'tf.shape'
304:22: INFO: Added keywords to args of function 'tf.shape'
316:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

316:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
323:17: INFO: Added keywords to args of function 'tf.transpose'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/struct2depth/util.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/struct2depth/util.py'
--------------------------------------------------------------------------------

168:15: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
170:24: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
178:15: ERROR: Using member tf.contrib.framework.list_variables in deprecated module tf.contrib. tf.contrib.framework.list_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
218:19: ERROR: Using member tf.contrib.framework.list_variables in deprecated module tf.contrib. tf.contrib.framework.list_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
220:15: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
249:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/struct2depth/train.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/struct2depth/train.py'
--------------------------------------------------------------------------------

118:2: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
200:22: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
203:10: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
204:7: INFO: Renamed 'tf.train.Supervisor' to 'tf.compat.v1.train.Supervisor'
206:11: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
250:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/struct2depth/model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/struct2depth/model.py'
--------------------------------------------------------------------------------

33:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
179:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
205:43: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
205:43: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
218:8: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
225:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
237:29: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
261:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
305:27: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
320:23: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
324:23: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
338:27: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
340:26: INFO: Added keywords to args of function 'tf.reduce_max'
341:26: INFO: Added keywords to args of function 'tf.reduce_min'
345:34: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
346:35: INFO: Added keywords to args of function 'tf.boolean_mask'
355:43: INFO: Added keywords to args of function 'tf.reduce_mean'
359:37: INFO: Added keywords to args of function 'tf.reduce_mean'
364:33: INFO: Added keywords to args of function 'tf.reduce_mean'
399:12: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
402:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

402:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
419:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

419:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
446:27: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
446:27: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
458:28: INFO: Added keywords to args of function 'tf.reduce_mean'
459:43: INFO: Renamed keyword argument for tf.reduce_mean from keep_dims to keepdims
545:51: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
550:47: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
555:20: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
557:33: INFO: Added keywords to args of function 'tf.reduce_sum'
582:36: INFO: Added keywords to args of function 'tf.reduce_mean'
592:34: INFO: Added keywords to args of function 'tf.reduce_mean'
605:34: INFO: Added keywords to args of function 'tf.reduce_mean'
609:32: INFO: Added keywords to args of function 'tf.reduce_mean'
637:24: INFO: Added keywords to args of function 'tf.reduce_mean'
638:24: INFO: Added keywords to args of function 'tf.reduce_mean'
641:11: INFO: Added keywords to args of function 'tf.reduce_mean'
641:47: INFO: Added keywords to args of function 'tf.reduce_mean'
658:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

658:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
659:14: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
662:30: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
667:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
667:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
668:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
668:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
670:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
670:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
672:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
672:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
674:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
674:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
675:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
675:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
678:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
678:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
679:6: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
679:6: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
687:10: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
687:10: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
694:10: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
694:10: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
702:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
702:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
709:10: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
709:10: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
711:10: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
711:10: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
713:10: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
713:10: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
715:10: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
715:10: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
717:10: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
717:10: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
719:10: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
719:10: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
723:6: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
723:6: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
724:6: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
724:6: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
725:6: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
725:6: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
726:6: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
726:6: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
727:6: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
727:6: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
728:6: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
728:6: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
732:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
732:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
735:10: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
735:10: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
736:10: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
736:10: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
737:10: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
737:10: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
740:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
740:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
742:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
742:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
745:10: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
745:10: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
748:10: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
748:10: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
751:10: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
751:10: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
752:10: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
752:10: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
753:10: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
753:10: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
754:10: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
754:10: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
755:10: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
755:10: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
756:10: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
756:10: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
760:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
761:20: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
777:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
792:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
797:10: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
805:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
817:27: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
829:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/struct2depth/gen_data_city.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/struct2depth/gen_data_city.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/struct2depth/nets.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/struct2depth/nets.py'
--------------------------------------------------------------------------------

25:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
63:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
67:44: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

80:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
88:24: INFO: Added keywords to args of function 'tf.reduce_mean'
118:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
122:44: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

135:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
143:24: INFO: Added keywords to args of function 'tf.reduce_mean'
186:42: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

215:42: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

252:15: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
252:15: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
265:15: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
265:15: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
278:15: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
278:15: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
310:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
314:8: INFO: Added keywords to args of function 'tf.nn.max_pool'
314:8: INFO: Renamed keyword argument for tf.nn.max_pool from value to input
314:8: INFO: Renamed 'tf.nn.max_pool' to 'tf.nn.max_pool2d'
356:8: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

369:12: INFO: Added keywords to args of function 'tf.pad'
380:12: INFO: Added keywords to args of function 'tf.pad'
384:18: INFO: Added keywords to args of function 'tf.pad'
397:12: INFO: Added keywords to args of function 'tf.pad'
400:18: INFO: Added keywords to args of function 'tf.pad'
413:12: INFO: Added keywords to args of function 'tf.pad'
416:18: INFO: Added keywords to args of function 'tf.pad'
425:14: INFO: Added keywords to args of function 'tf.pad'
428:18: INFO: Added keywords to args of function 'tf.pad'
440:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
446:19: INFO: Added keywords to args of function 'tf.nn.max_pool'
446:19: INFO: Renamed keyword argument for tf.nn.max_pool from value to input
446:19: INFO: Renamed 'tf.nn.max_pool' to 'tf.nn.max_pool2d'
465:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
488:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
491:15: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
491:15: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
493:34: INFO: tf.random_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
493:34: INFO: Renamed 'tf.random_normal_initializer' to 'tf.compat.v1.random_normal_initializer'
495:21: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
496:6: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
497:11: INFO: Added keywords to args of function 'tf.nn.conv2d'
497:11: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
503:7: INFO: Renamed 'tf.layers.batch_normalization' to 'tf.compat.v1.layers.batch_normalization'
524:11: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
524:11: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/struct2depth/inference.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/struct2depth/inference.py'
--------------------------------------------------------------------------------

159:10: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
160:7: INFO: Renamed 'tf.train.Supervisor' to 'tf.compat.v1.train.Supervisor'
225:14: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/struct2depth/optimize.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/struct2depth/optimize.py'
--------------------------------------------------------------------------------

209:2: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
309:22: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
310:7: INFO: Renamed 'tf.train.Supervisor' to 'tf.compat.v1.train.Supervisor'
312:11: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
369:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/struct2depth/alignment.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/struct2depth/alignment.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/struct2depth/reader.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/struct2depth/reader.py'
--------------------------------------------------------------------------------

64:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

64:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
65:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

65:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
68:28: INFO: Renamed 'tf.train.string_input_producer' to 'tf.compat.v1.train.string_input_producer'
73:26: INFO: Renamed 'tf.train.string_input_producer' to 'tf.compat.v1.train.string_input_producer'
77:26: INFO: Renamed 'tf.train.string_input_producer' to 'tf.compat.v1.train.string_input_producer'
81:21: INFO: Renamed 'tf.WholeFileReader' to 'tf.compat.v1.WholeFileReader'
83:21: INFO: Renamed 'tf.WholeFileReader' to 'tf.compat.v1.WholeFileReader'
92:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

92:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
93:21: INFO: Renamed 'tf.TextLineReader' to 'tf.compat.v1.TextLineReader'
98:22: INFO: Added keywords to args of function 'tf.decode_csv'
98:22: INFO: Renamed 'tf.decode_csv' to 'tf.io.decode_csv'
102:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

102:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
106:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

106:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
114:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

114:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
120:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

120:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
125:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

125:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
129:28: INFO: Renamed 'tf.matrix_inverse' to 'tf.linalg.inv'
141:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

141:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
144:32: INFO: Renamed 'tf.train.shuffle_batch' to 'tf.compat.v1.train.shuffle_batch'
152:32: INFO: Renamed 'tf.train.batch' to 'tf.compat.v1.train.batch'
164:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

164:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
184:31: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
186:22: INFO: Added keywords to args of function 'tf.cond'
192:29: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
194:22: INFO: Added keywords to args of function 'tf.cond'
200:31: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
202:22: INFO: Added keywords to args of function 'tf.cond'
208:24: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
210:22: INFO: Added keywords to args of function 'tf.cond'
234:13: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
237:13: INFO: Added keywords to args of function 'tf.cond'
250:16: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
257:11: INFO: Changed tf.image.resize_area call to tf.image.resize(..., method=tf.image.ResizeMethod.AREA).
260:12: INFO: Changed tf.image.resize_area call to tf.image.resize(..., method=tf.image.ResizeMethod.AREA).
273:33: INFO: Added keywords to args of function 'tf.shape'
274:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
275:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/struct2depth/gen_data_kitti.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/struct2depth/gen_data_kitti.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/single_task/ga_train.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/single_task/ga_train.py'
--------------------------------------------------------------------------------

74:9: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
88:9: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
112:11: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
186:11: INFO: Renamed 'tf.gfile.IsDirectory' to 'tf.io.gfile.isdir'
187:6: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
283:5: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
285:11: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
298:11: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
313:7: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/single_task/ga_train_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/single_task/ga_train_test.py'
--------------------------------------------------------------------------------

33:19: INFO: Renamed 'tf.test.get_temp_dir' to 'tf.compat.v1.test.get_temp_dir'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/single_task/pg_train.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/single_task/pg_train.py'
--------------------------------------------------------------------------------

125:9: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
125:9: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
126:42: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
126:42: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
171:4: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
174:19: INFO: Renamed 'tf.train.replica_device_setter' to 'tf.compat.v1.train.replica_device_setter'
177:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
190:46: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
215:38: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
215:38: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
217:24: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
217:24: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
218:32: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
236:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
270:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
273:27: INFO: Renamed 'tf.variables_initializer' to 'tf.compat.v1.variables_initializer'
274:10: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
274:28: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
275:28: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
287:47: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
289:13: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
298:8: INFO: Renamed 'tf.gfile.Remove' to 'tf.io.gfile.remove'
345:12: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
346:23: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
350:12: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
351:23: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
355:12: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
356:23: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
367:11: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
368:8: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
371:8: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
379:6: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
401:6: INFO: Renamed 'tf.gfile.Remove' to 'tf.io.gfile.remove'
411:11: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
478:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
479:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
483:21: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
483:21: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
504:34: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
506:19: INFO: Renamed 'tf.variables_initializer' to 'tf.compat.v1.variables_initializer'
507:10: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
509:13: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
509:31: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
510:31: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
516:11: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
522:7: INFO: Renamed 'tf.train.Supervisor' to 'tf.compat.v1.train.Supervisor'
529:36: INFO: Renamed 'tf.report_uninitialized_variables' to 'tf.compat.v1.report_uninitialized_variables'
625:15: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
689:9: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
725:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
726:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
759:9: INFO: Renamed 'tf.container' to 'tf.compat.v1.container'
766:6: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
777:4: INFO: Renamed 'tf.reset_default_graph' to 'tf.compat.v1.reset_default_graph'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/single_task/defaults.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/single_task/defaults.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/single_task/results_lib_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/single_task/results_lib_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/single_task/aggregate_experiment_results.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/single_task/aggregate_experiment_results.py'
--------------------------------------------------------------------------------

213:19: INFO: Renamed 'tf.gfile.ListDirectory' to 'tf.io.gfile.listdir'
224:9: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
236:9: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
347:9: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/single_task/data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/single_task/data.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/single_task/run_eval_tasks.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/single_task/run_eval_tasks.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/single_task/pg_agent.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/single_task/pg_agent.py'
--------------------------------------------------------------------------------

35:10: INFO: Added keywords to args of function 'tf.shape'
51:11: INFO: Renamed 'tf.train.GradientDescentOptimizer' to 'tf.compat.v1.train.GradientDescentOptimizer'
53:11: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
55:11: INFO: Renamed 'tf.train.RMSPropOptimizer' to 'tf.compat.v1.train.RMSPropOptimizer'
60:20: INFO: Renamed 'tf.contrib.rnn.RNNCell' to 'tf.compat.v1.nn.rnn_cell.RNNCell'
71:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
75:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
75:10: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
80:21: INFO: Added keywords to args of function 'tf.shape'
142:29: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
157:23: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

162:4: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
214:34: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
226:8: INFO: Renamed 'tf.contrib.rnn.MultiRNNCell' to 'tf.compat.v1.nn.rnn_cell.MultiRNNCell'
227:13: INFO: Renamed 'tf.contrib.rnn.BasicLSTMCell' to 'tf.compat.v1.nn.rnn_cell.BasicLSTMCell'
233:8: INFO: Renamed 'tf.contrib.rnn.MultiRNNCell' to 'tf.compat.v1.nn.rnn_cell.MultiRNNCell'
234:13: INFO: Renamed 'tf.contrib.rnn.BasicLSTMCell' to 'tf.compat.v1.nn.rnn_cell.BasicLSTMCell'
240:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
242:20: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
242:20: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
243:23: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
243:23: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
300:25: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
300:37: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
302:12: INFO: Renamed 'tf.multinomial' to 'tf.random.categorical'
307:25: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
322:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
325:49: INFO: Renamed 'tf.nn.raw_rnn' to 'tf.compat.v1.nn.raw_rnn'
328:20: INFO: Added keywords to args of function 'tf.transpose'
330:21: INFO: Added keywords to args of function 'tf.transpose'
338:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
339:26: INFO: Renamed 'tf.nn.dynamic_rnn' to 'tf.compat.v1.nn.dynamic_rnn'
360:28: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
362:30: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
368:28: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
374:30: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
378:37: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
381:19: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
384:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
385:18: INFO: Renamed 'tf.nn.dynamic_rnn' to 'tf.compat.v1.nn.dynamic_rnn'
391:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
392:26: INFO: Renamed 'tf.nn.dynamic_rnn' to 'tf.compat.v1.nn.dynamic_rnn'
410:25: INFO: Added keywords to args of function 'tf.shape'
436:9: INFO: Added keywords to args of function 'tf.reduce_mean'
436:24: INFO: Added keywords to args of function 'tf.reduce_sum'
441:28: INFO: Added keywords to args of function 'tf.reduce_sum'
442:24: INFO: Added keywords to args of function 'tf.reduce_sum'
448:10: INFO: Added keywords to args of function 'tf.reduce_mean'
448:25: INFO: Added keywords to args of function 'tf.reduce_sum'
456:9: INFO: Added keywords to args of function 'tf.reduce_mean'
457:12: INFO: Added keywords to args of function 'tf.reduce_sum'
463:23: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
469:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
470:25: INFO: Renamed 'tf.nn.dynamic_rnn' to 'tf.compat.v1.nn.dynamic_rnn'
479:18: INFO: Added keywords to args of function 'tf.reduce_mean'
480:10: INFO: Added keywords to args of function 'tf.reduce_sum'
500:13: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
500:31: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
501:31: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
521:24: INFO: Added keywords to args of function 'tf.gradients'
523:10: INFO: Added keywords to args of function 'tf.convert_to_tensor'
528:27: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
528:45: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
529:45: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
534:30: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
536:30: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
538:32: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
540:32: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
542:40: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
544:27: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
544:27: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
545:10: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
545:10: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
546:10: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
546:10: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
547:10: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
547:10: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
548:10: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
548:10: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
549:10: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
549:10: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
559:8: INFO: Added keywords to args of function 'tf.reduce_sum'
560:24: INFO: Added keywords to args of function 'tf.reduce_sum'
569:25: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
569:25: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
570:9: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
570:9: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
571:9: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
571:9: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
572:9: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
572:9: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
573:9: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
573:9: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
574:9: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
574:9: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
575:9: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
575:9: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
576:27: INFO: Renamed 'tf.global_norm' to 'tf.linalg.global_norm'
577:9: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
577:9: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
578:9: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
578:9: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
579:27: INFO: Renamed 'tf.global_norm' to 'tf.linalg.global_norm'
580:9: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
580:9: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
581:9: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
581:9: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
582:9: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
582:9: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
583:9: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
583:9: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
584:27: INFO: Renamed 'tf.global_norm' to 'tf.linalg.global_norm'
585:9: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
585:9: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
586:9: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
586:9: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
587:9: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
587:9: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
588:9: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
588:9: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
589:9: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
589:9: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
590:9: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
590:9: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
592:12: INFO: Added keywords to args of function 'tf.norm'
594:9: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
594:9: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
596:12: INFO: Added keywords to args of function 'tf.norm'
598:9: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
598:9: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
601:12: INFO: Added keywords to args of function 'tf.norm'
604:36: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
605:30: INFO: tf.summary.text requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
605:30: INFO: Renamed 'tf.summary.text' to 'tf.compat.v1.summary.text'
658:21: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
659:8: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
662:8: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
665:8: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
668:8: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
1105:15: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/single_task/pg_agent_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/single_task/pg_agent_test.py'
--------------------------------------------------------------------------------

99:4: INFO: Renamed 'tf.reset_default_graph' to 'tf.compat.v1.reset_default_graph'
102:21: INFO: Renamed 'tf.variables_initializer' to 'tf.compat.v1.variables_initializer'
103:8: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
103:26: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
104:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
164:4: INFO: Renamed 'tf.reset_default_graph' to 'tf.compat.v1.reset_default_graph'
165:4: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
208:21: INFO: Renamed 'tf.variables_initializer' to 'tf.compat.v1.variables_initializer'
209:8: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
209:26: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
210:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
336:4: INFO: Renamed 'tf.reset_default_graph' to 'tf.compat.v1.reset_default_graph'
337:4: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
346:21: INFO: Renamed 'tf.variables_initializer' to 'tf.compat.v1.variables_initializer'
347:8: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
347:26: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
354:35: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
359:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/single_task/results_lib.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/single_task/results_lib.py'
--------------------------------------------------------------------------------

59:9: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
69:11: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
117:21: INFO: Renamed 'tf.gfile.ListDirectory' to 'tf.io.gfile.listdir'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/single_task/run.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/single_task/run.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/single_task/tune.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/single_task/tune.py'
--------------------------------------------------------------------------------

89:9: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
141:9: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/single_task/aggregate_tuning_results.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/single_task/aggregate_tuning_results.py'
--------------------------------------------------------------------------------

33:17: INFO: Renamed 'tf.gfile.ListDirectory' to 'tf.io.gfile.listdir'
42:7: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
43:11: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/single_task/pg_train_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/single_task/pg_train_test.py'
--------------------------------------------------------------------------------

37:19: INFO: Renamed 'tf.test.get_temp_dir' to 'tf.compat.v1.test.get_temp_dir'
39:4: INFO: Renamed 'tf.reset_default_graph' to 'tf.compat.v1.reset_default_graph'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/single_task/code_tasks_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/single_task/code_tasks_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/single_task/misc.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/single_task/misc.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/single_task/test_tasks_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/single_task/test_tasks_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/single_task/code_tasks.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/single_task/code_tasks.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/single_task/test_tasks.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/single_task/test_tasks.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/single_task/ga_lib.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/single_task/ga_lib.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/common/utils_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/common/utils_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/common/reward.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/common/reward.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/common/rollout_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/common/rollout_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/common/schedules_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/common/schedules_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/common/reward_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/common/reward_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/common/utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/common/utils.py'
--------------------------------------------------------------------------------

380:33: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/common/rollout.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/common/rollout.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/common/bf.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/common/bf.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/common/schedules.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/common/schedules.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/common/config_lib_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/common/config_lib_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/common/bf_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/common/bf_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/brain_coder/common/config_lib.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/brain_coder/common/config_lib.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/vocabulary_expansion.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/vocabulary_expansion.py'
--------------------------------------------------------------------------------

50:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
52:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
56:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
61:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
64:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
66:0: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
66:25: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
82:5: INFO: Renamed 'tf.gfile.IsDirectory' to 'tf.io.gfile.isdir'
89:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
91:11: INFO: Renamed 'tf.train.NewCheckpointReader' to 'tf.compat.v1.train.NewCheckpointReader'
93:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
108:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
110:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
115:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
132:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
136:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
143:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
148:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
159:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
174:9: INFO: Renamed 'tf.gfile.IsDirectory' to 'tf.io.gfile.isdir'
175:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
192:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
194:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
198:2: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
199:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
203:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/skip_thoughts_encoder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/skip_thoughts_encoder.py'
--------------------------------------------------------------------------------

122:7: INFO: Renamed 'tf.gfile.IsDirectory' to 'tf.io.gfile.isdir'
129:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
131:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
148:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
151:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
170:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
171:16: INFO: Renamed 'tf.GraphDef' to 'tf.compat.v1.GraphDef'
172:9: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
177:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
178:16: INFO: Renamed 'tf.train.SaverDef' to 'tf.compat.v1.train.SaverDef'
179:9: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
181:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
244:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/train.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/train.py'
--------------------------------------------------------------------------------

27:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
29:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
32:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
35:0: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
35:25: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
49:20: INFO: tf.train.exponential_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

49:20: INFO: Renamed 'tf.train.exponential_decay' to 'tf.compat.v1.train.exponential_decay'
70:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
77:16: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
79:19: ERROR: Using member tf.contrib.slim.learning.create_train_op in deprecated module tf.contrib. tf.contrib.slim.learning.create_train_op cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
85:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
87:2: ERROR: Using member tf.contrib.slim.learning.train in deprecated module tf.contrib. tf.contrib.slim.learning.train cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
99:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/configuration.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/configuration.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/skip_thoughts_model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/skip_thoughts_model.py'
--------------------------------------------------------------------------------

47:12: INFO: Renamed 'tf.svd' to 'tf.linalg.svd'
47:19: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
71:52: INFO: Renamed 'tf.TFRecordReader' to 'tf.compat.v1.TFRecordReader'
74:31: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
74:31: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
127:20: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
176:19: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
182:17: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
182:17: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
187:19: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
187:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
188:23: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
188:23: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
189:24: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
189:24: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
214:22: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
214:22: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
230:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
231:15: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
231:27: INFO: Added keywords to args of function 'tf.reduce_sum'
240:20: INFO: Renamed 'tf.nn.bidirectional_dynamic_rnn' to 'tf.compat.v1.nn.bidirectional_dynamic_rnn'
250:19: INFO: Renamed 'tf.nn.dynamic_rnn' to 'tf.compat.v1.nn.dynamic_rnn'
278:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
281:22: INFO: Added keywords to args of function 'tf.pad'
283:15: INFO: Added keywords to args of function 'tf.reduce_sum'
284:26: INFO: Renamed 'tf.nn.dynamic_rnn' to 'tf.compat.v1.nn.dynamic_rnn'
294:14: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
297:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
298:15: ERROR: Using member tf.contrib.layers.fully_connected in deprecated module tf.contrib. tf.contrib.layers.fully_connected cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
307:17: INFO: Added keywords to args of function 'tf.reduce_sum'
308:4: INFO: tf.losses.add_loss requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
308:4: INFO: Renamed 'tf.losses.add_loss' to 'tf.compat.v1.losses.add_loss'
310:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
310:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
349:19: INFO: tf.losses.get_total_loss requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
349:19: INFO: Renamed 'tf.losses.get_total_loss' to 'tf.compat.v1.losses.get_total_loss'
350:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
350:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
360:23: ERROR: Using member tf.contrib.framework.create_global_step in deprecated module tf.contrib. tf.contrib.framework.create_global_step cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/encoder_manager.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/encoder_manager.py'
--------------------------------------------------------------------------------

63:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
64:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
67:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
69:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
73:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
85:11: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/evaluate.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/evaluate.py'
--------------------------------------------------------------------------------

46:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
48:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
52:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
54:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
58:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
63:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
66:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
70:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
73:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
77:0: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
77:25: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
117:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/track_perplexity.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/track_perplexity.py'
--------------------------------------------------------------------------------

38:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
40:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
42:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
44:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
46:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
48:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
51:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
54:0: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
54:25: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
85:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
90:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
93:12: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
101:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
118:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
122:7: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
124:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
126:18: INFO: Renamed 'tf.train.global_step' to 'tf.compat.v1.train.global_step'
127:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
130:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
136:14: INFO: Renamed 'tf.train.start_queue_runners' to 'tf.compat.v1.train.start_queue_runners'
146:6: INFO: Renamed 'tf.logging.error' to 'tf.compat.v1.logging.error'
163:9: INFO: Renamed 'tf.gfile.IsDirectory' to 'tf.io.gfile.isdir'
164:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
165:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
181:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
184:17: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
184:17: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
185:21: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
185:21: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
192:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
201:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/skip_thoughts_model_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/skip_thoughts_model_test.py'
--------------------------------------------------------------------------------

38:24: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
43:28: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
48:29: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
67:13: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
102:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/ops/input_ops.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/ops/input_ops.py'
--------------------------------------------------------------------------------

44:13: INFO: Added keywords to args of function 'tf.parse_example'
44:13: INFO: Renamed 'tf.parse_example' to 'tf.io.parse_example'
47:20: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
48:24: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
49:25: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
53:10: INFO: Renamed 'tf.sparse_tensor_to_dense' to 'tf.sparse.to_dense'
54:11: INFO: Renamed 'tf.sparse_to_dense' to 'tf.compat.v1.sparse_to_dense'
83:22: INFO: Renamed 'tf.gfile.Glob' to 'tf.io.gfile.glob'
85:4: INFO: Renamed 'tf.logging.fatal' to 'tf.compat.v1.logging.fatal'
87:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
90:19: INFO: Renamed 'tf.train.string_input_producer' to 'tf.compat.v1.train.string_input_producer'
95:19: INFO: Renamed 'tf.RandomShuffleQueue' to 'tf.queue.RandomShuffleQueue'
102:19: INFO: Renamed 'tf.FIFOQueue' to 'tf.queue.FIFOQueue'
112:2: INFO: Renamed 'tf.train.queue_runner.add_queue_runner' to 'tf.compat.v1.train.queue_runner.add_queue_runner'
113:6: INFO: Renamed 'tf.train.queue_runner.QueueRunner' to 'tf.compat.v1.train.queue_runner.QueueRunner'
114:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
114:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/ops/gru_cell.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/ops/gru_cell.py'
--------------------------------------------------------------------------------

24:14: WARNING: tf.contrib.layers.layer_norm requires manual check. (Manual edit required) `tf.contrib.layers.layer_norm` has been deprecated, and its implementation has been integrated with `tf.keras.layers.LayerNormalization` in TensorFlow 2.0. Note that, the default value of `epsilon` is changed to `1e-3` in the new API from `1e-12`, and this may introduce numerical differences. Please check the new API and use that instead.
24:14: ERROR: Using member tf.contrib.layers.layer_norm in deprecated module tf.contrib. tf.contrib.layers.layer_norm cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
27:23: INFO: Renamed 'tf.contrib.rnn.RNNCell' to 'tf.compat.v1.nn.rnn_cell.RNNCell'
115:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
116:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
117:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
117:14: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
120:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
120:14: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
126:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
127:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
127:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
129:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
129:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/ops/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/ops/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/data/preprocess_dataset.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/data/preprocess_dataset.py'
--------------------------------------------------------------------------------

47:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
49:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
55:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
62:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
64:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
67:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
70:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
73:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
76:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
79:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
83:0: ERROR: Using member tf.flags.DEFINE_boolean in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
86:0: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
86:25: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
99:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
101:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
106:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
110:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
114:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
115:20: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
120:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
122:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
134:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
137:7: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
139:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
142:7: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
145:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
186:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
193:23: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
220:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
225:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
231:7: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
245:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
252:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
254:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
264:9: INFO: Renamed 'tf.gfile.IsDirectory' to 'tf.io.gfile.isdir'
265:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
269:12: INFO: Renamed 'tf.gfile.Glob' to 'tf.io.gfile.glob'
273:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
277:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
285:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
287:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
289:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
301:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/data/special_words.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/data/special_words.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/data/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/skip_thoughts/skip_thoughts/data/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/marco/Automated_Marco.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/marco/Automated_Marco.py'
--------------------------------------------------------------------------------

56:15: ERROR: Using member tf.contrib.predictor.from_saved_model in deprecated module tf.contrib. tf.contrib.predictor.from_saved_model cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/marco/jpeg2json.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/marco/jpeg2json.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/inception_train.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/inception/inception/inception_train.py'
--------------------------------------------------------------------------------

34:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
36:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
39:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
41:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
45:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
47:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
51:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
55:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
69:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
71:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
73:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
106:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
106:25: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
117:11: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
120:26: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
120:44: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
135:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
135:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
136:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
136:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
170:11: INFO: Added keywords to args of function 'tf.reduce_mean'
186:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
186:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
188:20: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
188:20: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
196:9: INFO: tf.train.exponential_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

196:9: INFO: Renamed 'tf.train.exponential_decay' to 'tf.compat.v1.train.exponential_decay'
203:10: INFO: Renamed 'tf.train.RMSPropOptimizer' to 'tf.compat.v1.train.RMSPropOptimizer'
219:32: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
219:50: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
234:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

234:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
247:22: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
247:40: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
253:30: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
271:21: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
271:21: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
277:12: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
277:12: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
283:15: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
284:23: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
284:23: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
294:28: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
295:28: INFO: Renamed 'tf.moving_average_variables' to 'tf.compat.v1.moving_average_variables'
304:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
304:27: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
307:17: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
307:17: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
310:11: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
315:11: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
315:29: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
321:13: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
322:29: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
324:17: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
330:4: INFO: Renamed 'tf.train.start_queue_runners' to 'tf.compat.v1.train.start_queue_runners'
332:21: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
332:21: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
357:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/inception_eval.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/inception/inception/inception_eval.py'
--------------------------------------------------------------------------------

34:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
36:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
38:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
42:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
44:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
48:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
51:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
65:7: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
90:16: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
90:34: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
123:16: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
151:15: INFO: Added keywords to args of function 'tf.nn.in_top_k'
152:15: INFO: Added keywords to args of function 'tf.nn.in_top_k'
158:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
161:17: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
161:17: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
163:16: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
164:21: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
164:21: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/imagenet_eval.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/inception/inception/imagenet_eval.py'
--------------------------------------------------------------------------------

33:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
39:5: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
40:4: INFO: Renamed 'tf.gfile.DeleteRecursively' to 'tf.io.gfile.rmtree'
41:2: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
46:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/imagenet_distributed_train.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/inception/inception/imagenet_distributed_train.py'
--------------------------------------------------------------------------------

29:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
39:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
40:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
44:11: INFO: Renamed 'tf.train.Server' to 'tf.distribute.Server'
60:13: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
61:8: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
65:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
65:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
66:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/imagenet_data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/inception/inception/imagenet_data.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/inception_model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/inception/inception/inception_model.py'
--------------------------------------------------------------------------------

33:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
120:17: INFO: Renamed 'tf.sparse_to_dense' to 'tf.compat.v1.sparse_to_dense'
150:2: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
150:2: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
151:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
151:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
155:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

155:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/image_processing.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/inception/inception/image_processing.py'
--------------------------------------------------------------------------------

45:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
47:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
49:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
51:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
54:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
67:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
149:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

149:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
179:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

179:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
217:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

217:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
226:6: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
226:6: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
235:36: INFO: Added keywords to args of function 'tf.image.sample_distorted_bounding_box'
236:8: INFO: Added keywords to args of function 'tf.shape'
247:6: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
247:6: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
258:22: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
264:6: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
264:6: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
274:6: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
274:6: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
290:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

290:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
298:12: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
298:12: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
376:23: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
378:27: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
380:26: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
383:19: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
391:13: INFO: Added keywords to args of function 'tf.parse_single_example'
391:13: INFO: Renamed 'tf.parse_single_example' to 'tf.io.parse_single_example'
405:9: INFO: Added keywords to args of function 'tf.transpose'
429:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

429:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
436:23: INFO: Renamed 'tf.train.string_input_producer' to 'tf.compat.v1.train.string_input_producer'
440:23: INFO: Renamed 'tf.train.string_input_producer' to 'tf.compat.v1.train.string_input_producer'
465:23: INFO: Renamed 'tf.RandomShuffleQueue' to 'tf.queue.RandomShuffleQueue'
470:23: INFO: Renamed 'tf.FIFOQueue' to 'tf.queue.FIFOQueue'
482:6: INFO: Renamed 'tf.train.queue_runner.add_queue_runner' to 'tf.compat.v1.train.queue_runner.add_queue_runner'
483:10: INFO: Renamed 'tf.train.queue_runner.QueueRunner' to 'tf.compat.v1.train.queue_runner.QueueRunner'
497:32: INFO: Renamed 'tf.train.batch_join' to 'tf.compat.v1.train.batch_join'
511:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
511:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/inception_distributed_train.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/inception/inception/inception_distributed_train.py'
--------------------------------------------------------------------------------

34:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
36:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
37:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
41:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
45:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
49:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
52:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
53:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
54:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
59:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
64:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
67:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
69:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
80:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
82:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
84:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
133:11: INFO: tf.train.exponential_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

133:11: INFO: Renamed 'tf.train.exponential_decay' to 'tf.compat.v1.train.exponential_decay'
139:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
139:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
142:12: INFO: Renamed 'tf.train.RMSPropOptimizer' to 'tf.compat.v1.train.RMSPropOptimizer'
160:15: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
161:16: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
161:34: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
177:10: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
177:10: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
178:10: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
178:10: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
193:10: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
193:37: INFO: Renamed 'tf.moving_average_variables' to 'tf.compat.v1.moving_average_variables'
197:8: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
197:8: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
200:12: INFO: Renamed 'tf.train.SyncReplicasOptimizer' to 'tf.compat.v1.train.SyncReplicasOptimizer'
207:26: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
220:10: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
220:10: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
233:14: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
236:19: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
236:19: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
239:16: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
245:11: INFO: Renamed 'tf.train.Supervisor' to 'tf.compat.v1.train.Supervisor'
253:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
255:20: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
263:22: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
263:40: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
265:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
289:12: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
295:12: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
298:12: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
304:12: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
312:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/dataset.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/inception/inception/dataset.py'
--------------------------------------------------------------------------------

34:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
37:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
85:17: INFO: Renamed 'tf.gfile.Glob' to 'tf.io.gfile.glob'
103:11: INFO: Renamed 'tf.TFRecordReader' to 'tf.compat.v1.TFRecordReader'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/imagenet_train.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/inception/inception/imagenet_train.py'
--------------------------------------------------------------------------------

28:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
34:5: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
35:4: INFO: Renamed 'tf.gfile.DeleteRecursively' to 'tf.io.gfile.rmtree'
36:2: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
41:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/flowers_train.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/inception/inception/flowers_train.py'
--------------------------------------------------------------------------------

28:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
34:5: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
35:4: INFO: Renamed 'tf.gfile.DeleteRecursively' to 'tf.io.gfile.rmtree'
36:2: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
41:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/flowers_data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/inception/inception/flowers_data.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/flowers_eval.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/inception/inception/flowers_eval.py'
--------------------------------------------------------------------------------

27:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
33:5: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
34:4: INFO: Renamed 'tf.gfile.DeleteRecursively' to 'tf.io.gfile.rmtree'
35:2: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
40:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/slim/ops_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/inception/inception/slim/ops_test.py'
--------------------------------------------------------------------------------

34:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
42:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
50:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
58:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
66:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
75:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
84:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
92:13: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
103:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
110:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
117:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
124:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
126:11: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
126:29: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
129:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
135:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
138:10: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
138:28: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
143:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
152:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
161:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
165:14: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
165:32: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
170:14: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
170:32: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
175:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
186:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
200:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
208:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
214:13: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
224:13: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
233:13: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
243:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
250:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
252:11: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
252:29: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
255:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
261:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
264:10: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
264:28: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
269:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
273:14: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
273:32: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
277:14: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
277:32: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
282:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
293:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
306:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
314:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
322:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
329:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
336:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
343:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
353:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
361:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
369:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
376:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
383:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
390:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
419:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
427:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
437:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
446:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
455:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
456:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
471:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
479:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
485:20: INFO: Renamed 'tf.moving_average_variables' to 'tf.compat.v1.moving_average_variables'
486:24: INFO: Renamed 'tf.moving_average_variables' to 'tf.compat.v1.moving_average_variables'
493:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
499:20: INFO: Renamed 'tf.moving_average_variables' to 'tf.compat.v1.moving_average_variables'
500:24: INFO: Renamed 'tf.moving_average_variables' to 'tf.compat.v1.moving_average_variables'
507:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
513:20: INFO: Renamed 'tf.moving_average_variables' to 'tf.compat.v1.moving_average_variables'
514:24: INFO: Renamed 'tf.moving_average_variables' to 'tf.compat.v1.moving_average_variables'
521:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
527:20: INFO: Renamed 'tf.moving_average_variables' to 'tf.compat.v1.moving_average_variables'
528:24: INFO: Renamed 'tf.moving_average_variables' to 'tf.compat.v1.moving_average_variables'
535:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
537:20: INFO: Renamed 'tf.moving_average_variables' to 'tf.compat.v1.moving_average_variables'
538:24: INFO: Renamed 'tf.moving_average_variables' to 'tf.compat.v1.moving_average_variables'
545:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
547:19: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
558:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
565:20: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
571:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
573:28: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
575:28: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
580:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
582:20: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
586:24: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
600:19: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
604:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
629:19: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
633:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
641:22: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
642:22: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
662:19: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
666:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
674:22: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
675:22: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/slim/collections_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/inception/inception/slim/collections_test.py'
--------------------------------------------------------------------------------

39:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
55:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
71:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
98:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
102:29: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
111:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
115:29: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
123:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
126:15: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
126:33: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
134:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
135:21: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
151:15: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
159:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
160:21: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
174:15: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
176:19: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
176:37: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/slim/inception_model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/inception/inception/slim/inception_model.py'
--------------------------------------------------------------------------------

80:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

80:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
112:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
113:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
115:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
118:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
122:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
128:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
129:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
131:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
134:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
138:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
144:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
145:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
147:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
150:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
154:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
160:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
161:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
163:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
168:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
173:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
174:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
176:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
180:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
186:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
192:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
193:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
195:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
199:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
205:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
211:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
212:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
214:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
218:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
224:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
230:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
231:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
233:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
237:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
243:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
250:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
266:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
267:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
271:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
277:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
282:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
283:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
285:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
289:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
294:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
300:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
301:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
303:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
307:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
312:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
318:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/slim/variables_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/inception/inception/slim/variables_test.py'
--------------------------------------------------------------------------------

30:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
37:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
39:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
47:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
49:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
56:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
62:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
64:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
78:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
86:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
88:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
94:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
96:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
103:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
106:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
114:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
116:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
123:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
169:21: INFO: Renamed 'tf.train.replica_device_setter' to 'tf.compat.v1.train.replica_device_setter'
244:27: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
245:27: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
251:27: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
252:27: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
259:35: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
267:27: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
268:27: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
277:32: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
278:32: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
290:35: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
291:32: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
292:32: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
299:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
307:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
366:16: INFO: Renamed 'tf.train.replica_device_setter' to 'tf.compat.v1.train.replica_device_setter'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/slim/inception_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/inception/inception/slim/inception_test.py'
--------------------------------------------------------------------------------

32:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
43:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
62:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
64:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
66:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
68:15: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
68:33: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
70:15: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
70:33: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
78:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
92:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
97:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
98:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
107:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
110:20: INFO: Added keywords to args of function 'tf.argmax'
111:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
121:21: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
123:6: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
124:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
127:20: INFO: Added keywords to args of function 'tf.argmax'
128:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/slim/scopes.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/inception/inception/slim/scopes.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/slim/losses_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/inception/inception/slim/losses_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/slim/ops.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/inception/inception/slim/ops.py'
--------------------------------------------------------------------------------

80:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
88:44: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
88:44: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
94:45: INFO: tf.ones_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
94:45: INFO: Renamed 'tf.ones_initializer' to 'tf.compat.v1.ones_initializer'
99:39: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
102:49: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
102:49: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
108:53: INFO: tf.ones_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
108:53: INFO: Renamed 'tf.ones_initializer' to 'tf.compat.v1.ones_initializer'
114:23: INFO: Added keywords to args of function 'tf.nn.moments'
118:6: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
121:6: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
213:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
219:26: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
219:26: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
229:11: INFO: Added keywords to args of function 'tf.nn.conv2d'
229:11: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
237:25: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
237:25: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
288:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
291:26: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
291:26: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
308:25: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
308:25: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
314:16: INFO: Renamed 'tf.nn.xw_plus_b' to 'tf.compat.v1.nn.xw_plus_b'
330:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

330:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
335:20: INFO: Renamed 'tf.sparse_to_dense' to 'tf.compat.v1.sparse_to_dense'
364:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

364:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
367:11: INFO: Added keywords to args of function 'tf.nn.max_pool'
367:11: INFO: Renamed keyword argument for tf.nn.max_pool from value to input
367:11: INFO: Renamed 'tf.nn.max_pool' to 'tf.nn.max_pool2d'
394:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

394:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
397:11: INFO: Added keywords to args of function 'tf.nn.avg_pool'
397:11: INFO: Renamed keyword argument for tf.nn.avg_pool from value to input
397:11: INFO: Renamed 'tf.nn.avg_pool' to 'tf.nn.avg_pool2d'
418:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

418:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
419:13: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

442:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

442:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
469:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/slim/slim.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/inception/inception/slim/slim.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/slim/scopes_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/inception/inception/slim/scopes_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/slim/variables.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/inception/inception/slim/variables.py'
--------------------------------------------------------------------------------

110:18: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
111:6: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
124:15: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
136:9: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
164:15: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
164:33: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
212:15: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
213:14: INFO: Renamed 'tf.NodeDef' to 'tf.compat.v1.NodeDef'
231:20: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
231:38: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
237:8: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
238:8: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
242:13: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
242:13: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
243:41: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
243:41: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
279:18: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
287:11: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
287:11: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/slim/losses.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/inception/inception/slim/losses.py'
--------------------------------------------------------------------------------

48:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

48:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
49:18: INFO: Added keywords to args of function 'tf.convert_to_tensor'
52:36: INFO: Added keywords to args of function 'tf.reduce_sum'
67:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

67:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
68:18: INFO: Added keywords to args of function 'tf.convert_to_tensor'
87:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

87:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
88:20: INFO: Added keywords to args of function 'tf.convert_to_tensor'
91:20: INFO: Added keywords to args of function 'tf.convert_to_tensor'
94:40: INFO: Added keywords to args of function 'tf.reduce_sum'
113:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

113:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
114:13: INFO: Added keywords to args of function 'tf.convert_to_tensor'
117:31: INFO: Added keywords to args of function 'tf.reduce_sum'
118:4: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
133:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

133:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
134:13: INFO: Added keywords to args of function 'tf.convert_to_tensor'
138:4: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
159:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

159:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
166:20: ERROR: Using member tf.contrib.nn.deprecated_flipped_softmax_cross_entropy_with_logits in deprecated module tf.contrib. tf.contrib.nn.deprecated_flipped_softmax_cross_entropy_with_logits cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
169:13: INFO: Added keywords to args of function 'tf.convert_to_tensor'
172:31: INFO: Added keywords to args of function 'tf.reduce_mean'
173:4: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/data/preprocess_imagenet_validation_data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/inception/inception/data/preprocess_imagenet_validation_data.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/data/build_imagenet_data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/inception/inception/data/build_imagenet_data.py'
--------------------------------------------------------------------------------

100:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
102:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
104:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
107:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
109:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
112:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
123:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
136:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
152:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
156:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
236:17: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
239:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
244:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
249:29: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
319:7: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
381:13: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
504:23: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
516:21: INFO: Renamed 'tf.gfile.Glob' to 'tf.io.gfile.glob'
627:10: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
661:10: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
707:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/data/process_bounding_boxes.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/inception/inception/data/process_bounding_boxes.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/inception/inception/data/build_image_data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/inception/inception/data/build_image_data.py'
--------------------------------------------------------------------------------

79:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
81:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
83:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
86:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
88:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
91:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
101:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
104:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
155:17: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
158:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
163:29: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
202:7: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
255:13: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
367:38: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
380:21: INFO: Renamed 'tf.gfile.Glob' to 'tf.io.gfile.glob'
436:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/export_inference_graph.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/export_inference_graph.py'
--------------------------------------------------------------------------------

71:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
74:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
78:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
82:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
87:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
90:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
96:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
99:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
102:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
105:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
108:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
112:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
115:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
118:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
127:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
127:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
144:18: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
164:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/download_and_convert_data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/download_and_convert_data.py'
--------------------------------------------------------------------------------

62:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
67:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/train_image_classifier.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/train_image_classifier.py'
--------------------------------------------------------------------------------

32:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
35:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
38:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
43:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
49:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
52:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
54:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
59:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
63:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
67:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
71:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
75:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
79:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
86:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
89:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
94:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
98:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
102:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
106:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
110:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
112:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
115:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
119:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
122:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
125:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
129:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
131:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
133:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
142:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
148:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
150:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
154:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
157:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
160:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
167:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
171:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
175:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
184:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
187:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
190:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
193:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
199:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
202:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
206:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
209:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
212:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
215:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
222:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
226:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
231:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
236:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
240:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
266:20: INFO: tf.train.exponential_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

266:20: INFO: Renamed 'tf.train.exponential_decay' to 'tf.compat.v1.train.exponential_decay'
276:20: INFO: tf.train.polynomial_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

276:20: INFO: Renamed 'tf.train.polynomial_decay' to 'tf.compat.v1.train.polynomial_decay'
309:16: INFO: Renamed 'tf.train.AdadeltaOptimizer' to 'tf.compat.v1.train.AdadeltaOptimizer'
314:16: INFO: Renamed 'tf.train.AdagradOptimizer' to 'tf.compat.v1.train.AdagradOptimizer'
318:16: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
324:16: INFO: Renamed 'tf.train.FtrlOptimizer' to 'tf.compat.v1.train.FtrlOptimizer'
331:16: INFO: Renamed 'tf.train.MomentumOptimizer' to 'tf.compat.v1.train.MomentumOptimizer'
336:16: INFO: Renamed 'tf.train.RMSPropOptimizer' to 'tf.compat.v1.train.RMSPropOptimizer'
342:16: INFO: Renamed 'tf.train.GradientDescentOptimizer' to 'tf.compat.v1.train.GradientDescentOptimizer'
363:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
382:5: INFO: Renamed 'tf.gfile.IsDirectory' to 'tf.io.gfile.isdir'
387:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
402:11: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
408:16: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
408:34: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
417:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
417:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
473:23: INFO: Renamed 'tf.train.batch' to 'tf.compat.v1.train.batch'
504:20: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
504:38: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
510:17: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
510:35: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
516:20: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
516:20: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
517:20: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
517:20: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
521:16: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
521:34: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
522:20: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
522:20: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
526:20: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
526:20: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
547:20: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
547:20: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
552:18: INFO: Renamed 'tf.train.SyncReplicasOptimizer' to 'tf.compat.v1.train.SyncReplicasOptimizer'
571:18: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
571:18: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
584:21: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
584:39: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
588:17: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
588:17: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
608:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/eval_image_classifier.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/eval_image_classifier.py'
--------------------------------------------------------------------------------

32:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
35:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
39:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
42:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
47:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
50:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
54:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
57:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
60:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
63:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
69:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
72:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
76:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
81:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
84:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
87:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
90:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
97:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
97:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
139:21: INFO: Renamed 'tf.train.batch' to 'tf.compat.v1.train.batch'
162:18: INFO: Added keywords to args of function 'tf.argmax'
175:11: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
175:11: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
176:11: INFO: Renamed 'tf.Print' to 'tf.compat.v1.Print'
177:6: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
177:27: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
186:7: INFO: Renamed 'tf.gfile.IsDirectory' to 'tf.io.gfile.isdir'
191:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
203:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/export_inference_graph_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/export_inference_graph_test.py'
--------------------------------------------------------------------------------

36:12: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/setup.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/setup.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/inception_v2.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/inception_v2.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/inception_v3_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/inception_v3_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/mobilenet_v1_train.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/mobilenet_v1_train.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/inception_v4.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/inception_v4.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/alexnet_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/alexnet_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/resnet_v1.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/resnet_v1.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/dcgan.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/dcgan.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/resnet_v1_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/resnet_v1_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/pix2pix_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/pix2pix_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/inception_v1.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/inception_v1.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/resnet_v2_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/resnet_v2_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/cyclegan.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/cyclegan.py'
--------------------------------------------------------------------------------

132:17: INFO: Renamed 'contrib_util.constant_value' to 'tf.get_static_value'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/vgg_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/vgg_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/inception_v4_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/inception_v4_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/inception_v1_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/inception_v1_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/pix2pix.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/pix2pix.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/cyclegan_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/cyclegan_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/mobilenet_v1_eval.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/mobilenet_v1_eval.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/nets_factory_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/nets_factory_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/i3d_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/i3d_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/resnet_v2.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/resnet_v2.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/s3dg_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/s3dg_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/s3dg.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/s3dg.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/overfeat_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/overfeat_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/inception_v3.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/inception_v3.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/inception.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/inception.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/resnet_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/resnet_utils.py'
--------------------------------------------------------------------------------

265:26: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

266:26: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/i3d_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/i3d_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/inception_resnet_v2.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/inception_resnet_v2.py'
--------------------------------------------------------------------------------

394:42: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

395:41: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/vgg.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/vgg.py'
--------------------------------------------------------------------------------

61:42: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/inception_v2_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/inception_v2_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/mobilenet_v1.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/mobilenet_v1.py'
--------------------------------------------------------------------------------

470:16: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/alexnet.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/alexnet.py'
--------------------------------------------------------------------------------

53:42: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/dcgan_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/dcgan_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/i3d.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/i3d.py'
--------------------------------------------------------------------------------

78:26: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/post_training_quantization.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/post_training_quantization.py'
--------------------------------------------------------------------------------

73:10: INFO: Added keywords to args of function 'tf.shape'
110:15: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
110:42: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
111:13: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
119:11: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
120:10: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
148:32: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
152:13: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
171:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/nets_factory.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/nets_factory.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/lenet.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/lenet.py'
--------------------------------------------------------------------------------

95:26: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/overfeat.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/overfeat.py'
--------------------------------------------------------------------------------

47:42: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/cifarnet.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/cifarnet.py'
--------------------------------------------------------------------------------

121:28: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/mobilenet_v1_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/mobilenet_v1_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/inception_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/inception_utils.py'
--------------------------------------------------------------------------------

77:42: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

80:28: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/inception_resnet_v2_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/inception_resnet_v2_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/nasnet/nasnet_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/nasnet/nasnet_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/nasnet/nasnet_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/nasnet/nasnet_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/nasnet/nasnet.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/nasnet/nasnet.py'
--------------------------------------------------------------------------------

145:24: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

146:24: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

181:24: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

182:24: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

217:24: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

218:24: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/nasnet/pnasnet.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/nasnet/pnasnet.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/nasnet/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/nasnet/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/nasnet/pnasnet_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/nasnet/pnasnet_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/nasnet/nasnet_utils_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/nasnet/nasnet_utils_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/mobilenet/conv_blocks.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/mobilenet/conv_blocks.py'
--------------------------------------------------------------------------------

46:18: INFO: Added keywords to args of function 'tf.pad'
451:15: INFO: Added keywords to args of function 'tf.reduce_mean'
453:15: INFO: Added keywords to args of function 'tf.nn.avg_pool'
453:15: INFO: Renamed keyword argument for tf.nn.avg_pool from value to input
453:15: INFO: Renamed 'tf.nn.avg_pool' to 'tf.nn.avg_pool2d'
473:10: INFO: Removed argument align_corners for function tf.image.resize_images
471:15: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/mobilenet/mobilenet_v3_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/mobilenet/mobilenet_v3_test.py'
--------------------------------------------------------------------------------

72:8: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/mobilenet/mobilenet_v2.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/mobilenet/mobilenet_v2.py'
--------------------------------------------------------------------------------

91:25: WARNING: contrib_layers.group_norm requires manual check. (Manual edit required) `contrib_layers.group_norm` has been migrated to `tfa.layers.GroupNormalization` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
97:25: WARNING: contrib_layers.group_norm requires manual check. (Manual edit required) `contrib_layers.group_norm` has been migrated to `tfa.layers.GroupNormalization` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
218:7: WARNING: contrib_layers.group_norm requires manual check. (Manual edit required) `contrib_layers.group_norm` has been migrated to `tfa.layers.GroupNormalization` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/mobilenet/mobilenet_v2_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/mobilenet/mobilenet_v2_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/mobilenet/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/mobilenet/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/mobilenet/mobilenet_v3.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/mobilenet/mobilenet_v3.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/nets/mobilenet/mobilenet.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/nets/mobilenet/mobilenet.py'
--------------------------------------------------------------------------------

478:41: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/preprocessing/vgg_preprocessing.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/preprocessing/vgg_preprocessing.py'
--------------------------------------------------------------------------------

68:19: INFO: Added keywords to args of function 'tf.shape'
82:12: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
127:18: INFO: Added keywords to args of function 'tf.shape'
142:14: INFO: Added keywords to args of function 'tf.shape'
165:18: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
167:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
188:19: INFO: Added keywords to args of function 'tf.shape'
189:18: INFO: Added keywords to args of function 'tf.shape'
248:18: INFO: Added keywords to args of function 'tf.convert_to_tensor'
250:11: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
251:10: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
252:18: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
254:10: INFO: Added keywords to args of function 'tf.cond'
257:15: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
257:27: INFO: Renamed 'tf.rint' to 'tf.math.rint'
258:14: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
258:26: INFO: Renamed 'tf.rint' to 'tf.math.rint'
273:18: INFO: Added keywords to args of function 'tf.convert_to_tensor'
275:10: INFO: Added keywords to args of function 'tf.shape'
280:18: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
280:18: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
311:16: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
317:10: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
344:10: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/preprocessing/preprocessing_factory.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/preprocessing/preprocessing_factory.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/preprocessing/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/preprocessing/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/preprocessing/inception_preprocessing.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/preprocessing/inception_preprocessing.py'
--------------------------------------------------------------------------------

38:8: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
63:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

63:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
130:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

130:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
141:36: INFO: Added keywords to args of function 'tf.image.sample_distorted_bounding_box'
142:8: INFO: Added keywords to args of function 'tf.shape'
194:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

194:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
206:6: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
206:6: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
218:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
218:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
230:26: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
234:6: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
234:6: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
251:6: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
251:6: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
288:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

288:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
301:14: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
301:14: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/preprocessing/lenet_preprocessing.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/preprocessing/lenet_preprocessing.py'
--------------------------------------------------------------------------------

46:10: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
49:10: INFO: Renamed 'tf.image.resize_image_with_crop_or_pad' to 'tf.image.resize_with_crop_or_pad'
52:10: INFO: Renamed 'tf.div' to 'tf.compat.v1.div'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/preprocessing/cifarnet_preprocessing.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/preprocessing/cifarnet_preprocessing.py'
--------------------------------------------------------------------------------

54:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
54:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
57:10: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
61:12: INFO: Added keywords to args of function 'tf.pad'
63:20: INFO: Renamed 'tf.random_crop' to 'tf.image.random_crop'
70:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
70:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
100:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
100:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
102:10: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
107:18: INFO: Renamed 'tf.image.resize_image_with_crop_or_pad' to 'tf.image.resize_with_crop_or_pad'
111:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
111:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/datasets/preprocess_imagenet_validation_data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/datasets/preprocess_imagenet_validation_data.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/datasets/download_and_convert_visualwakewords_lib.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/datasets/download_and_convert_visualwakewords_lib.py'
--------------------------------------------------------------------------------

104:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
114:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
121:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
127:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
198:6: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
209:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
242:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/datasets/cifar10.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/datasets/cifar10.py'
--------------------------------------------------------------------------------

71:13: INFO: Renamed 'tf.TFRecordReader' to 'tf.compat.v1.TFRecordReader'
74:23: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
75:22: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
76:27: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/datasets/dataset_factory.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/datasets/dataset_factory.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/datasets/mnist.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/datasets/mnist.py'
--------------------------------------------------------------------------------

71:13: INFO: Renamed 'tf.TFRecordReader' to 'tf.compat.v1.TFRecordReader'
74:23: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
75:22: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
76:27: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/datasets/build_imagenet_data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/datasets/build_imagenet_data.py'
--------------------------------------------------------------------------------

100:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
102:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
104:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
107:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
109:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
112:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
123:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
136:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
152:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
156:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
234:17: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
237:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
242:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
247:29: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
317:15: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
378:13: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
501:25: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
514:21: INFO: Renamed 'tf.gfile.Glob' to 'tf.io.gfile.glob'
625:10: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
659:10: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
705:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/datasets/download_and_convert_cifar10.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/datasets/download_and_convert_cifar10.py'
--------------------------------------------------------------------------------

75:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
88:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
91:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
153:2: INFO: Renamed 'tf.gfile.Remove' to 'tf.io.gfile.remove'
156:2: INFO: Renamed 'tf.gfile.DeleteRecursively' to 'tf.io.gfile.rmtree'
165:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
166:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
171:5: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
171:44: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
178:7: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
187:7: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/datasets/imagenet.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/datasets/imagenet.py'
--------------------------------------------------------------------------------

149:13: INFO: Renamed 'tf.TFRecordReader' to 'tf.compat.v1.TFRecordReader'
152:23: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
154:22: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
156:27: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
158:26: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
160:32: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
162:32: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
164:32: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
166:32: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
168:34: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/datasets/process_bounding_boxes.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/datasets/process_bounding_boxes.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/datasets/dataset_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/datasets/dataset_utils.py'
--------------------------------------------------------------------------------

151:5: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
176:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
192:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
206:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
236:31: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/datasets/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/datasets/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/datasets/download_and_convert_visualwakewords.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/datasets/download_and_convert_visualwakewords.py'
--------------------------------------------------------------------------------

107:9: INFO: Renamed 'tf.gfile.IsDirectory' to 'tf.io.gfile.isdir'
108:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
130:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
135:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
139:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
145:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
152:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/datasets/flowers.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/datasets/flowers.py'
--------------------------------------------------------------------------------

71:13: INFO: Renamed 'tf.TFRecordReader' to 'tf.compat.v1.TFRecordReader'
74:23: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
75:22: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
76:27: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/datasets/download_and_convert_mnist.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/datasets/download_and_convert_mnist.py'
--------------------------------------------------------------------------------

117:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
120:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
167:11: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
183:4: INFO: Renamed 'tf.gfile.Remove' to 'tf.io.gfile.remove'
192:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
193:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
198:5: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
198:44: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
205:7: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
211:7: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/datasets/download_and_convert_flowers.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/datasets/download_and_convert_flowers.py'
--------------------------------------------------------------------------------

57:29: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
124:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
130:13: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
139:25: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
161:2: INFO: Renamed 'tf.gfile.Remove' to 'tf.io.gfile.remove'
164:2: INFO: Renamed 'tf.gfile.DeleteRecursively' to 'tf.io.gfile.rmtree'
172:13: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
183:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
184:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/datasets/visualwakewords.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/datasets/visualwakewords.py'
--------------------------------------------------------------------------------

85:13: INFO: Renamed 'tf.TFRecordReader' to 'tf.compat.v1.TFRecordReader'
89:10: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
91:10: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
93:10: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
95:10: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
97:10: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
99:10: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
101:10: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
119:5: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/deployment/model_deploy_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/deployment/model_deploy_test.py'
--------------------------------------------------------------------------------

153:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
162:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
189:6: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
209:19: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
209:37: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
215:6: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
235:19: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
235:37: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
241:6: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
261:21: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
261:39: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
269:6: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
294:6: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
336:6: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
347:19: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
347:37: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
350:18: INFO: Renamed 'tf.train.GradientDescentOptimizer' to 'tf.compat.v1.train.GradientDescentOptimizer'
353:48: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
362:6: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
373:19: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
373:37: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
376:18: INFO: Renamed 'tf.train.GradientDescentOptimizer' to 'tf.compat.v1.train.GradientDescentOptimizer'
379:48: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
388:6: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
400:19: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
400:37: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
403:18: INFO: Renamed 'tf.train.GradientDescentOptimizer' to 'tf.compat.v1.train.GradientDescentOptimizer'
406:48: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
415:6: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
428:19: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
428:37: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
431:18: INFO: Renamed 'tf.train.GradientDescentOptimizer' to 'tf.compat.v1.train.GradientDescentOptimizer'
434:48: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
443:6: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
455:19: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
455:37: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
458:18: INFO: Renamed 'tf.train.GradientDescentOptimizer' to 'tf.compat.v1.train.GradientDescentOptimizer'
461:48: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
490:6: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
499:18: INFO: Renamed 'tf.train.GradientDescentOptimizer' to 'tf.compat.v1.train.GradientDescentOptimizer'
505:19: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
505:37: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
512:11: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
513:17: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
542:14: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

547:20: INFO: Renamed 'tf.train.GradientDescentOptimizer' to 'tf.compat.v1.train.GradientDescentOptimizer'
561:14: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/deployment/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/deployment/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/slim/deployment/model_deploy.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/slim/deployment/model_deploy.py'
--------------------------------------------------------------------------------

189:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

189:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
192:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
192:33: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
219:19: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
219:37: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
223:21: INFO: Renamed 'tf.div' to 'tf.compat.v1.div'
234:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
234:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
238:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
238:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
264:19: WARNING: (Manual check required) upgrading optimizer.compute_gradients may require renaming or removing call arguments, but it was passed variable-length *args or **kwargs. The upgrade script cannot handle these automatically.
295:28: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
296:8: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
298:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

298:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
350:18: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
350:36: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
358:15: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
358:33: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
386:30: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
387:10: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
389:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

389:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
401:21: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
401:39: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
406:20: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
406:20: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
410:19: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
410:19: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
468:23: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
468:23: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
470:23: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
470:23: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
471:44: INFO: Renamed 'tf.global_norm' to 'tf.linalg.global_norm'
473:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
665:40: INFO: Renamed 'tf.NodeDef' to 'tf.compat.v1.NodeDef'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/sequence_layers.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/attention_ocr/python/sequence_layers.py'
--------------------------------------------------------------------------------

119:18: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

127:20: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
127:20: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
206:38: INFO: Renamed 'tf.nn.xw_plus_b' to 'tf.compat.v1.nn.xw_plus_b'
219:17: INFO: Added keywords to args of function 'tf.argmax'
247:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
250:18: INFO: Renamed 'tf.contrib.rnn.LSTMCell' to 'tf.compat.v1.nn.rnn_cell.LSTMCell'
262:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
264:52: INFO: Renamed keyword argument for tf.expand_dims from dim to axis
312:11: ERROR: Using member tf.contrib.legacy_seq2seq.rnn_decoder in deprecated module tf.contrib. tf.contrib.legacy_seq2seq.rnn_decoder cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
369:11: ERROR: Using member tf.contrib.legacy_seq2seq.attention_decoder in deprecated module tf.contrib. tf.contrib.legacy_seq2seq.attention_decoder cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/demo_inference.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/attention_ocr/python/demo_inference.py'
--------------------------------------------------------------------------------

52:31: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
66:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
96:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/data_provider_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/attention_ocr/python/data_provider_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/train.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/attention_ocr/python/train.py'
--------------------------------------------------------------------------------

99:16: INFO: Renamed 'tf.train.MomentumOptimizer' to 'tf.compat.v1.train.MomentumOptimizer'
102:16: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
104:16: INFO: Renamed 'tf.train.AdadeltaOptimizer' to 'tf.compat.v1.train.AdadeltaOptimizer'
106:16: INFO: Renamed 'tf.train.AdagradOptimizer' to 'tf.compat.v1.train.AdagradOptimizer'
108:16: INFO: Renamed 'tf.train.RMSPropOptimizer' to 'tf.compat.v1.train.RMSPropOptimizer'
157:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
159:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
163:6: INFO: Renamed 'tf.gfile.DeleteRecursively' to 'tf.io.gfile.rmtree'
164:6: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
172:6: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
189:18: INFO: Renamed 'tf.train.replica_device_setter' to 'tf.compat.v1.train.replica_device_setter'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/data_provider.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/attention_ocr/python/data_provider.py'
--------------------------------------------------------------------------------

59:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
65:31: INFO: Added keywords to args of function 'tf.image.sample_distorted_bounding_box'
66:8: INFO: Added keywords to args of function 'tf.shape'
77:26: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
102:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
104:32: INFO: Added keywords to args of function 'tf.shape'
104:52: INFO: Added keywords to args of function 'tf.shape'
132:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
188:49: INFO: Renamed 'tf.train.shuffle_batch' to 'tf.compat.v1.train.shuffle_batch'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/attention_ocr/python/model.py'
--------------------------------------------------------------------------------

87:17: ERROR: Using member tf.contrib.lookup.index_to_string_table_from_tensor in deprecated module tf.contrib. tf.contrib.lookup.index_to_string_table_from_tensor cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
96:11: INFO: Added keywords to args of function 'tf.reduce_join'
97:43: INFO: Renamed keyword argument for tf.reduce_join from reduction_indices to axis
96:11: INFO: Renamed 'tf.reduce_join' to 'tf.strings.reduce_join'
97:24: INFO: Changed tf.to_int64 call to tf.cast(..., dtype=tf.int64).
113:14: INFO: Changing labels arg of tf.nn.softmax_cross_entropy_with_logits to tf.stop_gradient(labels). Please check this transformation.

201:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
203:8: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
239:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
259:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
280:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
304:10: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
304:22: INFO: Added keywords to args of function 'tf.argmax'
308:22: INFO: Added keywords to args of function 'tf.boolean_mask'
356:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
407:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
407:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
446:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
466:18: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
470:13: ERROR: Using member tf.contrib.legacy_seq2seq.sequence_loss in deprecated module tf.contrib. tf.contrib.legacy_seq2seq.sequence_loss cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
476:6: INFO: tf.losses.add_loss requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
476:6: INFO: Renamed 'tf.losses.add_loss' to 'tf.compat.v1.losses.add_loss'
506:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
506:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
509:6: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
509:6: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
511:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
512:8: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
512:8: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
539:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
539:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
539:40: INFO: Renamed 'tf.Print' to 'tf.compat.v1.Print'
569:71: INFO: Renamed 'tf.moving_average_variables' to 'tf.compat.v1.moving_average_variables'
570:66: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/metrics.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/attention_ocr/python/metrics.py'
--------------------------------------------------------------------------------

37:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
40:14: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
42:14: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
43:20: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
44:27: INFO: Renamed 'tf.div' to 'tf.compat.v1.div'
45:8: INFO: Added keywords to args of function 'tf.reduce_sum'
46:8: INFO: Added keywords to args of function 'tf.reduce_sum'
48:13: ERROR: Using member tf.contrib.metrics.streaming_mean in deprecated module tf.contrib. tf.contrib.metrics.streaming_mean cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
50:13: INFO: Added keywords to args of function 'tf.reduce_mean'
69:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
72:14: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
76:26: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
77:8: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
79:20: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
81:8: INFO: Added keywords to args of function 'tf.reduce_sum'
81:37: INFO: Renamed keyword argument for tf.reduce_sum from reduction_indices to axis
85:27: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
88:13: ERROR: Using member tf.contrib.metrics.streaming_mean in deprecated module tf.contrib. tf.contrib.metrics.streaming_mean cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
90:13: INFO: Added keywords to args of function 'tf.reduce_mean'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/common_flags.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/attention_ocr/python/common_flags.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/inception_preprocessing.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/attention_ocr/python/inception_preprocessing.py'
--------------------------------------------------------------------------------

41:8: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
67:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

67:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
134:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

134:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
145:36: INFO: Added keywords to args of function 'tf.image.sample_distorted_bounding_box'
146:8: INFO: Added keywords to args of function 'tf.shape'
191:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

191:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
201:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
201:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
209:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
209:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
221:26: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
224:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
224:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
236:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
236:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
268:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

268:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
279:14: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
279:14: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/demo_inference_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/attention_ocr/python/demo_inference_test.py'
--------------------------------------------------------------------------------

17:22: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
22:4: ERROR: Using member tf.flags.FLAGS.dataset_dir  in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
33:21: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
35:13: INFO: Renamed 'tf.train.NewCheckpointReader' to 'tf.compat.v1.train.NewCheckpointReader'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/attention_ocr/python/utils.py'
--------------------------------------------------------------------------------

40:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
42:17: INFO: Added keywords to args of function 'tf.reduce_max'
43:16: INFO: Renamed keyword argument for tf.reduce_max from reduction_indices to axis
43:53: INFO: Renamed keyword argument for tf.reduce_max from keep_dims to keepdims
45:14: INFO: Added keywords to args of function 'tf.reduce_sum'
47:8: INFO: Renamed keyword argument for tf.reduce_sum from reduction_indices to axis
48:8: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
49:41: INFO: Renamed 'tf.log' to 'tf.math.log'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/eval.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/attention_ocr/python/eval.py'
--------------------------------------------------------------------------------

48:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
49:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
65:19: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/metrics_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/attention_ocr/python/metrics_test.py'
--------------------------------------------------------------------------------

41:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
42:15: INFO: Renamed 'tf.local_variables_initializer' to 'tf.compat.v1.local_variables_initializer'
58:16: INFO: Added keywords to args of function 'tf.convert_to_tensor'
69:22: INFO: Added keywords to args of function 'tf.convert_to_tensor'
70:20: INFO: Added keywords to args of function 'tf.convert_to_tensor'
83:22: INFO: Added keywords to args of function 'tf.convert_to_tensor'
84:20: INFO: Added keywords to args of function 'tf.convert_to_tensor'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/sequence_layers_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/attention_ocr/python/sequence_layers_test.py'
--------------------------------------------------------------------------------

31:9: INFO: Added keywords to args of function 'tf.convert_to_tensor'
37:14: INFO: Added keywords to args of function 'tf.convert_to_tensor'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/model_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/attention_ocr/python/model_test.py'
--------------------------------------------------------------------------------

86:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
116:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
129:20: INFO: Renamed 'tf.profiler.profile' to 'tf.compat.v1.profiler.profile'
131:18: INFO: Renamed 'tf.profiler.ProfileOptionBuilder' to 'tf.compat.v1.profiler.ProfileOptionBuilder'
150:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
151:15: INFO: Renamed 'tf.local_variables_initializer' to 'tf.compat.v1.local_variables_initializer'
152:6: INFO: Renamed 'tf.tables_initializer' to 'tf.compat.v1.tables_initializer'
179:14: ERROR: Using member tf.contrib.layers.one_hot_encoding in deprecated module tf.contrib. tf.contrib.layers.one_hot_encoding cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
186:10: ERROR: Using member tf.contrib.layers.one_hot_encoding in deprecated module tf.contrib. tf.contrib.layers.one_hot_encoding cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
255:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
256:6: INFO: Renamed 'tf.tables_initializer' to 'tf.compat.v1.tables_initializer'
271:6: INFO: Renamed 'tf.tables_initializer' to 'tf.compat.v1.tables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/datasets/fsns_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/attention_ocr/python/datasets/fsns_test.py'
--------------------------------------------------------------------------------

26:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
94:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/datasets/fsns.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/attention_ocr/python/datasets/fsns.py'
--------------------------------------------------------------------------------

75:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
99:11: INFO: Changed tf.to_int64 call to tf.cast(..., dtype=tf.int64).
136:6: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
138:6: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
140:6: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
142:6: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
144:6: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
146:6: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
148:6: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
174:13: INFO: Renamed 'tf.TFRecordReader' to 'tf.compat.v1.TFRecordReader'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/datasets/unittest_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/attention_ocr/python/datasets/unittest_utils.py'
--------------------------------------------------------------------------------

36:2: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/datasets/unittest_utils_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/attention_ocr/python/datasets/unittest_utils_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/datasets/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/attention_ocr/python/datasets/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/attention_ocr/python/datasets/testdata/fsns/download_data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/attention_ocr/python/datasets/testdata/fsns/download_data.py'
--------------------------------------------------------------------------------

15:39: INFO: Renamed 'tf.python_io.tf_record_iterator' to 'tf.compat.v1.python_io.tf_record_iterator'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learning_unsupervised_learning/run_eval.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learning_unsupervised_learning/run_eval.py'
--------------------------------------------------------------------------------

63:16: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
65:46: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
67:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
68:11: INFO: Renamed 'tf.all_variables' to 'tf.compat.v1.all_variables'
69:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
70:16: INFO: Renamed 'tf.train.get_global_step' to 'tf.compat.v1.train.get_global_step'
77:15: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
77:15: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
82:43: INFO: Renamed 'tf.all_variables' to 'tf.compat.v1.all_variables'
86:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
90:39: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
97:7: INFO: Renamed 'tf.train.SingularMonitoredSession' to 'tf.compat.v1.train.SingularMonitoredSession'
103:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
105:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learning_unsupervised_learning/evaluation.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learning_unsupervised_learning/evaluation.py'
--------------------------------------------------------------------------------

42:2: INFO: Renamed 'tf.train.create_global_step' to 'tf.compat.v1.train.create_global_step'
67:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
67:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
67:61: INFO: Added keywords to args of function 'tf.reduce_mean'
72:51: INFO: Renamed 'tf.train.get_global_step' to 'tf.compat.v1.train.get_global_step'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learning_unsupervised_learning/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learning_unsupervised_learning/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learning_unsupervised_learning/utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learning_unsupervised_learning/utils.py'
--------------------------------------------------------------------------------

64:17: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
65:18: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
67:9: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
68:19: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
69:4: INFO: Renamed 'tf.logging.error' to 'tf.compat.v1.logging.error'
70:4: INFO: Renamed 'tf.logging.error' to 'tf.compat.v1.logging.error'
72:6: INFO: Renamed 'tf.logging.error' to 'tf.compat.v1.logging.error'
76:22: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
129:13: INFO: Renamed 'tf.Print' to 'tf.compat.v1.Print'
133:23: INFO: Renamed 'tf.train.QueueRunner' to 'tf.compat.v1.train.QueueRunner'
166:38: ERROR: name_scope call with neither name nor default_name cannot be converted properly.
167:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

167:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
177:16: INFO: Renamed 'tf.FIFOQueue' to 'tf.queue.FIFOQueue'
183:14: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
192:28: INFO: Added keywords to args of function 'tf.shape'
197:21: INFO: Added keywords to args of function 'tf.cond'
203:26: INFO: Renamed 'tf.Print' to 'tf.compat.v1.Print'
204:37: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
205:20: INFO: Added keywords to args of function 'tf.cond'
209:6: INFO: Renamed 'tf.train.add_queue_runner' to 'tf.compat.v1.train.add_queue_runner'
212:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

212:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
218:12: INFO: Renamed 'tf.random_shuffle' to 'tf.random.shuffle'
263:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
267:12: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
274:30: INFO: Renamed 'tf.AUTO_REUSE' to 'tf.compat.v1.AUTO_REUSE'
280:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

280:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
282:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

282:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learning_unsupervised_learning/variable_replace.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learning_unsupervised_learning/variable_replace.py'
--------------------------------------------------------------------------------

ERROR: Failed to parse.
Traceback (most recent call last):
  File "/home/arion/.local/lib/python3.10/site-packages/tensorflow/tools/compatibility/ast_edits.py", line 933, in update_string_pasta
    t = pasta.parse(text)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/__init__.py", line 23, in parse
    t = ast_utils.parse(src)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/base/ast_utils.py", line 56, in parse
    tree = ast.parse(sanitize_source(src))
  File "/usr/lib/python3.10/ast.py", line 50, in parse
    return compile(source, filename, mode, flags,
  File "<unknown>", line 94
    print "Didn't use all replacements"
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)?

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learning_unsupervised_learning/summary_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learning_unsupervised_learning/summary_utils.py'
--------------------------------------------------------------------------------

39:24: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
39:24: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
51:24: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
52:18: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
58:10: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
75:11: INFO: Added keywords to args of function 'tf.pad'
106:14: INFO: Added keywords to args of function 'tf.nn.moments'
106:51: INFO: Renamed keyword argument for tf.nn.moments from keep_dims to keepdims
111:17: INFO: Added keywords to args of function 'tf.transpose'
120:21: INFO: Added keywords to args of function 'tf.reduce_max'
120:56: INFO: Renamed keyword argument for tf.reduce_max from keep_dims to keepdims
127:11: INFO: Added keywords to args of function 'tf.argmax'
129:14: INFO: Added keywords to args of function 'tf.nn.moments'
137:11: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
146:8: INFO: Added keywords to args of function 'tf.cond'
146:25: INFO: Added keywords to args of function 'tf.shape'
156:11: INFO: Added keywords to args of function 'tf.argmax'
160:11: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
169:8: INFO: Added keywords to args of function 'tf.cond'
169:25: INFO: Added keywords to args of function 'tf.shape'
174:14: INFO: Added keywords to args of function 'tf.shape'
175:10: INFO: Added keywords to args of function 'tf.pad'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learning_unsupervised_learning/optimizers.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learning_unsupervised_learning/optimizers.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learning_unsupervised_learning/meta_objective/sklearn.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learning_unsupervised_learning/meta_objective/sklearn.py'
--------------------------------------------------------------------------------

ERROR: Failed to parse.
Traceback (most recent call last):
  File "/home/arion/.local/lib/python3.10/site-packages/tensorflow/tools/compatibility/ast_edits.py", line 933, in update_string_pasta
    t = pasta.parse(text)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/__init__.py", line 23, in parse
    t = ast_utils.parse(src)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/base/ast_utils.py", line 56, in parse
    tree = ast.parse(sanitize_source(src))
  File "/usr/lib/python3.10/ast.py", line 50, in parse
    return compile(source, filename, mode, flags,
  File "<unknown>", line 116
    def blackbox((trX, trY, teX, teY)):
                 ^
SyntaxError: invalid syntax

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learning_unsupervised_learning/meta_objective/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learning_unsupervised_learning/meta_objective/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learning_unsupervised_learning/meta_objective/utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learning_unsupervised_learning/meta_objective/utils.py'
--------------------------------------------------------------------------------

61:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
61:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
75:42: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learning_unsupervised_learning/meta_objective/linear_regression.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learning_unsupervised_learning/meta_objective/linear_regression.py'
--------------------------------------------------------------------------------

37:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

37:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
48:18: INFO: Renamed 'tf.diag' to 'tf.linalg.tensor_diag'
50:10: INFO: Renamed 'tf.matrix_inverse' to 'tf.linalg.inv'
114:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
114:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
152:13: INFO: Added keywords to args of function 'tf.reduce_mean'
153:13: INFO: Renamed 'tf.rsqrt' to 'tf.math.rsqrt'
153:22: INFO: Added keywords to args of function 'tf.reduce_mean'
153:37: INFO: Added keywords to args of function 'tf.reduce_sum'
153:67: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
192:12: INFO: Added keywords to args of function 'tf.reduce_sum'
192:58: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
201:19: INFO: Added keywords to args of function 'tf.reduce_sum'
201:44: INFO: Added keywords to args of function 'tf.reduce_sum'
203:19: INFO: Added keywords to args of function 'tf.reduce_sum'
207:18: INFO: Added keywords to args of function 'tf.reduce_sum'
210:33: INFO: Added keywords to args of function 'tf.argmax'
210:59: INFO: Added keywords to args of function 'tf.argmax'
211:22: INFO: Added keywords to args of function 'tf.reduce_mean'
215:25: INFO: Added keywords to args of function 'tf.confusion_matrix'
215:25: INFO: Renamed 'tf.confusion_matrix' to 'tf.math.confusion_matrix'
215:45: INFO: Added keywords to args of function 'tf.argmax'
215:67: INFO: Added keywords to args of function 'tf.argmax'
216:25: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
219:6: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
219:6: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
222:26: INFO: Added keywords to args of function 'tf.confusion_matrix'
222:26: INFO: Renamed 'tf.confusion_matrix' to 'tf.math.confusion_matrix'
222:46: INFO: Added keywords to args of function 'tf.argmax'
222:69: INFO: Added keywords to args of function 'tf.argmax'
223:26: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
226:6: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
226:6: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
228:28: INFO: Added keywords to args of function 'tf.argmax'
228:55: INFO: Added keywords to args of function 'tf.argmax'
229:23: INFO: Added keywords to args of function 'tf.reduce_mean'
232:32: INFO: Added keywords to args of function 'tf.reduce_sum'
255:42: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learning_unsupervised_learning/architectures/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learning_unsupervised_learning/architectures/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learning_unsupervised_learning/architectures/common.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learning_unsupervised_learning/architectures/common.py'
--------------------------------------------------------------------------------

40:8: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
41:23: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
41:23: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
46:13: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
46:13: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
49:20: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
49:20: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
53:16: INFO: Added keywords to args of function 'tf.nn.moments'
53:38: INFO: Renamed keyword argument for tf.nn.moments from keep_dims to keepdims
54:22: INFO: Renamed 'tf.rsqrt' to 'tf.math.rsqrt'
95:25: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
95:25: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learning_unsupervised_learning/architectures/more_local_weight_update.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learning_unsupervised_learning/architectures/more_local_weight_update.py'
--------------------------------------------------------------------------------

65:13: INFO: Added keywords to args of function 'tf.transpose'
84:7: INFO: Added keywords to args of function 'tf.reduce_mean'
85:15: INFO: Added keywords to args of function 'tf.reduce_mean'
87:14: INFO: Added keywords to args of function 'tf.nn.moments'
106:11: INFO: Added keywords to args of function 'tf.reduce_mean'
107:19: INFO: Added keywords to args of function 'tf.reduce_mean'
109:18: INFO: Added keywords to args of function 'tf.nn.moments'
126:10: INFO: Added keywords to args of function 'tf.transpose'
136:16: INFO: Added keywords to args of function 'tf.transpose'
185:10: INFO: Added keywords to args of function 'tf.reduce_mean'
204:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
207:27: INFO: Added keywords to args of function 'tf.transpose'
216:12: INFO: Added keywords to args of function 'tf.transpose'
223:12: INFO: Added keywords to args of function 'tf.transpose'
239:12: INFO: Added keywords to args of function 'tf.transpose'
262:18: INFO: Added keywords to args of function 'tf.transpose'
276:16: INFO: Added keywords to args of function 'tf.transpose'
296:18: INFO: Added keywords to args of function 'tf.transpose'
299:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
310:31: INFO: Added keywords to args of function 'tf.transpose'
313:37: INFO: Renamed 'tf.rsqrt' to 'tf.math.rsqrt'
314:10: INFO: Added keywords to args of function 'tf.reduce_mean'
348:10: INFO: Added keywords to args of function 'tf.transpose'
366:29: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

366:29: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
372:20: INFO: Added keywords to args of function 'tf.nn.moments'
373:35: INFO: Added keywords to args of function 'tf.reduce_mean'
379:15: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
379:15: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
380:15: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
380:15: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
396:11: INFO: Added keywords to args of function 'tf.reduce_mean'
437:11: INFO: Added keywords to args of function 'tf.reduce_mean'
493:42: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
496:36: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
537:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
537:20: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
591:6: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
591:6: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
595:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
595:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
598:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
598:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
604:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
604:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
628:12: INFO: Added keywords to args of function 'tf.transpose'
630:12: INFO: Added keywords to args of function 'tf.transpose'
635:12: INFO: Added keywords to args of function 'tf.reduce_mean'
636:14: INFO: Renamed 'tf.rsqrt' to 'tf.math.rsqrt'
654:19: INFO: Renamed 'tf.rsqrt' to 'tf.math.rsqrt'
655:8: INFO: Added keywords to args of function 'tf.reduce_mean'
664:20: INFO: Added keywords to args of function 'tf.reduce_mean'
665:17: INFO: Renamed 'tf.rsqrt' to 'tf.math.rsqrt'
665:26: INFO: Added keywords to args of function 'tf.reduce_mean'
670:15: INFO: Renamed 'tf.rsqrt' to 'tf.math.rsqrt'
670:24: INFO: Added keywords to args of function 'tf.reduce_mean'
675:20: INFO: Added keywords to args of function 'tf.reduce_mean'
676:17: INFO: Renamed 'tf.rsqrt' to 'tf.math.rsqrt'
676:26: INFO: Added keywords to args of function 'tf.reduce_mean'
707:35: INFO: Added keywords to args of function 'tf.transpose'
708:23: INFO: Renamed 'tf.matrix_set_diag' to 'tf.linalg.set_diag'
744:15: INFO: Added keywords to args of function 'tf.reduce_mean'
747:20: INFO: Added keywords to args of function 'tf.reduce_mean'
751:10: INFO: Added keywords to args of function 'tf.reduce_mean'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learning_unsupervised_learning/datasets/mnist.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learning_unsupervised_learning/datasets/mnist.py'
--------------------------------------------------------------------------------

43:14: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
55:22: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

70:16: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learning_unsupervised_learning/datasets/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learning_unsupervised_learning/datasets/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learning_unsupervised_learning/datasets/common.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learning_unsupervised_learning/datasets/common.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/transformer/example.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/transformer/example.py'
--------------------------------------------------------------------------------

37:4: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
41:5: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
57:7: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
58:9: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/transformer/spatial_transformer.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/transformer/spatial_transformer.py'
--------------------------------------------------------------------------------

56:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
57:18: INFO: Added keywords to args of function 'tf.transpose'
64:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
66:24: INFO: Added keywords to args of function 'tf.shape'
67:21: INFO: Added keywords to args of function 'tf.shape'
68:20: INFO: Added keywords to args of function 'tf.shape'
69:23: INFO: Added keywords to args of function 'tf.shape'
78:28: INFO: Added keywords to args of function 'tf.shape'
79:28: INFO: Added keywords to args of function 'tf.shape'
127:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
134:28: INFO: Added keywords to args of function 'tf.transpose'
146:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
147:24: INFO: Added keywords to args of function 'tf.shape'
148:21: INFO: Added keywords to args of function 'tf.shape'
149:20: INFO: Added keywords to args of function 'tf.shape'
150:27: INFO: Added keywords to args of function 'tf.shape'
180:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
201:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/transformer/cluttered_mnist.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/transformer/cluttered_mnist.py'
--------------------------------------------------------------------------------

38:4: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
39:4: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
65:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
66:17: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

91:17: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
103:17: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
117:13: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

125:16: INFO: Added keywords to args of function 'tf.reduce_mean'
126:4: INFO: Changing labels arg of tf.nn.softmax_cross_entropy_with_logits to tf.stop_gradient(labels). Please check this transformation.

127:6: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
132:30: INFO: Added keywords to args of function 'tf.argmax'
132:54: INFO: Added keywords to args of function 'tf.argmax'
133:11: INFO: Added keywords to args of function 'tf.reduce_mean'
137:7: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
138:9: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/transformer/tf_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/transformer/tf_utils.py'
--------------------------------------------------------------------------------

56:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
57:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
57:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
59:24: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
59:24: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
60:15: INFO: Added keywords to args of function 'tf.nn.conv2d'
60:15: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
63:16: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
63:16: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
65:28: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
65:28: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
91:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
92:17: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
92:17: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
93:33: INFO: tf.random_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
93:33: INFO: Renamed 'tf.random_normal_initializer' to 'tf.compat.v1.random_normal_initializer'
118:14: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/tcn/data_providers_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/tcn/data_providers_test.py'
--------------------------------------------------------------------------------

31:4: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/tcn/data_providers.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/tcn/data_providers.py'
--------------------------------------------------------------------------------

53:15: ERROR: Using member tf.contrib.slim.parallel_reader.get_data_files in deprecated module tf.contrib. tf.contrib.slim.parallel_reader.get_data_files cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
67:12: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

91:25: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
93:25: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
94:20: INFO: Added keywords to args of function 'tf.parse_single_example'
94:20: INFO: Renamed 'tf.parse_single_example' to 'tf.io.parse_single_example'
135:18: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

153:14: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
154:13: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
158:6: INFO: Renamed 'tf.FixedLenSequenceFeature' to 'tf.io.FixedLenSequenceFeature'
161:34: INFO: Renamed 'tf.parse_single_sequence_example' to 'tf.io.parse_single_sequence_example'
168:12: INFO: Added keywords to args of function 'tf.shape'
205:16: INFO: Renamed 'tf.random_shuffle' to 'tf.random.shuffle'
211:17: INFO: Added keywords to args of function 'tf.cond'
212:21: INFO: Renamed 'tf.random_shuffle' to 'tf.random.shuffle'
219:36: INFO: Renamed 'tf.random_shuffle' to 'tf.random.shuffle'
369:13: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

422:16: INFO: Renamed 'tf.random_shuffle' to 'tf.random.shuffle'
428:17: INFO: Added keywords to args of function 'tf.cond'
430:16: INFO: Renamed 'tf.random_shuffle' to 'tf.random.shuffle'
503:12: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/tcn/train.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/tcn/train.py'
--------------------------------------------------------------------------------

25:0: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
25:25: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
27:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
35:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
37:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
39:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
41:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
43:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
45:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
61:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/tcn/model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/tcn/model.py'
--------------------------------------------------------------------------------

96:19: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
122:21: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
207:13: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
209:29: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
210:10: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
238:21: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
256:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
275:12: INFO: Added keywords to args of function 'tf.reduce_mean'
275:64: INFO: Renamed keyword argument for tf.reduce_mean from keep_dims to keepdims
304:50: INFO: Renamed keyword argument for tf.nn.l2_normalize from dim to axis
311:13: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
313:29: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
314:10: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
359:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
391:16: ERROR: Using member tf.contrib.layers.spatial_softmax in deprecated module tf.contrib. tf.contrib.layers.spatial_softmax cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
408:42: INFO: Renamed keyword argument for tf.nn.l2_normalize from dim to axis
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/tcn/generate_videos.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/tcn/generate_videos.py'
--------------------------------------------------------------------------------

61:0: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
61:25: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
63:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
71:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
73:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
75:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
77:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
80:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
82:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
87:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
89:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
91:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
93:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
95:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
97:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
99:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
101:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
130:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
131:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
163:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
164:2: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
233:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
293:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
335:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
426:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/tcn/download_pretrained.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/tcn/download_pretrained.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/tcn/labeled_eval_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/tcn/labeled_eval_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/tcn/labeled_eval.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/tcn/labeled_eval.py'
--------------------------------------------------------------------------------

30:0: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
30:25: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
33:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
41:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
43:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
46:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
48:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
50:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
52:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
53:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
173:13: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
173:31: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
185:11: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
185:29: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
224:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
238:19: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
238:19: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
301:27: INFO: Renamed 'tf.contrib.training.checkpoints_iterator' to 'tf.train.checkpoints_iterator'
309:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/tcn/visualize_embeddings.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/tcn/visualize_embeddings.py'
--------------------------------------------------------------------------------

48:0: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
48:25: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
50:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
58:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
60:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
62:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
64:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
66:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
68:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
70:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
72:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
74:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
178:7: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
180:21: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
180:21: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
191:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
192:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
198:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/tcn/eval.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/tcn/eval.py'
--------------------------------------------------------------------------------

25:0: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
25:25: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
27:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
35:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
37:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
39:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
41:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
55:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
63:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/tcn/alignment.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/tcn/alignment.py'
--------------------------------------------------------------------------------

26:0: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
26:25: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
28:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
36:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
38:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
40:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
42:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
43:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
82:9: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
82:27: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
103:19: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
103:19: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
126:27: INFO: Renamed 'tf.contrib.training.checkpoints_iterator' to 'tf.train.checkpoints_iterator'
133:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/tcn/preprocessing.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/tcn/preprocessing.py'
--------------------------------------------------------------------------------

44:8: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
87:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

87:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
98:36: INFO: Added keywords to args of function 'tf.image.sample_distorted_bounding_box'
99:8: INFO: Added keywords to args of function 'tf.shape'
135:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

135:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
173:10: INFO: Added keywords to args of function 'tf.shape'
184:10: INFO: Added keywords to args of function 'tf.shape'
197:10: INFO: Added keywords to args of function 'tf.shape'
200:10: INFO: Added keywords to args of function 'tf.shape'
236:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
268:7: INFO: tf.assert_less_equal requires manual check. tf.assert_less_equal has been changed to return None, the data argument has been removed, and arguments have been reordered.
The calls have been converted to compat.v1 for safety (even though  they may already have been correct).
268:7: INFO: Renamed 'tf.assert_less_equal' to 'tf.compat.v1.assert_less_equal'
268:28: INFO: Added keywords to args of function 'tf.reduce_max'
269:7: INFO: tf.assert_greater_equal requires manual check. tf.assert_greater_equal has been changed to return None, the data argument has been removed, and arguments have been reordered.
The calls have been converted to compat.v1 for safety (even though  they may already have been correct).
269:7: INFO: Renamed 'tf.assert_greater_equal' to 'tf.compat.v1.assert_greater_equal'
269:31: INFO: Added keywords to args of function 'tf.reduce_min'
278:10: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
278:10: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
352:15: INFO: Added keywords to args of function 'tf.shape'
362:10: INFO: Added keywords to args of function 'tf.cond'
370:10: INFO: Added keywords to args of function 'tf.cond'
433:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
437:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
441:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
445:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
447:9: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
448:12: INFO: Added keywords to args of function 'tf.cond'
522:10: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
522:10: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/tcn/dataset/webcam.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/tcn/dataset/webcam.py'
--------------------------------------------------------------------------------

63:0: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
63:25: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
66:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
67:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
70:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
74:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
76:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
78:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
80:0: ERROR: Using member tf.flags.DEFINE_boolean in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
83:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
85:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
87:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
88:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
89:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
91:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
245:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
259:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
364:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
386:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
387:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
388:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
426:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
428:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
439:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
441:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
491:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/tcn/dataset/images_to_videos.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/tcn/dataset/images_to_videos.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/tcn/dataset/videos_to_tfrecords.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/tcn/dataset/videos_to_tfrecords.py'
--------------------------------------------------------------------------------

54:0: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
54:25: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
57:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
59:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
60:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
62:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
63:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
65:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
66:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
68:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
69:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
70:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
73:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
74:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
86:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
109:10: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
120:10: INFO: Renamed 'tf.logging.error' to 'tf.compat.v1.logging.error'
146:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
177:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
216:2: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
250:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
255:4: INFO: Renamed 'tf.logging.error' to 'tf.compat.v1.logging.error'
298:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
302:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
326:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
339:8: INFO: Renamed 'tf.logging.error' to 'tf.compat.v1.logging.error'
352:4: INFO: Renamed 'tf.logging.error' to 'tf.compat.v1.logging.error'
369:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
375:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
376:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
382:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
386:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
389:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
397:28: INFO: Renamed 'tf.python_io.tf_record_iterator' to 'tf.compat.v1.python_io.tf_record_iterator'
424:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
432:7: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
436:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
439:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
441:11: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
442:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
443:6: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
445:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
446:13: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
449:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
450:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
458:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/tcn/estimators/svtcn_loss_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/tcn/estimators/svtcn_loss_test.py'
--------------------------------------------------------------------------------

93:21: INFO: Added keywords to args of function 'tf.convert_to_tensor'
94:20: INFO: Added keywords to args of function 'tf.convert_to_tensor'
98:23: INFO: Added keywords to args of function 'tf.convert_to_tensor'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/tcn/estimators/mvtcn_estimator.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/tcn/estimators/mvtcn_estimator.py'
--------------------------------------------------------------------------------

78:6: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
78:6: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
79:6: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
79:6: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
113:11: WARNING: tf.contrib.losses.metric_learning.triplet_semihard_loss requires manual check. (Manual edit required) `tf.contrib.losses.metric_learning.triplet_semihard_loss` has been migrated to `tfa.losses.TripletSemiHardLoss` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
113:11: ERROR: Using member tf.contrib.losses.metric_learning.triplet_semihard_loss in deprecated module tf.contrib. tf.contrib.losses.metric_learning.triplet_semihard_loss cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
117:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
117:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
122:43: INFO: tf.metrics.mean requires manual check. tf.metrics have been replaced with object oriented versions in TF 2.0 and after. The metric function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
122:43: INFO: Renamed 'tf.metrics.mean' to 'tf.compat.v1.metrics.mean'
155:11: ERROR: Using member tf.contrib.losses.metric_learning.npairs_loss in deprecated module tf.contrib. tf.contrib.losses.metric_learning.npairs_loss cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
160:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
160:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
165:33: INFO: tf.metrics.mean requires manual check. tf.metrics have been replaced with object oriented versions in TF 2.0 and after. The metric function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
165:33: INFO: Renamed 'tf.metrics.mean' to 'tf.compat.v1.metrics.mean'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/tcn/estimators/get_estimator.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/tcn/estimators/get_estimator.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/tcn/estimators/svtcn_loss.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/tcn/estimators/svtcn_loss.py'
--------------------------------------------------------------------------------

38:6: INFO: Added keywords to args of function 'tf.reduce_sum'
39:38: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
40:6: INFO: Added keywords to args of function 'tf.reduce_sum'
42:10: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
41:20: INFO: Added keywords to args of function 'tf.transpose'
42:54: INFO: Added keywords to args of function 'tf.transpose'
61:18: INFO: Added keywords to args of function 'tf.reduce_min'
61:43: INFO: Renamed keyword argument for tf.reduce_min from keep_dims to keepdims
62:20: INFO: Added keywords to args of function 'tf.reduce_max'
64:44: INFO: Renamed keyword argument for tf.reduce_max from keep_dims to keepdims
80:18: INFO: Added keywords to args of function 'tf.reduce_max'
80:43: INFO: Renamed keyword argument for tf.reduce_max from keep_dims to keepdims
81:20: INFO: Added keywords to args of function 'tf.reduce_min'
83:44: INFO: Renamed keyword argument for tf.reduce_min from keep_dims to keepdims
130:11: INFO: Added keywords to args of function 'tf.shape'
145:13: INFO: Added keywords to args of function 'tf.shape'
151:48: INFO: Added keywords to args of function 'tf.transpose'
158:31: INFO: Added keywords to args of function 'tf.transpose'
164:38: INFO: Added keywords to args of function 'tf.transpose'
169:27: INFO: Added keywords to args of function 'tf.transpose'
170:49: INFO: Added keywords to args of function 'tf.transpose'
173:15: INFO: Added keywords to args of function 'tf.size'
180:28: INFO: Added keywords to args of function 'tf.transpose'
183:10: INFO: Added keywords to args of function 'tf.reduce_sum'
185:46: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
187:15: INFO: Added keywords to args of function 'tf.transpose'
195:22: INFO: Added keywords to args of function 'tf.transpose'
200:24: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
206:40: INFO: Renamed 'tf.diag' to 'tf.linalg.tensor_diag'
210:18: INFO: Added keywords to args of function 'tf.reduce_sum'
213:6: INFO: Added keywords to args of function 'tf.reduce_sum'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/tcn/estimators/svtcn_estimator.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/tcn/estimators/svtcn_estimator.py'
--------------------------------------------------------------------------------

58:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
58:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
95:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
95:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
100:37: INFO: tf.metrics.mean requires manual check. tf.metrics have been replaced with object oriented versions in TF 2.0 and after. The metric function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
100:37: INFO: Renamed 'tf.metrics.mean' to 'tf.compat.v1.metrics.mean'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/tcn/estimators/base_estimator.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/tcn/estimators/base_estimator.py'
--------------------------------------------------------------------------------

37:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
39:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
59:24: ERROR: Using member tf.contrib.framework.load_checkpoint in deprecated module tf.contrib. tf.contrib.framework.load_checkpoint cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
69:26: ERROR: Using member tf.contrib.framework.get_model_variables in deprecated module tf.contrib. tf.contrib.framework.get_model_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
89:10: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
97:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
103:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
106:20: ERROR: Using member tf.contrib.framework.assign_from_checkpoint_fn in deprecated module tf.contrib. tf.contrib.framework.assign_from_checkpoint_fn cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
111:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
113:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
241:20: INFO: tf.train.exponential_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

241:20: INFO: Renamed 'tf.train.exponential_decay' to 'tf.compat.v1.train.exponential_decay'
251:12: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
253:12: INFO: Renamed 'tf.train.MomentumOptimizer' to 'tf.compat.v1.train.MomentumOptimizer'
255:12: INFO: Renamed 'tf.train.RMSPropOptimizer' to 'tf.compat.v1.train.RMSPropOptimizer'
270:19: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
270:37: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
314:8: INFO: tf.losses.add_loss requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
314:8: INFO: Renamed 'tf.losses.add_loss' to 'tf.compat.v1.losses.add_loss'
315:21: INFO: tf.losses.get_total_loss requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
315:21: INFO: Renamed 'tf.losses.get_total_loss' to 'tf.compat.v1.losses.get_total_loss'
337:14: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
351:19: INFO: Renamed 'tf.train.Scaffold' to 'tf.compat.v1.train.Scaffold'
564:4: INFO: Renamed 'tf.reset_default_graph' to 'tf.compat.v1.reset_default_graph'
579:28: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
588:4: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
589:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
589:27: INFO: Renamed 'tf.all_variables' to 'tf.compat.v1.all_variables'
592:9: INFO: Renamed 'tf.train.MonitoredSession' to 'tf.compat.v1.train.MonitoredSession'
620:14: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
628:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
670:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
674:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
687:4: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
688:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
688:27: INFO: Renamed 'tf.all_variables' to 'tf.compat.v1.all_variables'
699:17: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/tcn/utils/util.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/tcn/utils/util.py'
--------------------------------------------------------------------------------

44:28: INFO: Renamed 'tf.gfile.Walk' to 'tf.io.gfile.walk'
68:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
69:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
71:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
73:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
95:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
96:11: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
102:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
199:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/tcn/utils/luatables.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/tcn/utils/luatables.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/tcn/utils/progress.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/tcn/utils/progress.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deep_speech/decoder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deep_speech/decoder.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deep_speech/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deep_speech/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deep_speech/deep_speech_model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deep_speech/deep_speech_model.py'
--------------------------------------------------------------------------------

25:12: INFO: Renamed 'tf.nn.rnn_cell.BasicLSTMCell' to 'tf.compat.v1.nn.rnn_cell.BasicLSTMCell'
26:11: INFO: Renamed 'tf.nn.rnn_cell.RNNCell' to 'tf.compat.v1.nn.rnn_cell.RNNCell'
27:11: INFO: Renamed 'tf.nn.rnn_cell.GRUCell' to 'tf.compat.v1.nn.rnn_cell.GRUCell'
56:9: INFO: Renamed 'tf.layers.batch_normalization' to 'tf.compat.v1.layers.batch_normalization'
81:11: INFO: Added keywords to args of function 'tf.pad'
84:11: INFO: Renamed 'tf.layers.conv2d' to 'tf.compat.v1.layers.conv2d'
119:17: INFO: Renamed 'tf.nn.bidirectional_dynamic_rnn' to 'tf.compat.v1.nn.bidirectional_dynamic_rnn'
124:18: INFO: Renamed 'tf.nn.dynamic_rnn' to 'tf.compat.v1.nn.dynamic_rnn'
165:17: INFO: Added keywords to args of function 'tf.shape'
182:13: INFO: Renamed 'tf.layers.dense' to 'tf.compat.v1.layers.dense'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deep_speech/deep_speech.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deep_speech/deep_speech.py'
--------------------------------------------------------------------------------

66:21: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
68:9: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
68:21: INFO: Renamed 'tf.floordiv' to 'tf.math.floordiv'
69:24: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
74:17: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
75:21: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
76:18: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
78:11: INFO: Renamed 'tf.log' to 'tf.math.log'
78:18: INFO: Added keywords to args of function 'tf.transpose'
82:6: INFO: Renamed 'tf.nn.ctc_loss' to 'tf.compat.v1.nn.ctc_loss'
128:45: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
132:6: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
167:19: INFO: Added keywords to args of function 'tf.argmax'
179:6: INFO: Added keywords to args of function 'tf.shape'
179:29: INFO: Added keywords to args of function 'tf.shape'
181:9: INFO: Added keywords to args of function 'tf.reduce_mean'
184:14: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
185:16: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
187:15: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
187:33: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
215:2: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
217:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
274:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
285:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
293:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
413:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
413:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deep_speech/data/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deep_speech/data/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deep_speech/data/dataset.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deep_speech/data/dataset.py'
--------------------------------------------------------------------------------

74:11: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
75:11: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
128:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
129:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deep_speech/data/featurizer.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deep_speech/data/featurizer.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deep_speech/data/download.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deep_speech/data/download.py'
--------------------------------------------------------------------------------

62:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
63:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
68:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
78:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
83:4: INFO: Renamed 'tf.gfile.Remove' to 'tf.io.gfile.remove'
115:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
119:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
120:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
126:28: INFO: Renamed 'tf.gfile.Walk' to 'tf.io.gfile.walk'
140:17: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
152:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
163:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
166:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
188:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
189:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
205:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
205:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/example_main.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deep_contextual_bandits/example_main.py'
--------------------------------------------------------------------------------

242:12: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
244:19: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
251:16: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
272:20: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
293:16: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
315:20: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
337:21: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
359:19: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
382:22: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
407:15: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/core/bandit_algorithm.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/core/bandit_algorithm.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/core/bayesian_nn.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/core/bayesian_nn.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/core/contextual_dataset.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/core/contextual_dataset.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/core/contextual_bandit.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/core/contextual_bandit.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/neural_linear_sampling.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/neural_linear_sampling.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/uniform_sampling.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/uniform_sampling.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/bb_alpha_divergence_model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/bb_alpha_divergence_model.py'
--------------------------------------------------------------------------------

36:6: ERROR: Using member tf.contrib.distributions in deprecated module tf.contrib. tf.contrib.distributions cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
42:11: INFO: Added keywords to args of function 'tf.reduce_sum'
99:18: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
100:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
102:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
104:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
106:23: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
115:20: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
119:23: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
124:23: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
132:14: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
139:14: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
172:18: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
173:18: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
180:17: INFO: Added keywords to args of function 'tf.reduce_sum'
184:17: INFO: Added keywords to args of function 'tf.reduce_sum'
196:32: INFO: Added keywords to args of function 'tf.reduce_sum'
214:23: INFO: Added keywords to args of function 'tf.reduce_sum'
215:24: INFO: Added keywords to args of function 'tf.reduce_sum'
215:38: INFO: Renamed 'tf.log' to 'tf.math.log'
215:62: INFO: Renamed 'tf.log' to 'tf.math.log'
217:23: INFO: Added keywords to args of function 'tf.reduce_sum'
218:24: INFO: Added keywords to args of function 'tf.reduce_sum'
218:38: INFO: Renamed 'tf.log' to 'tf.math.log'
218:62: INFO: Renamed 'tf.log' to 'tf.math.log'
227:30: INFO: Renamed 'tf.log' to 'tf.math.log'
249:32: INFO: Added keywords to args of function 'tf.transpose'
250:22: INFO: Added keywords to args of function 'tf.reduce_logsumexp'
251:19: INFO: Renamed 'tf.log' to 'tf.math.log'
254:11: INFO: Added keywords to args of function 'tf.reduce_sum'
275:39: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
306:23: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
307:20: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
311:14: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
313:16: INFO: Added keywords to args of function 'tf.reduce_sum'
317:26: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
317:26: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
321:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
321:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
322:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
322:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
323:22: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
323:22: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
337:18: INFO: tf.train.inverse_time_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

337:18: INFO: Renamed 'tf.train.inverse_time_decay' to 'tf.compat.v1.train.inverse_time_decay'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/multitask_gp.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/multitask_gp.py'
--------------------------------------------------------------------------------

30:6: ERROR: Using member tf.contrib.distributions in deprecated module tf.contrib. tf.contrib.distributions cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
68:18: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
70:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
70:46: INFO: Renamed 'tf.AUTO_REUSE' to 'tf.compat.v1.AUTO_REUSE'
71:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
72:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
73:20: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
74:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
75:23: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
79:20: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
85:9: INFO: Added keywords to args of function 'tf.reduce_sum'
86:9: INFO: Added keywords to args of function 'tf.reduce_sum'
87:62: INFO: Added keywords to args of function 'tf.transpose'
94:42: INFO: Added keywords to args of function 'tf.argmax'
95:43: INFO: Added keywords to args of function 'tf.argmax'
125:23: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
128:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
128:19: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
134:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
134:19: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
139:25: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
139:25: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
145:20: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
146:22: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
149:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
149:21: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
154:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
154:22: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
161:17: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
161:17: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
163:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
163:21: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
165:28: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
165:28: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
167:25: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
167:25: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
169:29: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
169:29: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
174:24: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
174:24: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
176:20: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
182:35: INFO: Added keywords to args of function 'tf.reduce_sum'
184:19: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
185:36: INFO: Added keywords to args of function 'tf.shape'
186:19: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
187:29: INFO: Added keywords to args of function 'tf.reduce_sum'
188:18: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
189:39: INFO: Added keywords to args of function 'tf.reduce_sum'
190:21: INFO: Added keywords to args of function 'tf.reduce_sum'
196:33: INFO: Added keywords to args of function 'tf.boolean_mask'
197:18: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
206:30: INFO: Added keywords to args of function 'tf.shape'
208:16: INFO: Renamed 'tf.cholesky' to 'tf.linalg.cholesky'
209:16: INFO: Renamed 'tf.cholesky_solve' to 'tf.linalg.cholesky_solve'
209:52: INFO: Added keywords to args of function 'tf.shape'
216:24: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
222:21: INFO: Added keywords to args of function 'tf.reduce_sum'
222:35: INFO: Renamed 'tf.log' to 'tf.math.log'
222:42: INFO: Renamed 'tf.diag_part' to 'tf.linalg.tensor_diag_part'
225:24: INFO: Added keywords to args of function 'tf.reduce_sum'
226:8: INFO: Added keywords to args of function 'tf.transpose'
234:16: INFO: Added keywords to args of function 'tf.reduce_sum'
244:16: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
261:26: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
261:26: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
263:17: INFO: Renamed 'tf.add_check_numerics_ops' to 'tf.compat.v1.add_check_numerics_ops'
284:20: INFO: Added keywords to args of function 'tf.shape'
303:28: INFO: Added keywords to args of function 'tf.transpose'
307:14: INFO: Renamed 'tf.svd' to 'tf.linalg.svd'
308:39: INFO: Renamed 'tf.diag' to 'tf.linalg.tensor_diag'
308:51: INFO: Added keywords to args of function 'tf.transpose'
313:12: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
313:30: INFO: Added keywords to args of function 'tf.shape'
317:8: INFO: Added keywords to args of function 'tf.transpose'
325:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
325:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
326:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
326:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
327:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
327:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
328:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
328:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
329:6: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
329:6: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
330:6: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
330:6: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
331:24: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
331:24: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/posterior_bnn_sampling.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/posterior_bnn_sampling.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/variational_neural_bandit_model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/variational_neural_bandit_model.py'
--------------------------------------------------------------------------------

36:36: INFO: Renamed 'tf.log' to 'tf.math.log'
39:11: INFO: Added keywords to args of function 'tf.reduce_sum'
50:37: INFO: Renamed 'tf.log' to 'tf.math.log'
50:58: INFO: Renamed 'tf.log' to 'tf.math.log'
51:9: INFO: Added keywords to args of function 'tf.reduce_sum'
99:23: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
104:23: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
125:14: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
144:32: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
147:34: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
154:49: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
154:66: INFO: Added keywords to args of function 'tf.shape'
169:25: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
240:17: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
240:29: INFO: Added keywords to args of function 'tf.shape'
241:30: INFO: Added keywords to args of function 'tf.reduce_sum'
248:23: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
249:20: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
254:26: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
254:26: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
268:18: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
270:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
272:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
273:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
274:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
277:20: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
283:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

283:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
284:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
284:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
285:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
285:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
286:26: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
286:26: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
300:18: INFO: tf.train.inverse_time_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

300:18: INFO: Renamed 'tf.train.inverse_time_decay' to 'tf.compat.v1.train.inverse_time_decay'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/parameter_noise_sampling.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/parameter_noise_sampling.py'
--------------------------------------------------------------------------------

68:30: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
71:14: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
73:10: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/linear_full_posterior_sampling.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/linear_full_posterior_sampling.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/bf_variational_neural_bandit_model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/bf_variational_neural_bandit_model.py'
--------------------------------------------------------------------------------

35:6: ERROR: Using member tf.contrib.distributions in deprecated module tf.contrib. tf.contrib.distributions cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
36:6: ERROR: Using member tf.contrib.layers in deprecated module tf.contrib. tf.contrib.layers cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
43:11: INFO: Added keywords to args of function 'tf.reduce_sum'
99:23: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
104:23: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
125:14: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
144:32: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
147:34: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
154:49: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
154:66: INFO: Added keywords to args of function 'tf.shape'
169:25: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
202:27: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
203:36: INFO: Added keywords to args of function 'tf.size'
246:17: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
246:29: INFO: Added keywords to args of function 'tf.shape'
247:30: INFO: Added keywords to args of function 'tf.reduce_sum'
254:23: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
255:20: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
260:26: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
260:26: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
274:18: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
276:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
278:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
279:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
280:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
283:20: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
289:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

289:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
290:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
290:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
291:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
291:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
292:26: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
292:26: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
306:18: INFO: tf.train.inverse_time_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

306:18: INFO: Renamed 'tf.train.inverse_time_decay' to 'tf.compat.v1.train.inverse_time_decay'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/neural_bandit_model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/neural_bandit_model.py'
--------------------------------------------------------------------------------

55:9: ERROR: Using member tf.contrib.layers.fully_connected in deprecated module tf.contrib. tf.contrib.layers.fully_connected cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
59:47: WARNING: tf.contrib.layers.layer_norm requires manual check. (Manual edit required) `tf.contrib.layers.layer_norm` has been deprecated, and its implementation has been integrated with `tf.keras.layers.LayerNormalization` in TensorFlow 2.0. Note that, the default value of `epsilon` is changed to `1e-3` in the new API from `1e-12`, and this may introduce numerical differences. Please check the new API and use that instead.
59:47: ERROR: Using member tf.contrib.layers.layer_norm in deprecated module tf.contrib. tf.contrib.layers.layer_norm cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
61:28: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
61:28: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
65:11: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

74:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
74:45: INFO: Renamed 'tf.AUTO_REUSE' to 'tf.compat.v1.AUTO_REUSE'
80:15: INFO: Renamed 'tf.layers.dense' to 'tf.compat.v1.layers.dense'
83:29: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
83:29: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
101:18: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
103:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

103:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
105:27: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
108:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
114:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
120:23: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
127:20: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
129:20: INFO: Added keywords to args of function 'tf.reduce_sum'
132:20: INFO: tf.train.inverse_time_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

132:20: INFO: Renamed 'tf.train.inverse_time_decay' to 'tf.compat.v1.train.inverse_time_decay'
140:30: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
140:30: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
143:16: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
145:12: INFO: Added keywords to args of function 'tf.gradients'
152:20: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
176:18: INFO: tf.train.inverse_time_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

176:18: INFO: Renamed 'tf.train.inverse_time_decay' to 'tf.compat.v1.train.inverse_time_decay'
183:11: INFO: Renamed 'tf.train.RMSPropOptimizer' to 'tf.compat.v1.train.RMSPropOptimizer'
189:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

189:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
190:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
190:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
191:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
191:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
192:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
192:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
193:26: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
193:26: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/bootstrapped_bnn_sampling.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/bootstrapped_bnn_sampling.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/fixed_policy_sampling.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/algorithms/fixed_policy_sampling.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/data/synthetic_data_sampler.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/data/synthetic_data_sampler.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/data/data_sampler.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deep_contextual_bandits/bandits/data/data_sampler.py'
--------------------------------------------------------------------------------

111:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
147:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
182:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
222:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
270:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
315:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lm_1b/lm_1b_eval.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lm_1b/lm_1b_eval.py'
--------------------------------------------------------------------------------

28:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
30:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
42:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
45:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
47:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
48:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
51:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
53:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
56:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
59:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
62:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
64:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
86:9: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
88:11: INFO: Renamed 'tf.GraphDef' to 'tf.compat.v1.GraphDef'
91:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
114:11: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
114:29: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
229:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
230:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
246:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
247:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
286:9: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
287:6: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
308:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lm_1b/data_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lm_1b/data_utils.py'
--------------------------------------------------------------------------------

40:9: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
231:23: INFO: Renamed 'tf.gfile.Glob' to 'tf.io.gfile.glob'
232:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
247:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
248:9: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
261:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
262:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/sentiment_analysis/sentiment_model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/sentiment_analysis/sentiment_model.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/sentiment_analysis/sentiment_main.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/sentiment_analysis/sentiment_main.py'
--------------------------------------------------------------------------------

47:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
54:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/sentiment_analysis/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/sentiment_analysis/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/sentiment_analysis/data/util.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/sentiment_analysis/data/util.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/sentiment_analysis/data/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/sentiment_analysis/data/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/sentiment_analysis/data/imdb.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/sentiment_analysis/data/imdb.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/sentiment_analysis/data/dataset.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/sentiment_analysis/data/dataset.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/keypointnet/main.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/keypointnet/main.py'
--------------------------------------------------------------------------------

39:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
41:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
42:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
46:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
47:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
51:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
52:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
53:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
58:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
109:11: INFO: Added keywords to args of function 'tf.parse_single_example'
109:11: INFO: Renamed 'tf.parse_single_example' to 'tf.io.parse_single_example'
112:22: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
113:22: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
114:21: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
115:22: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
116:21: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
117:22: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
120:19: INFO: Renamed 'tf.div' to 'tf.compat.v1.div'
120:26: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
121:19: INFO: Renamed 'tf.div' to 'tf.compat.v1.div'
121:26: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
129:18: INFO: Added keywords to args of function 'tf.convert_to_tensor'
130:18: INFO: Added keywords to args of function 'tf.convert_to_tensor'
140:11: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

200:9: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
200:28: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
219:10: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
219:27: INFO: Added keywords to args of function 'tf.shape'
220:10: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
220:27: INFO: Added keywords to args of function 'tf.shape'
223:9: INFO: Added keywords to args of function 'tf.reduce_sum'
224:9: INFO: Added keywords to args of function 'tf.reduce_sum'
229:31: INFO: Renamed 'tf.matrix_diag' to 'tf.linalg.diag'
230:12: INFO: Renamed 'tf.svd' to 'tf.linalg.svd'
232:6: INFO: Renamed 'tf.matrix_determinant' to 'tf.linalg.det'
255:13: INFO: Added keywords to args of function 'tf.reduce_sum'
258:9: INFO: Added keywords to args of function 'tf.reduce_mean'
259:12: INFO: Added keywords to args of function 'tf.reduce_mean'
273:11: INFO: Added keywords to args of function 'tf.shape'
276:48: INFO: Added keywords to args of function 'tf.shape'
280:11: INFO: Added keywords to args of function 'tf.reduce_sum'
282:10: INFO: Added keywords to args of function 'tf.reduce_sum'
282:60: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
300:7: INFO: Added keywords to args of function 'tf.reduce_sum'
301:9: INFO: Added keywords to args of function 'tf.reduce_mean'
319:7: INFO: Added keywords to args of function 'tf.shape'
323:7: INFO: Added keywords to args of function 'tf.shape'
326:9: INFO: Added keywords to args of function 'tf.reduce_sum'
329:9: INFO: Added keywords to args of function 'tf.reduce_mean'
329:24: INFO: Added keywords to args of function 'tf.reduce_sum'
369:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
374:11: INFO: Added keywords to args of function 'tf.transpose'
382:9: INFO: Added keywords to args of function 'tf.reduce_sum'
383:9: INFO: Added keywords to args of function 'tf.reduce_sum'
453:9: INFO: Added keywords to args of function 'tf.transpose'
454:6: INFO: Added keywords to args of function 'tf.transpose'
463:28: INFO: Added keywords to args of function 'tf.reduce_sum'
466:7: INFO: Added keywords to args of function 'tf.reduce_sum'
467:7: INFO: Added keywords to args of function 'tf.reduce_sum'
470:9: INFO: Added keywords to args of function 'tf.reduce_sum'
471:9: INFO: Added keywords to args of function 'tf.reduce_mean'
471:25: INFO: Renamed 'tf.log' to 'tf.math.log'
473:6: INFO: Added keywords to args of function 'tf.reduce_sum'
490:11: INFO: Added keywords to args of function 'tf.transpose'
507:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
509:15: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
509:51: INFO: Renamed 'tf.train.get_global_step' to 'tf.compat.v1.train.get_global_step'
524:11: INFO: Added keywords to args of function 'tf.shape'
532:17: INFO: tf.losses.mean_squared_error requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
532:17: INFO: Renamed 'tf.losses.mean_squared_error' to 'tf.compat.v1.losses.mean_squared_error'
548:7: INFO: Added keywords to args of function 'tf.shape'
548:24: INFO: Added keywords to args of function 'tf.shape'
573:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
574:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
574:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
575:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
575:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
577:6: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
577:6: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
579:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
580:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
580:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
581:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
581:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
582:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
582:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
583:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
583:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
584:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
584:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
585:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
585:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
586:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
586:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
587:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
587:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
598:19: INFO: tf.metrics.mean requires manual check. tf.metrics have been replaced with object oriented versions in TF 2.0 and after. The metric function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
598:19: INFO: Renamed 'tf.metrics.mean' to 'tf.compat.v1.metrics.mean'
599:26: INFO: tf.metrics.mean requires manual check. tf.metrics have been replaced with object oriented versions in TF 2.0 and after. The metric function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
599:26: INFO: Renamed 'tf.metrics.mean' to 'tf.compat.v1.metrics.mean'
600:26: INFO: tf.metrics.mean requires manual check. tf.metrics have been replaced with object oriented versions in TF 2.0 and after. The metric function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
600:26: INFO: Renamed 'tf.metrics.mean' to 'tf.compat.v1.metrics.mean'
611:8: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
613:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
621:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
622:10: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
649:12: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
697:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/keypointnet/utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/keypointnet/utils.py'
--------------------------------------------------------------------------------

35:19: INFO: Renamed 'tf.train.SessionRunHook' to 'tf.estimator.SessionRunHook'
49:12: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
50:11: INFO: Renamed 'tf.train.SessionRunArgs' to 'tf.estimator.SessionRunArgs'
54:35: INFO: Renamed 'tf.train.get_global_step' to 'tf.compat.v1.train.get_global_step'
104:4: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
112:20: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
121:20: INFO: Renamed 'tf.train.SyncReplicasOptimizer' to 'tf.compat.v1.train.SyncReplicasOptimizer'
130:18: ERROR: Using member tf.contrib.estimator.clip_gradients_by_norm in deprecated module tf.contrib. tf.contrib.estimator.clip_gradients_by_norm cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/keypointnet/tools/render.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/keypointnet/tools/render.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/keypointnet/tools/gen_tfrecords.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/keypointnet/tools/gen_tfrecords.py'
--------------------------------------------------------------------------------

31:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
32:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
33:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
51:7: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
53:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
54:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
58:11: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
61:14: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
99:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/seq2species/input.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/seq2species/input.py'
--------------------------------------------------------------------------------

52:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
94:28: ERROR: Using member tf.contrib.lookup.index_table_from_tensor in deprecated module tf.contrib. tf.contrib.lookup.index_table_from_tensor cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
97:16: ERROR: Using member tf.contrib.lookup.index_table_from_tensor in deprecated module tf.contrib. tf.contrib.lookup.index_table_from_tensor cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
140:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
141:13: INFO: Renamed 'tf.string_split' to 'tf.compat.v1.string_split'
158:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
179:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
180:35: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
182:32: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
183:17: INFO: Added keywords to args of function 'tf.parse_single_example'
183:17: INFO: Renamed 'tf.parse_single_example' to 'tf.io.parse_single_example'
186:24: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
320:15: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

322:4: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
322:25: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/seq2species/seq2label_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/seq2species/seq2label_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/seq2species/run_training.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/seq2species/run_training.py'
--------------------------------------------------------------------------------

139:13: INFO: Renamed 'tf.train.Scaffold' to 'tf.compat.v1.train.Scaffold'
140:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
141:10: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
144:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
146:7: INFO: Renamed 'tf.train.MonitoredTrainingSession' to 'tf.compat.v1.train.MonitoredTrainingSession'
221:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
267:2: INFO: Renamed 'tf.reset_default_graph' to 'tf.compat.v1.reset_default_graph'
277:17: INFO: Renamed 'tf.train.replica_device_setter' to 'tf.compat.v1.train.replica_device_setter'
293:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/seq2species/configuration.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/seq2species/configuration.py'
--------------------------------------------------------------------------------

46:12: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/seq2species/run_training_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/seq2species/run_training_test.py'
--------------------------------------------------------------------------------

75:9: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/seq2species/test_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/seq2species/test_utils.py'
--------------------------------------------------------------------------------

69:7: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
104:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/seq2species/build_model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/seq2species/build_model.py'
--------------------------------------------------------------------------------

159:13: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
159:13: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
166:13: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
166:13: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
183:11: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
183:11: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
186:20: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
186:20: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
197:11: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
197:11: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
200:20: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
200:20: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
227:25: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
227:25: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
232:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
233:31: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
234:27: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
249:25: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
249:25: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
278:13: INFO: Added keywords to args of function 'tf.nn.conv2d'
278:13: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
290:11: INFO: Added keywords to args of function 'tf.nn.separable_conv2d'
311:13: INFO: Added keywords to args of function 'tf.reduce_max'
313:13: INFO: Added keywords to args of function 'tf.reduce_sum'
314:33: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
314:45: INFO: Added keywords to args of function 'tf.shape'
328:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
342:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
344:15: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

370:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
383:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
408:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
411:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
419:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
436:44: INFO: Added keywords to args of function 'tf.reduce_mean'
438:38: INFO: Added keywords to args of function 'tf.argmax'
439:35: INFO: Added keywords to args of function 'tf.reduce_mean'
440:14: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
444:31: INFO: Added keywords to args of function 'tf.reduce_mean'
455:24: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
459:25: INFO: tf.train.exponential_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

459:25: INFO: Renamed 'tf.train.exponential_decay' to 'tf.compat.v1.train.exponential_decay'
466:12: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
468:12: INFO: Renamed 'tf.train.MomentumOptimizer' to 'tf.compat.v1.train.MomentumOptimizer'
471:12: INFO: Renamed 'tf.contrib.tpu.CrossShardOptimizer' to 'tf.compat.v1.tpu.CrossShardOptimizer'
476:33: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
476:51: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
481:18: INFO: Renamed 'tf.global_norm' to 'tf.linalg.global_norm'
482:19: INFO: Renamed 'tf.global_norm' to 'tf.linalg.global_norm'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/seq2species/protos/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/seq2species/protos/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/data_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/data_utils.py'
--------------------------------------------------------------------------------

57:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
59:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
172:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
179:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
243:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/train.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/train.py'
--------------------------------------------------------------------------------

35:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
37:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
39:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
40:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
42:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
44:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
45:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
46:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
49:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
52:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
53:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
54:0: ERROR: Using member tf.flags.DEFINE_bool in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
171:11: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
172:13: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
174:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
228:23: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
242:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/model.py'
--------------------------------------------------------------------------------

27:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
50:23: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
50:23: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
51:23: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
51:23: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
65:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
65:20: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
68:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
68:19: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
70:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
70:21: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
73:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
73:20: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
76:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
76:20: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
78:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
78:19: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
80:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
80:21: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
82:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
82:20: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
86:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
86:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
89:17: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
89:17: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
95:17: INFO: Added keywords to args of function 'tf.shape'
97:12: INFO: Added keywords to args of function 'tf.nn.conv2d'
97:12: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
100:12: INFO: Added keywords to args of function 'tf.nn.conv2d'
100:12: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
104:12: INFO: Added keywords to args of function 'tf.nn.max_pool'
104:12: INFO: Renamed keyword argument for tf.nn.max_pool from value to input
104:12: INFO: Renamed 'tf.nn.max_pool' to 'tf.nn.max_pool2d'
107:12: INFO: Added keywords to args of function 'tf.nn.conv2d'
107:12: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
110:12: INFO: Added keywords to args of function 'tf.nn.conv2d'
110:12: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
114:12: INFO: Added keywords to args of function 'tf.nn.max_pool'
114:12: INFO: Renamed keyword argument for tf.nn.max_pool from value to input
114:12: INFO: Renamed 'tf.nn.max_pool' to 'tf.nn.max_pool2d'
140:23: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
155:19: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

173:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
174:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
182:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
185:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
190:13: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
191:16: INFO: Added keywords to args of function 'tf.gradients'
197:11: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/memory.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learning_to_remember_rare_events/memory.py'
--------------------------------------------------------------------------------

48:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
48:20: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
50:20: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
50:20: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
52:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
52:20: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
54:20: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
54:20: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
56:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
56:19: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
58:20: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
58:20: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
59:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
59:22: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
61:20: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
61:20: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
64:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
64:22: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
66:20: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
66:20: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
80:11: INFO: Renamed 'tf.variables_initializer' to 'tf.compat.v1.variables_initializer'
111:20: INFO: Renamed 'tf.scatter_update' to 'tf.compat.v1.scatter_update'
114:18: INFO: Renamed 'tf.scatter_update' to 'tf.compat.v1.scatter_update'
116:18: INFO: Renamed 'tf.scatter_update' to 'tf.compat.v1.scatter_update'
120:23: INFO: Renamed 'tf.scatter_update' to 'tf.compat.v1.scatter_update'
144:17: INFO: Added keywords to args of function 'tf.shape'
149:53: INFO: Renamed keyword argument for tf.nn.l2_normalize from dim to axis
158:15: INFO: Added keywords to args of function 'tf.shape'
177:23: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
178:8: INFO: Added keywords to args of function 'tf.argmax'
192:20: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
208:12: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
208:38: INFO: Added keywords to args of function 'tf.reduce_sum'
213:44: INFO: Added keywords to args of function 'tf.reduce_sum'
230:60: INFO: Renamed keyword argument for tf.nn.l2_normalize from dim to axis
232:40: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
238:17: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
242:17: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
245:17: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
253:16: INFO: Added keywords to args of function 'tf.cond'
260:25: INFO: Added keywords to args of function 'tf.reduce_mean'
287:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
287:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
290:24: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
290:24: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
295:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
295:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
298:24: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
298:24: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
313:11: INFO: Renamed 'tf.variables_initializer' to 'tf.compat.v1.variables_initializer'
330:8: INFO: Added keywords to args of function 'tf.reduce_sum'
331:12: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
378:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
387:17: INFO: Renamed 'tf.scatter_mul' to 'tf.compat.v1.scatter_mul'
389:19: INFO: Renamed 'tf.scatter_add' to 'tf.compat.v1.scatter_add'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/fivo/run_fivo.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/fivo/run_fivo.py'
--------------------------------------------------------------------------------

29:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
32:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
35:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
37:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
40:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
42:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
47:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
49:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
52:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
54:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
56:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
61:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
64:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
67:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
69:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
71:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
73:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
76:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
78:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
86:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
88:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
90:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
92:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
96:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
101:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
103:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
106:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
111:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
113:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
115:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
122:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
122:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
142:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/bounds.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/fivo/fivo/bounds.py'
--------------------------------------------------------------------------------

146:15: INFO: Added keywords to args of function 'tf.shape'
197:15: INFO: Added keywords to args of function 'tf.shape'
198:16: INFO: Added keywords to args of function 'tf.reduce_max'
237:13: INFO: Renamed 'tf.log' to 'tf.math.log'
238:13: INFO: Renamed 'tf.log' to 'tf.math.log'
242:16: INFO: Added keywords to args of function 'tf.reduce_sum'
245:28: INFO: Added keywords to args of function 'tf.reduce_sum'
249:12: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
252:23: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
268:23: INFO: Added keywords to args of function 'tf.reduce_logsumexp'
269:31: INFO: Renamed 'tf.log' to 'tf.math.log'
269:38: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
271:21: INFO: Added keywords to args of function 'tf.cond'
281:11: INFO: Added keywords to args of function 'tf.cond'
285:23: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
286:8: INFO: Renamed 'tf.is_inf' to 'tf.math.is_inf'
290:17: INFO: Added keywords to args of function 'tf.reduce_mean'
296:24: INFO: Added keywords to args of function 'tf.reduce_mean'
313:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
313:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
314:20: INFO: Added keywords to args of function 'tf.reduce_mean'
314:50: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
315:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
315:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
316:20: INFO: Added keywords to args of function 'tf.reduce_mean'
316:35: INFO: Added keywords to args of function 'tf.reduce_mean'
316:72: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/ghmm_runners.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/fivo/fivo/ghmm_runners.py'
--------------------------------------------------------------------------------

43:19: INFO: Renamed 'tf.train.LoggingTensorHook' to 'tf.estimator.LoggingTensorHook'
98:15: INFO: Added keywords to args of function 'tf.reduce_mean'
98:43: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
101:20: INFO: Added keywords to args of function 'tf.reduce_mean'
101:53: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
103:16: INFO: Added keywords to args of function 'tf.reduce_mean'
103:42: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
104:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
104:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
105:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
105:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
106:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
106:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
111:18: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
126:10: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
127:49: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
133:6: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
137:9: INFO: Renamed 'tf.train.MonitoredTrainingSession' to 'tf.compat.v1.train.MonitoredTrainingSession'
175:31: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
196:22: INFO: Added keywords to args of function 'tf.reduce_mean'
197:43: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
204:6: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
207:9: INFO: Renamed 'tf.train.SingularMonitoredSession' to 'tf.compat.v1.train.SingularMonitoredSession'
224:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
226:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
227:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
228:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
229:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
231:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
232:13: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
233:8: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
234:11: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
235:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/smc.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/fivo/fivo/smc.py'
--------------------------------------------------------------------------------

30:18: INFO: Added keywords to args of function 'tf.shape'
32:16: INFO: Added keywords to args of function 'tf.reduce_logsumexp'
33:14: INFO: Added keywords to args of function 'tf.reduce_logsumexp'
35:20: INFO: Renamed 'tf.log' to 'tf.math.log'
35:27: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
40:15: INFO: Added keywords to args of function 'tf.shape'
46:15: INFO: Added keywords to args of function 'tf.shape'
71:26: INFO: Added keywords to args of function 'tf.transpose'
72:20: ERROR: Using member tf.contrib.distributions.Categorical in deprecated module tf.contrib. tf.contrib.distributions.Categorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
113:11: INFO: Added keywords to args of function 'tf.transpose'
115:21: INFO: Added keywords to args of function 'tf.transpose'
122:22: INFO: Added keywords to args of function 'tf.transpose'
150:26: INFO: Added keywords to args of function 'tf.transpose'
151:20: ERROR: Using member tf.contrib.distributions.RelaxedOneHotCategorical in deprecated module tf.contrib. tf.contrib.distributions.RelaxedOneHotCategorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
238:15: INFO: Added keywords to args of function 'tf.shape'
241:18: INFO: Added keywords to args of function 'tf.reduce_max'
242:13: INFO: Added keywords to args of function 'tf.transpose'
289:18: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
301:30: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
311:23: INFO: Added keywords to args of function 'tf.reduce_logsumexp'
312:35: INFO: Renamed 'tf.log' to 'tf.math.log'
312:42: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
314:21: INFO: Added keywords to args of function 'tf.cond'
327:38: INFO: Added keywords to args of function 'tf.while_loop'
335:16: INFO: Added keywords to args of function 'tf.transpose'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/nested_utils_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/fivo/fivo/nested_utils_test.py'
--------------------------------------------------------------------------------

24:7: ERROR: Using member tf.contrib.framework.nest in deprecated module tf.contrib. tf.contrib.framework.nest cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/fivo/fivo/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/runners_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/fivo/fivo/runners_test.py'
--------------------------------------------------------------------------------

30:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
83:33: INFO: Renamed 'tf.test.get_temp_dir' to 'tf.compat.v1.test.get_temp_dir'
97:13: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/nested_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/fivo/fivo/nested_utils.py'
--------------------------------------------------------------------------------

87:12: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/runners.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/fivo/fivo/runners.py'
--------------------------------------------------------------------------------

67:26: INFO: Renamed 'tf.log' to 'tf.math.log'
131:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
158:19: INFO: Renamed 'tf.train.LoggingTensorHook' to 'tf.estimator.LoggingTensorHook'
208:15: INFO: Added keywords to args of function 'tf.reduce_mean'
208:43: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
209:17: INFO: Added keywords to args of function 'tf.reduce_mean'
211:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
211:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
212:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
212:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
221:18: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
223:10: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
224:49: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
228:11: INFO: Renamed 'tf.train.replica_device_setter' to 'tf.compat.v1.train.replica_device_setter'
230:27: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
235:11: INFO: Renamed 'tf.train.MonitoredTrainingSession' to 'tf.compat.v1.train.MonitoredTrainingSession'
247:12: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
282:18: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
300:14: INFO: Added keywords to args of function 'tf.reduce_sum'
301:14: INFO: Added keywords to args of function 'tf.reduce_sum'
302:14: INFO: Added keywords to args of function 'tf.reduce_sum'
303:17: INFO: Added keywords to args of function 'tf.shape'
304:25: INFO: Added keywords to args of function 'tf.reduce_sum'
357:14: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
358:13: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
371:27: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
374:21: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
374:21: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
376:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
377:9: INFO: Renamed 'tf.train.SingularMonitoredSession' to 'tf.compat.v1.train.SingularMonitoredSession'
380:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
384:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
386:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
426:25: INFO: Added keywords to args of function 'tf.while_loop'
477:6: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
483:11: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
484:6: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
485:9: INFO: Renamed 'tf.train.SingularMonitoredSession' to 'tf.compat.v1.train.SingularMonitoredSession'
488:11: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
489:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/ghmm_runners_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/fivo/fivo/ghmm_runners_test.py'
--------------------------------------------------------------------------------

73:8: INFO: Renamed 'tf.test.get_temp_dir' to 'tf.compat.v1.test.get_temp_dir'
98:8: INFO: Renamed 'tf.test.get_temp_dir' to 'tf.compat.v1.test.get_temp_dir'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/test_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/fivo/fivo/test_utils.py'
--------------------------------------------------------------------------------

67:23: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

68:23: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
68:23: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
80:11: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
82:12: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
126:23: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

127:23: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
127:23: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
139:11: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
141:12: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/smc_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/fivo/fivo/smc_test.py'
--------------------------------------------------------------------------------

40:17: INFO: Added keywords to args of function 'tf.shape'
53:4: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
57:20: INFO: Added keywords to args of function 'tf.convert_to_tensor'
82:4: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
86:20: INFO: Added keywords to args of function 'tf.convert_to_tensor'
114:4: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
118:20: INFO: Added keywords to args of function 'tf.convert_to_tensor'
142:4: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
146:20: INFO: Added keywords to args of function 'tf.convert_to_tensor'
180:4: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
184:20: INFO: Added keywords to args of function 'tf.convert_to_tensor'
209:4: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
215:20: INFO: Added keywords to args of function 'tf.convert_to_tensor'
216:15: INFO: Added keywords to args of function 'tf.convert_to_tensor'
225:4: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
230:25: INFO: Added keywords to args of function 'tf.convert_to_tensor'
232:15: INFO: Added keywords to args of function 'tf.convert_to_tensor'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/bounds_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/fivo/fivo/bounds_test.py'
--------------------------------------------------------------------------------

33:4: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
38:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
44:4: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
49:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
71:4: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
76:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
107:4: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
113:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
144:4: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
151:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/models/vrnn.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/fivo/fivo/models/vrnn.py'
--------------------------------------------------------------------------------

154:39: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
212:22: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
349:23: INFO: Added keywords to args of function 'tf.reduce_max'
356:32: INFO: Added keywords to args of function 'tf.reverse_sequence'
359:27: INFO: Renamed 'tf.nn.dynamic_rnn' to 'tf.compat.v1.nn.dynamic_rnn'
363:24: INFO: Added keywords to args of function 'tf.reverse_sequence'
398:11: INFO: Added keywords to args of function 'tf.reduce_sum'
424:24: INFO: Added keywords to args of function 'tf.reduce_sum'
425:15: INFO: Added keywords to args of function 'tf.reduce_sum'
426:15: INFO: Added keywords to args of function 'tf.reduce_sum'
429:19: INFO: Added keywords to args of function 'tf.cond'
433:14: INFO: Added keywords to args of function 'tf.cond'
438:15: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
446:30: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

447:30: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
447:30: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
565:13: INFO: Renamed 'tf.nn.rnn_cell.LSTMCell' to 'tf.compat.v1.nn.rnn_cell.LSTMCell'
567:17: INFO: Renamed 'tf.nn.rnn_cell.LSTMCell' to 'tf.compat.v1.nn.rnn_cell.LSTMCell'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/models/base.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/fivo/fivo/models/base.py'
--------------------------------------------------------------------------------

27:6: ERROR: Using member tf.contrib.distributions in deprecated module tf.contrib. tf.contrib.distributions cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
63:23: INFO: Added keywords to args of function 'tf.reduce_max'
84:29: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

85:29: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
85:29: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
139:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
185:11: ERROR: Using member tf.contrib.distributions.Bernoulli in deprecated module tf.contrib. tf.contrib.distributions.Bernoulli cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
281:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
281:14: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
330:16: INFO: Added keywords to args of function 'tf.shape'
342:15: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/models/srnn_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/fivo/fivo/models/srnn_test.py'
--------------------------------------------------------------------------------

46:4: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
54:48: INFO: Added keywords to args of function 'tf.convert_to_tensor'
56:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
83:4: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
92:48: INFO: Added keywords to args of function 'tf.convert_to_tensor'
94:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/models/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/fivo/fivo/models/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/models/vrnn_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/fivo/fivo/models/vrnn_test.py'
--------------------------------------------------------------------------------

48:4: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
56:48: INFO: Added keywords to args of function 'tf.convert_to_tensor'
58:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
102:4: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
111:48: INFO: Added keywords to args of function 'tf.convert_to_tensor'
113:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/models/ghmm.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/fivo/fivo/models/ghmm.py'
--------------------------------------------------------------------------------

27:6: ERROR: Using member tf.contrib.distributions in deprecated module tf.contrib. tf.contrib.distributions cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
91:14: INFO: Added keywords to args of function 'tf.convert_to_tensor'
98:13: INFO: Added keywords to args of function 'tf.shape'
143:17: INFO: Added keywords to args of function 'tf.reduce_prod'
150:52: INFO: Renamed 'tf.diag' to 'tf.linalg.tensor_diag'
169:17: INFO: Added keywords to args of function 'tf.shape'
172:10: INFO: Added keywords to args of function 'tf.cond'
186:17: INFO: Added keywords to args of function 'tf.shape'
204:13: INFO: Added keywords to args of function 'tf.convert_to_tensor'
205:12: INFO: Added keywords to args of function 'tf.convert_to_tensor'
206:17: INFO: Added keywords to args of function 'tf.shape'
211:25: INFO: Added keywords to args of function 'tf.cond'
233:9: INFO: Added keywords to args of function 'tf.convert_to_tensor'
234:13: INFO: Added keywords to args of function 'tf.convert_to_tensor'
235:17: INFO: Added keywords to args of function 'tf.shape'
236:27: INFO: Added keywords to args of function 'tf.cond'
259:17: INFO: Added keywords to args of function 'tf.shape'
269:12: INFO: Added keywords to args of function 'tf.cond'
272:12: INFO: Added keywords to args of function 'tf.cond'
281:17: INFO: Added keywords to args of function 'tf.shape'
282:13: INFO: Added keywords to args of function 'tf.shape'
307:20: INFO: Added keywords to args of function 'tf.cond'
329:11: INFO: Added keywords to args of function 'tf.while_loop'
343:13: INFO: Added keywords to args of function 'tf.convert_to_tensor'
361:34: INFO: Added keywords to args of function 'tf.transpose'
435:22: INFO: Added keywords to args of function 'tf.shape'
444:18: INFO: Added keywords to args of function 'tf.shape'
464:27: INFO: Added keywords to args of function 'tf.cond'
473:13: INFO: Added keywords to args of function 'tf.cond'
480:13: INFO: Added keywords to args of function 'tf.cond'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/models/srnn.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/fivo/fivo/models/srnn.py'
--------------------------------------------------------------------------------

152:35: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
211:22: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
347:23: INFO: Added keywords to args of function 'tf.reduce_max'
353:17: INFO: Renamed 'tf.nn.dynamic_rnn' to 'tf.compat.v1.nn.dynamic_rnn'
362:37: INFO: Added keywords to args of function 'tf.reverse_sequence'
365:27: INFO: Renamed 'tf.nn.dynamic_rnn' to 'tf.compat.v1.nn.dynamic_rnn'
370:24: INFO: Added keywords to args of function 'tf.reverse_sequence'
410:11: INFO: Added keywords to args of function 'tf.reduce_sum'
433:24: INFO: Added keywords to args of function 'tf.reduce_sum'
434:15: INFO: Added keywords to args of function 'tf.reduce_sum'
435:15: INFO: Added keywords to args of function 'tf.reduce_sum'
438:19: INFO: Added keywords to args of function 'tf.cond'
442:14: INFO: Added keywords to args of function 'tf.cond'
447:15: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
453:34: INFO: Added keywords to args of function 'tf.shape'
461:30: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

462:30: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
462:30: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
580:13: INFO: Renamed 'tf.nn.rnn_cell.LSTMCell' to 'tf.compat.v1.nn.rnn_cell.LSTMCell'
582:17: INFO: Renamed 'tf.nn.rnn_cell.LSTMCell' to 'tf.compat.v1.nn.rnn_cell.LSTMCell'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/models/ghmm_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/fivo/fivo/models/ghmm_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/data/datasets_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/fivo/fivo/data/datasets_test.py'
--------------------------------------------------------------------------------

30:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
97:24: INFO: Renamed 'tf.test.get_temp_dir' to 'tf.compat.v1.test.get_temp_dir'
155:24: INFO: Renamed 'tf.test.get_temp_dir' to 'tf.compat.v1.test.get_temp_dir'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/data/create_timit_dataset.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/fivo/fivo/data/create_timit_dataset.py'
--------------------------------------------------------------------------------

30:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
32:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
34:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
38:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
39:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
41:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
113:7: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
180:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/data/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/fivo/fivo/data/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/data/datasets.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/fivo/fivo/data/datasets.py'
--------------------------------------------------------------------------------

105:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
129:11: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
129:23: INFO: Added keywords to args of function 'tf.transpose'
130:14: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
137:13: INFO: Added keywords to args of function 'tf.pad'
139:29: INFO: Added keywords to args of function 'tf.transpose'
147:8: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

185:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
217:11: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
217:23: INFO: Added keywords to args of function 'tf.transpose'
218:14: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
225:13: INFO: Added keywords to args of function 'tf.pad'
228:8: INFO: Added keywords to args of function 'tf.transpose'
236:8: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

279:14: INFO: Renamed 'tf.decode_raw' to 'tf.io.decode_raw'
281:13: INFO: Added keywords to args of function 'tf.shape'
297:11: INFO: Added keywords to args of function 'tf.transpose'
298:14: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
302:13: INFO: Added keywords to args of function 'tf.pad'
305:8: INFO: Added keywords to args of function 'tf.transpose'
312:8: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

447:8: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

451:17: INFO: Added keywords to args of function 'tf.transpose'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/fivo/fivo/data/calculate_pianoroll_mean.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/fivo/fivo/data/calculate_pianoroll_mean.py'
--------------------------------------------------------------------------------

35:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
37:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
40:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
42:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
52:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
65:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/bounds.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/fivo/experimental/bounds.py'
--------------------------------------------------------------------------------

26:29: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
47:18: INFO: Added keywords to args of function 'tf.shape'
62:20: ERROR: Using member tf.contrib.distributions.Categorical in deprecated module tf.contrib. tf.contrib.distributions.Categorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
63:17: INFO: Added keywords to args of function 'tf.transpose'
66:23: INFO: Added keywords to args of function 'tf.reduce_mean'
67:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
67:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
70:15: INFO: Added keywords to args of function 'tf.reduce_logsumexp'
71:15: INFO: Renamed 'tf.log' to 'tf.math.log'
72:10: INFO: Added keywords to args of function 'tf.reduce_mean'
96:16: INFO: Added keywords to args of function 'tf.convert_to_tensor'
97:12: INFO: Added keywords to args of function 'tf.convert_to_tensor'
99:26: INFO: Added keywords to args of function 'tf.transpose'
100:20: ERROR: Using member tf.contrib.distributions.Categorical in deprecated module tf.contrib. tf.contrib.distributions.Categorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
129:16: INFO: Added keywords to args of function 'tf.convert_to_tensor'
130:12: INFO: Added keywords to args of function 'tf.convert_to_tensor'
132:16: INFO: Added keywords to args of function 'tf.transpose'
147:20: ERROR: Using member tf.contrib.distributions.Categorical in deprecated module tf.contrib. tf.contrib.distributions.Categorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
155:14: INFO: Added keywords to args of function 'tf.transpose'
156:14: INFO: Added keywords to args of function 'tf.transpose'
184:16: INFO: Added keywords to args of function 'tf.convert_to_tensor'
185:12: INFO: Added keywords to args of function 'tf.convert_to_tensor'
187:16: INFO: Added keywords to args of function 'tf.transpose'
202:20: ERROR: Using member tf.contrib.distributions.Categorical in deprecated module tf.contrib. tf.contrib.distributions.Categorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
206:6: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
208:31: INFO: Added keywords to args of function 'tf.reduce_sum'
208:45: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
211:14: INFO: Added keywords to args of function 'tf.transpose'
212:14: INFO: Added keywords to args of function 'tf.transpose'
238:12: INFO: Added keywords to args of function 'tf.reduce_max'
240:6: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
240:15: INFO: Renamed 'tf.is_finite' to 'tf.math.is_finite'
243:12: INFO: Renamed 'tf.log' to 'tf.math.log'
266:16: INFO: Added keywords to args of function 'tf.convert_to_tensor'
267:12: INFO: Added keywords to args of function 'tf.convert_to_tensor'
271:26: INFO: Added keywords to args of function 'tf.transpose'
272:20: ERROR: Using member tf.contrib.distributions.RelaxedOneHotCategorical in deprecated module tf.contrib. tf.contrib.distributions.RelaxedOneHotCategorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
283:28: INFO: Added keywords to args of function 'tf.argmax'
298:18: INFO: Added keywords to args of function 'tf.transpose'
304:12: INFO: Added keywords to args of function 'tf.transpose'
311:28: INFO: Added keywords to args of function 'tf.transpose'
314:13: ERROR: Using member tf.contrib.distributions.Categorical in deprecated module tf.contrib. tf.contrib.distributions.Categorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
361:26: INFO: Added keywords to args of function 'tf.shape'
449:28: INFO: Added keywords to args of function 'tf.reduce_sum'
462:28: INFO: Added keywords to args of function 'tf.reduce_sum'
477:34: INFO: Added keywords to args of function 'tf.reduce_sum'
486:10: INFO: Added keywords to args of function 'tf.reduce_logsumexp'
486:56: INFO: Renamed 'tf.log' to 'tf.math.log'
494:18: INFO: Added keywords to args of function 'tf.reduce_logsumexp'
495:18: INFO: Renamed 'tf.log' to 'tf.math.log'
498:16: INFO: Added keywords to args of function 'tf.reduce_sum'
512:24: INFO: Added keywords to args of function 'tf.reduce_mean'
523:23: INFO: Added keywords to args of function 'tf.reduce_sum'
525:33: INFO: Added keywords to args of function 'tf.reduce_mean'
526:40: INFO: Added keywords to args of function 'tf.reduce_mean'
528:33: INFO: Added keywords to args of function 'tf.reduce_mean'
545:26: INFO: Added keywords to args of function 'tf.shape'
580:15: INFO: Renamed 'tf.log' to 'tf.math.log'
581:15: INFO: Renamed 'tf.log' to 'tf.math.log'
583:18: INFO: Added keywords to args of function 'tf.reduce_sum'
597:28: INFO: Added keywords to args of function 'tf.reduce_sum'
624:10: INFO: Added keywords to args of function 'tf.reduce_logsumexp'
624:56: INFO: Renamed 'tf.log' to 'tf.math.log'
636:18: INFO: Added keywords to args of function 'tf.reduce_logsumexp'
637:18: INFO: Renamed 'tf.log' to 'tf.math.log'
640:16: INFO: Added keywords to args of function 'tf.reduce_sum'
656:15: INFO: Added keywords to args of function 'tf.reduce_mean'
658:16: INFO: Added keywords to args of function 'tf.reduce_mean'
660:17: INFO: Added keywords to args of function 'tf.reduce_mean'
661:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
661:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
663:9: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
664:36: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
665:36: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
667:6: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
670:31: INFO: Added keywords to args of function 'tf.reduce_mean'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/models.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/fivo/experimental/models.py'
--------------------------------------------------------------------------------

55:18: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
55:18: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
55:45: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
55:45: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
58:18: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
58:18: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
59:18: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
59:18: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
63:12: INFO: Renamed 'tf.get_collection_ref' to 'tf.compat.v1.get_collection_ref'
77:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
77:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
81:25: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
82:24: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
82:24: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
87:17: INFO: Added keywords to args of function 'tf.shape'
91:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
96:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
96:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
98:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
98:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
99:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
99:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
101:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
101:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
107:17: INFO: Added keywords to args of function 'tf.shape'
111:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
116:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
116:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
118:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
118:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
119:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
119:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
125:17: INFO: Added keywords to args of function 'tf.shape'
129:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
134:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
134:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
136:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
136:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
137:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
137:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
156:28: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
156:28: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
158:28: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
158:28: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
161:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
161:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
165:25: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
170:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
170:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
174:25: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
175:24: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
175:24: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
180:17: INFO: Added keywords to args of function 'tf.shape'
184:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
189:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
189:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
191:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
191:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
206:25: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
206:25: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
207:25: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
207:25: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
212:12: INFO: Renamed 'tf.get_collection_ref' to 'tf.compat.v1.get_collection_ref'
226:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
226:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
230:25: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
232:24: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
232:24: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
237:17: INFO: Added keywords to args of function 'tf.shape'
241:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
246:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
246:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
247:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
247:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
269:22: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
269:22: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
271:22: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
271:22: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
274:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
274:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
279:25: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
294:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
300:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
303:17: INFO: Added keywords to args of function 'tf.shape'
304:17: INFO: Added keywords to args of function 'tf.reduce_sum'
306:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
308:11: INFO: Added keywords to args of function 'tf.reduce_mean'
308:26: INFO: Added keywords to args of function 'tf.reduce_sum'
312:17: INFO: Added keywords to args of function 'tf.shape'
317:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
324:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
337:31: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
351:17: INFO: Added keywords to args of function 'tf.shape'
355:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
358:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
361:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
402:22: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
402:22: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
404:22: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
404:22: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
407:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
407:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
412:25: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
429:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
435:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
438:17: INFO: Added keywords to args of function 'tf.shape'
439:24: INFO: Added keywords to args of function 'tf.reduce_sum'
443:13: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
446:13: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
449:17: INFO: Added keywords to args of function 'tf.convert_to_tensor'
451:26: ERROR: Using member tf.contrib.distributions.Categorical in deprecated module tf.contrib. tf.contrib.distributions.Categorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
452:14: ERROR: Using member tf.contrib.distributions.Mixture in deprecated module tf.contrib. tf.contrib.distributions.Mixture cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
457:11: INFO: Added keywords to args of function 'tf.reduce_mean'
457:26: INFO: Added keywords to args of function 'tf.reduce_sum'
461:17: INFO: Added keywords to args of function 'tf.shape'
464:13: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
470:15: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
473:15: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
476:19: INFO: Added keywords to args of function 'tf.convert_to_tensor'
478:28: ERROR: Using member tf.contrib.distributions.Categorical in deprecated module tf.contrib. tf.contrib.distributions.Categorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
479:16: ERROR: Using member tf.contrib.distributions.Mixture in deprecated module tf.contrib. tf.contrib.distributions.Mixture cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
488:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
519:15: INFO: Added keywords to args of function 'tf.reduce_sum'
520:15: INFO: Added keywords to args of function 'tf.reduce_sum'
521:15: INFO: Added keywords to args of function 'tf.reduce_sum'
525:24: INFO: Added keywords to args of function 'tf.reduce_sum'
569:21: ERROR: Using member tf.contrib.distributions.Cauchy in deprecated module tf.contrib. tf.contrib.distributions.Cauchy cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
571:21: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
621:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
621:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
625:24: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
625:24: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
632:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
632:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
636:24: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
636:24: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
639:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
639:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
643:24: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
643:24: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
646:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
646:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
650:24: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
650:24: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
658:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
663:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
669:17: INFO: Added keywords to args of function 'tf.shape'
674:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
681:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
688:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
693:17: INFO: Added keywords to args of function 'tf.shape'
698:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
701:17: INFO: Added keywords to args of function 'tf.shape'
702:17: INFO: Added keywords to args of function 'tf.reduce_sum'
704:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
706:11: INFO: Added keywords to args of function 'tf.reduce_mean'
706:26: INFO: Added keywords to args of function 'tf.reduce_sum'
730:18: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
789:17: INFO: Added keywords to args of function 'tf.shape'
793:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
796:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
799:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
801:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
810:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
813:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
816:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
818:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
839:11: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
839:11: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
840:11: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
840:11: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
847:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
847:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
851:24: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
851:24: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
870:17: INFO: Added keywords to args of function 'tf.shape'
881:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
882:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
909:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
909:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
914:24: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
914:24: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
935:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
940:17: INFO: Added keywords to args of function 'tf.shape'
949:11: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
996:15: INFO: Added keywords to args of function 'tf.reduce_sum'
997:15: INFO: Added keywords to args of function 'tf.reduce_sum'
1003:17: INFO: Added keywords to args of function 'tf.reduce_sum'
1009:24: INFO: Added keywords to args of function 'tf.reduce_sum'
1069:25: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
1069:25: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
1070:25: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
1070:25: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
1075:12: INFO: Renamed 'tf.get_collection_ref' to 'tf.compat.v1.get_collection_ref'
1134:15: INFO: Added keywords to args of function 'tf.reduce_sum'
1135:15: INFO: Added keywords to args of function 'tf.reduce_sum'
1145:24: INFO: Added keywords to args of function 'tf.reduce_sum'
1189:21: ERROR: Using member tf.contrib.distributions.Cauchy in deprecated module tf.contrib. tf.contrib.distributions.Cauchy cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
1191:21: ERROR: Using member tf.contrib.distributions.Normal in deprecated module tf.contrib. tf.contrib.distributions.Normal cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/train.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/fivo/experimental/train.py'
--------------------------------------------------------------------------------

32:0: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
32:25: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
34:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
37:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
39:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
41:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
44:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
46:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
49:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
51:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
54:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
56:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
59:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
63:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
66:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
68:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
71:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
74:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
77:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
79:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
81:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
84:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
86:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
88:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
91:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
94:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
102:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
105:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
108:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
110:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
112:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
115:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
118:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
120:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
139:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
141:13: INFO: Added keywords to args of function 'tf.reduce_sum'
143:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
153:7: INFO: tf.train.exponential_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

153:7: INFO: Renamed 'tf.train.exponential_decay' to 'tf.compat.v1.train.exponential_decay'
155:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
155:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
156:8: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
161:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
164:39: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
179:12: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
193:24: INFO: Renamed 'tf.check_numerics' to 'tf.debugging.check_numerics'
215:8: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

230:13: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

258:21: INFO: Added keywords to args of function 'tf.reduce_mean'
279:21: INFO: Added keywords to args of function 'tf.reduce_mean'
283:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
283:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
286:16: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
326:8: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

342:13: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

392:21: INFO: Added keywords to args of function 'tf.reduce_mean'
429:21: INFO: Added keywords to args of function 'tf.reduce_mean'
469:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
469:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
470:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
470:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
471:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
471:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
476:16: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
511:9: INFO: Renamed 'tf.train.LoggingTensorHook' to 'tf.estimator.LoggingTensorHook'
523:28: INFO: Renamed 'tf.train.SummarySaverHook' to 'tf.estimator.SummarySaverHook'
526:17: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
526:17: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
542:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
574:4: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
606:11: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
609:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
610:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
610:37: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
611:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
612:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
612:37: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
613:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
614:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
614:37: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
615:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
616:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
616:37: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
617:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
618:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
618:37: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
620:9: INFO: Renamed 'tf.train.MonitoredTrainingSession' to 'tf.compat.v1.train.MonitoredTrainingSession'
637:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/fivo/experimental/data.py'
--------------------------------------------------------------------------------

142:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/fivo/experimental/summary_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/fivo/experimental/summary_utils.py'
--------------------------------------------------------------------------------

40:23: INFO: Added keywords to args of function 'tf.shape'
44:34: INFO: Renamed keyword argument for tf.nn.softmax from dim to axis
45:27: INFO: Added keywords to args of function 'tf.reduce_mean'
46:15: INFO: Added keywords to args of function 'tf.reduce_sum'
47:13: INFO: Added keywords to args of function 'tf.reduce_mean'
47:28: INFO: Added keywords to args of function 'tf.reduce_sum'
48:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
48:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
49:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
49:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
50:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
50:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
71:10: INFO: Added keywords to args of function 'tf.reduce_sum'
77:35: INFO: Renamed keyword argument for tf.nn.softmax from dim to axis
78:30: INFO: Added keywords to args of function 'tf.shape'
80:11: INFO: Added keywords to args of function 'tf.reduce_sum'
184:10: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
187:2: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
187:2: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
197:12: INFO: Added keywords to args of function 'tf.convert_to_tensor'
221:10: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
222:45: INFO: Renamed keyword argument for tf.nn.softmax from dim to axis
223:22: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
225:2: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
225:2: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
231:12: INFO: Added keywords to args of function 'tf.convert_to_tensor'
232:9: INFO: Added keywords to args of function 'tf.reduce_mean'
234:14: INFO: Added keywords to args of function 'tf.reduce_sum'
236:14: INFO: Added keywords to args of function 'tf.reduce_mean'
237:18: INFO: Added keywords to args of function 'tf.reduce_mean'
239:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
239:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
240:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
240:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
241:4: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
241:4: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
246:9: INFO: Added keywords to args of function 'tf.reduce_mean'
247:18: INFO: Added keywords to args of function 'tf.reduce_mean'
248:18: INFO: Added keywords to args of function 'tf.reduce_mean'
250:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
250:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
251:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
251:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
252:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
252:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
253:4: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
253:4: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
263:11: INFO: Added keywords to args of function 'tf.reduce_mean'
263:26: ERROR: Using member tf.contrib.distributions.kl_divergence in deprecated module tf.contrib. tf.contrib.distributions.kl_divergence cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
264:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
264:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
264:39: INFO: Added keywords to args of function 'tf.reduce_mean'
268:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
268:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
269:24: INFO: Added keywords to args of function 'tf.reduce_mean'
270:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
270:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
271:24: INFO: Added keywords to args of function 'tf.reduce_mean'
275:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
275:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
276:24: INFO: Added keywords to args of function 'tf.reduce_mean'
277:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
277:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
278:24: INFO: Added keywords to args of function 'tf.reduce_mean'
286:9: INFO: Added keywords to args of function 'tf.reduce_mean'
286:24: ERROR: Using member tf.contrib.distributions.kl_divergence in deprecated module tf.contrib. tf.contrib.distributions.kl_divergence cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
287:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
287:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
287:37: INFO: Added keywords to args of function 'tf.reduce_mean'
291:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
291:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
292:22: INFO: Added keywords to args of function 'tf.reduce_mean'
293:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
293:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
294:22: INFO: Added keywords to args of function 'tf.reduce_mean'
298:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
298:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
299:22: INFO: Added keywords to args of function 'tf.reduce_mean'
300:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
300:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
301:22: INFO: Added keywords to args of function 'tf.reduce_mean'
306:14: INFO: Added keywords to args of function 'tf.reduce_sum'
307:13: INFO: Added keywords to args of function 'tf.reduce_sum'
310:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
310:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
310:59: INFO: Added keywords to args of function 'tf.reduce_mean'
311:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
311:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
311:41: INFO: Added keywords to args of function 'tf.reduce_mean'
312:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
312:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
312:50: INFO: Added keywords to args of function 'tf.reduce_mean'
313:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
313:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
313:50: INFO: Added keywords to args of function 'tf.reduce_mean'
329:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
329:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
329:52: INFO: Added keywords to args of function 'tf.reduce_mean'
330:2: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
330:2: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
331:2: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
331:2: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/textsum/seq2seq_attention.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/textsum/seq2seq_attention.py'
--------------------------------------------------------------------------------

33:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
34:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
36:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
38:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
40:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
42:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
43:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
44:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
45:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
46:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
47:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
49:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
52:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
55:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
57:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
58:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
59:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
61:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
64:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
65:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
75:13: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
86:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
89:21: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
89:21: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
90:9: INFO: Renamed 'tf.train.Supervisor' to 'tf.compat.v1.train.Supervisor'
97:49: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
121:10: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
122:19: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
122:19: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
123:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
123:27: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
131:6: INFO: Renamed 'tf.logging.error' to 'tf.compat.v1.logging.error'
135:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
138:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
146:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
149:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
191:2: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
213:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/textsum/beam_search.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/textsum/beam_search.py'
--------------------------------------------------------------------------------

27:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
28:0: ERROR: Using member tf.flags.DEFINE_bool in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/textsum/seq2seq_lib.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/textsum/seq2seq_lib.py'
--------------------------------------------------------------------------------

45:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

45:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
80:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

80:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
82:11: INFO: Added keywords to args of function 'tf.reduce_sum'
86:19: INFO: Added keywords to args of function 'tf.shape'
126:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
127:13: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
127:13: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
134:16: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
134:16: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
136:20: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
136:20: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/textsum/data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/textsum/data.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/textsum/seq2seq_attention_decode.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/textsum/seq2seq_attention_decode.py'
--------------------------------------------------------------------------------

26:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
27:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
29:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
93:18: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
98:11: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
98:29: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
117:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
120:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
123:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
159:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
160:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
161:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/textsum/batch_reader.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/textsum/batch_reader.py'
--------------------------------------------------------------------------------

158:8: INFO: Renamed 'tf.logging.warning' to 'tf.compat.v1.logging.warning'
166:10: INFO: Renamed 'tf.logging.warning' to 'tf.compat.v1.logging.warning'
224:10: INFO: Renamed 'tf.logging.error' to 'tf.compat.v1.logging.error'
236:10: INFO: Renamed 'tf.logging.error' to 'tf.compat.v1.logging.error'
251:8: INFO: Renamed 'tf.logging.error' to 'tf.compat.v1.logging.error'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/textsum/seq2seq_attention_model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/textsum/seq2seq_attention_model.py'
--------------------------------------------------------------------------------

49:13: INFO: Renamed 'tf.nn.xw_plus_b' to 'tf.compat.v1.nn.xw_plus_b'
51:18: INFO: Added keywords to args of function 'tf.argmax'
54:15: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
54:15: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
120:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
123:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
126:20: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
129:25: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
131:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
133:25: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
141:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
142:34: INFO: Added keywords to args of function 'tf.transpose'
143:34: INFO: Added keywords to args of function 'tf.transpose'
144:27: INFO: Added keywords to args of function 'tf.transpose'
145:32: INFO: Added keywords to args of function 'tf.transpose'
149:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
150:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
150:20: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
152:24: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
152:24: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
153:30: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
153:30: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
155:30: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
155:30: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
159:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
161:20: INFO: Renamed 'tf.contrib.rnn.LSTMCell' to 'tf.compat.v1.nn.rnn_cell.LSTMCell'
163:26: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
163:26: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
165:20: INFO: Renamed 'tf.contrib.rnn.LSTMCell' to 'tf.compat.v1.nn.rnn_cell.LSTMCell'
167:26: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
167:26: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
169:46: INFO: Renamed 'tf.contrib.rnn.static_bidirectional_rnn' to 'tf.compat.v1.nn.static_bidirectional_rnn'
174:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
175:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
175:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
177:24: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
177:24: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
178:14: INFO: Added keywords to args of function 'tf.transpose'
179:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
179:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
181:24: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
181:24: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
183:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
191:15: INFO: Renamed 'tf.contrib.rnn.LSTMCell' to 'tf.compat.v1.nn.rnn_cell.LSTMCell'
193:24: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
193:24: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
203:47: ERROR: Using member tf.contrib.legacy_seq2seq.attention_decoder in deprecated module tf.contrib. tf.contrib.legacy_seq2seq.attention_decoder cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
208:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
212:12: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
214:14: INFO: Renamed 'tf.nn.xw_plus_b' to 'tf.compat.v1.nn.xw_plus_b'
217:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
218:26: INFO: Added keywords to args of function 'tf.argmax'
219:10: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
224:14: INFO: Renamed 'tf.log' to 'tf.math.log'
226:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
230:19: WARNING: tf.nn.sampled_softmax_loss requires manual check. `partition_strategy` has been removed from tf.nn.sampled_softmax_loss.  The 'div' strategy will be used by default.
238:23: ERROR: Using member tf.contrib.legacy_seq2seq.sequence_loss in deprecated module tf.contrib. tf.contrib.legacy_seq2seq.sequence_loss cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
240:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
240:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
248:8: INFO: tf.train.exponential_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

248:8: INFO: Renamed 'tf.train.exponential_decay' to 'tf.compat.v1.train.exponential_decay'
250:12: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
253:10: INFO: Added keywords to args of function 'tf.gradients'
254:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
254:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
255:16: INFO: Renamed 'tf.train.GradientDescentOptimizer' to 'tf.compat.v1.train.GradientDescentOptimizer'
256:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
256:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
300:22: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
300:22: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/textsum/data_convert_example.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/textsum/data_convert_example.py'
--------------------------------------------------------------------------------

15:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
16:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
19:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
20:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
65:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/autoaugment/custom_ops.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/autoaugment/custom_ops.py'
--------------------------------------------------------------------------------

30:12: ERROR: Using member tf.contrib.framework.arg_scope in deprecated module tf.contrib. tf.contrib.framework.arg_scope cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
35:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
35:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
47:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

47:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
50:13: INFO: Added keywords to args of function 'tf.nn.avg_pool'
50:13: INFO: Renamed keyword argument for tf.nn.avg_pool from value to input
50:13: INFO: Renamed 'tf.nn.avg_pool' to 'tf.nn.avg_pool2d'
61:12: INFO: Added keywords to args of function 'tf.pad'
77:9: ERROR: Using member tf.contrib.layers.batch_norm in deprecated module tf.contrib. tf.contrib.layers.batch_norm cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
85:26: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
67:1: ERROR: Using member tf.contrib.framework.add_arg_scope in deprecated module tf.contrib. tf.contrib.framework.add_arg_scope cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
121:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
127:26: INFO: tf.random_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
127:26: INFO: Renamed 'tf.random_normal_initializer' to 'tf.compat.v1.random_normal_initializer'
137:14: INFO: Added keywords to args of function 'tf.nn.conv2d'
137:14: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
99:1: ERROR: Using member tf.contrib.framework.add_arg_scope in deprecated module tf.contrib. tf.contrib.framework.add_arg_scope cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
162:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
166:26: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
166:26: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
174:23: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
174:23: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
181:14: INFO: Renamed 'tf.nn.xw_plus_b' to 'tf.compat.v1.nn.xw_plus_b'
142:1: ERROR: Using member tf.contrib.framework.add_arg_scope in deprecated module tf.contrib. tf.contrib.framework.add_arg_scope cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
188:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

188:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
191:11: INFO: Added keywords to args of function 'tf.nn.avg_pool'
191:11: INFO: Renamed keyword argument for tf.nn.avg_pool from value to input
191:11: INFO: Renamed 'tf.nn.avg_pool' to 'tf.nn.avg_pool2d'
185:1: ERROR: Using member tf.contrib.framework.add_arg_scope in deprecated module tf.contrib. tf.contrib.framework.add_arg_scope cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/autoaugment/augmentation_transforms.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/autoaugment/augmentation_transforms.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/autoaugment/data_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/autoaugment/data_utils.py'
--------------------------------------------------------------------------------

67:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
105:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
110:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
180:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
181:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/autoaugment/shake_shake.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/autoaugment/shake_shake.py'
--------------------------------------------------------------------------------

33:10: INFO: Added keywords to args of function 'tf.nn.avg_pool'
33:10: INFO: Renamed keyword argument for tf.nn.avg_pool from value to input
33:10: INFO: Renamed 'tf.nn.avg_pool' to 'tf.nn.avg_pool2d'
40:10: INFO: Added keywords to args of function 'tf.pad'
43:10: INFO: Added keywords to args of function 'tf.nn.avg_pool'
43:10: INFO: Renamed keyword argument for tf.nn.avg_pool from value to input
43:10: INFO: Renamed 'tf.nn.avg_pool' to 'tf.nn.avg_pool2d'
72:15: INFO: Added keywords to args of function 'tf.shape'
76:6: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
81:6: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
94:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
107:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
136:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
138:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
140:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/autoaugment/shake_drop.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/autoaugment/shake_drop.py'
--------------------------------------------------------------------------------

42:8: INFO: Added keywords to args of function 'tf.pad'
55:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
70:19: INFO: Added keywords to args of function 'tf.shape'
73:23: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
76:21: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
79:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/autoaugment/train_cifar.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/autoaugment/train_cifar.py'
--------------------------------------------------------------------------------

36:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
39:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
40:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
42:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
44:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
46:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
48:12: ERROR: Using member tf.contrib.framework.arg_scope in deprecated module tf.contrib. tf.contrib.framework.arg_scope cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
119:25: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
120:25: INFO: Renamed 'tf.local_variables_initializer' to 'tf.compat.v1.local_variables_initializer'
136:18: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
137:18: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
153:25: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
162:34: INFO: tf.metrics.accuracy requires manual check. tf.metrics have been replaced with object oriented versions in TF 2.0 and after. The metric function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
162:34: INFO: Renamed 'tf.metrics.accuracy' to 'tf.compat.v1.metrics.accuracy'
163:8: INFO: Added keywords to args of function 'tf.argmax'
163:30: INFO: Added keywords to args of function 'tf.argmax'
176:19: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
178:25: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
179:25: INFO: Renamed 'tf.local_variables_initializer' to 'tf.compat.v1.local_variables_initializer'
183:54: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
185:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
191:12: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
192:12: INFO: Added keywords to args of function 'tf.gradients'
196:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
196:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
200:16: INFO: Renamed 'tf.train.MomentumOptimizer' to 'tf.compat.v1.train.MomentumOptimizer'
208:16: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
208:34: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
237:11: INFO: Renamed 'tf.gfile.IsDirectory' to 'tf.io.gfile.isdir'
238:6: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
239:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
240:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
247:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
263:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
272:10: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
277:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
287:20: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
289:15: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
298:6: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
305:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
310:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
335:10: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
339:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
340:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
341:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
352:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
370:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
381:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
387:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
407:12: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
451:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
451:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
452:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/autoaugment/helper_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/autoaugment/helper_utils.py'
--------------------------------------------------------------------------------

29:9: INFO: tf.losses.softmax_cross_entropy requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
29:9: INFO: Renamed 'tf.losses.softmax_cross_entropy' to 'tf.compat.v1.losses.softmax_cross_entropy'
37:13: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
68:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
124:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
130:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
137:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
148:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/autoaugment/wrn.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/autoaugment/wrn.py'
--------------------------------------------------------------------------------

46:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
55:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
59:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
63:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
69:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
124:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
133:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
142:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
153:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/autoaugment/policies.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/autoaugment/policies.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/street/python/errorcounter_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/street/python/errorcounter_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/street/python/vgsl_model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/street/python/vgsl_model.py'
--------------------------------------------------------------------------------

90:11: INFO: Renamed 'tf.train.Supervisor' to 'tf.compat.v1.train.Supervisor'
152:9: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
152:9: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
155:13: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
158:15: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
159:15: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
324:17: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
347:11: INFO: Renamed 'tf.train.global_step' to 'tf.compat.v1.train.global_step'
374:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
374:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
444:18: INFO: Added keywords to args of function 'tf.transpose'
447:22: INFO: Renamed 'tf.nn.ctc_loss' to 'tf.compat.v1.nn.ctc_loss'
464:11: INFO: Added keywords to args of function 'tf.reduce_sum'
476:8: INFO: tf.train.exponential_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

476:8: INFO: Renamed 'tf.train.exponential_decay' to 'tf.compat.v1.train.exponential_decay'
480:12: INFO: Renamed 'tf.train.GradientDescentOptimizer' to 'tf.compat.v1.train.GradientDescentOptimizer'
482:12: INFO: Renamed 'tf.train.AdagradOptimizer' to 'tf.compat.v1.train.AdagradOptimizer'
484:12: INFO: Renamed 'tf.train.MomentumOptimizer' to 'tf.compat.v1.train.MomentumOptimizer'
486:12: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
489:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
489:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
528:22: INFO: Added keywords to args of function 'tf.shape'
531:11: INFO: Added keywords to args of function 'tf.pad'
536:9: INFO: Added keywords to args of function 'tf.cond'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/street/python/vgslspecs_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/street/python/vgslspecs_test.py'
--------------------------------------------------------------------------------

37:20: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
39:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
40:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
55:24: INFO: Renamed 'tf.div' to 'tf.compat.v1.div'
56:25: INFO: Renamed 'tf.div' to 'tf.compat.v1.div'
58:8: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/street/python/decoder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/street/python/decoder.py'
--------------------------------------------------------------------------------

81:14: INFO: Renamed 'tf.train.start_queue_runners' to 'tf.compat.v1.train.start_queue_runners'
190:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/street/python/decoder_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/street/python/decoder_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/street/python/shapes.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/street/python/shapes.py'
--------------------------------------------------------------------------------

170:13: INFO: Added keywords to args of function 'tf.transpose'
200:13: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/street/python/vgsl_model_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/street/python/vgsl_model_test.py'
--------------------------------------------------------------------------------

73:18: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
74:18: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
75:46: INFO: Added keywords to args of function 'tf.shape'
102:18: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
103:18: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
183:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
185:6: INFO: Renamed 'tf.train.start_queue_runners' to 'tf.compat.v1.train.start_queue_runners'
207:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
209:6: INFO: Renamed 'tf.train.start_queue_runners' to 'tf.compat.v1.train.start_queue_runners'
231:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
233:6: INFO: Renamed 'tf.train.start_queue_runners' to 'tf.compat.v1.train.start_queue_runners'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/street/python/errorcounter.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/street/python/errorcounter.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/street/python/vgslspecs.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/street/python/vgslspecs.py'
--------------------------------------------------------------------------------

149:16: INFO: Renamed 'tf.div' to 'tf.compat.v1.div'
336:17: INFO: Added keywords to args of function 'tf.shape'
340:19: INFO: Added keywords to args of function 'tf.shape'
346:36: INFO: Renamed 'tf.div' to 'tf.compat.v1.div'
443:15: INFO: Added keywords to args of function 'tf.transpose'
453:18: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
454:44: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
454:56: INFO: Added keywords to args of function 'tf.shape'
482:16: INFO: Added keywords to args of function 'tf.transpose'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/street/python/shapes_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/street/python/shapes_test.py'
--------------------------------------------------------------------------------

38:11: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
51:11: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
72:13: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
92:13: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
112:13: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
132:13: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
153:13: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/street/python/vgsl_train.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/street/python/vgsl_train.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/street/python/fsns_urls.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/street/python/fsns_urls.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/street/python/vgsl_input.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/street/python/vgsl_input.py'
--------------------------------------------------------------------------------

51:15: INFO: Renamed 'tf.gfile.Glob' to 'tf.io.gfile.glob'
54:19: INFO: Renamed 'tf.train.string_input_producer' to 'tf.compat.v1.train.string_input_producer'
65:44: INFO: Renamed 'tf.train.batch_join' to 'tf.compat.v1.train.batch_join'
71:11: INFO: Renamed 'tf.deserialize_many_sparse' to 'tf.io.deserialize_many_sparse'
73:11: INFO: Renamed 'tf.sparse_tensor_to_dense' to 'tf.sparse.to_dense'
82:2: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
82:2: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
105:13: INFO: Renamed 'tf.TFRecordReader' to 'tf.compat.v1.TFRecordReader'
108:13: INFO: Added keywords to args of function 'tf.parse_single_example'
108:13: INFO: Renamed 'tf.parse_single_example' to 'tf.io.parse_single_example'
124:11: INFO: Added keywords to args of function 'tf.serialize_sparse'
124:11: INFO: Renamed 'tf.serialize_sparse' to 'tf.compat.v1.serialize_sparse'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/street/python/nn_ops.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/street/python/nn_ops.py'
--------------------------------------------------------------------------------

65:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
183:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
188:14: INFO: Added keywords to args of function 'tf.reverse_sequence'
192:20: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
192:20: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
197:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
198:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
198:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
209:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
209:14: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
211:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
211:14: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
215:6: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
216:6: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
223:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
224:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
224:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
227:24: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
227:24: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
231:15: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
231:15: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
232:49: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
232:49: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
234:6: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
237:11: INFO: Renamed 'tf.nn.xw_plus_b' to 'tf.compat.v1.nn.xw_plus_b'
251:14: INFO: Added keywords to args of function 'tf.reverse_sequence'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/street/python/vgsl_eval.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/street/python/vgsl_eval.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/adv_imagenet_models/imagenet.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/adv_imagenet_models/imagenet.py'
--------------------------------------------------------------------------------

31:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
77:13: INFO: Renamed 'tf.TFRecordReader' to 'tf.compat.v1.TFRecordReader'
80:23: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
82:22: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
84:27: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
86:26: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
88:32: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
90:32: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
92:32: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
94:32: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
96:34: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/adv_imagenet_models/eval_on_adversarial.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/adv_imagenet_models/eval_on_adversarial.py'
--------------------------------------------------------------------------------

30:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
32:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
35:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
39:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
42:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
47:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
51:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
54:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
57:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
61:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
66:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
71:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
76:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
104:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

104:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
115:14: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
115:14: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
161:18: INFO: tf.losses.softmax_cross_entropy requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
161:18: INFO: Renamed 'tf.losses.softmax_cross_entropy' to 'tf.compat.v1.losses.softmax_cross_entropy'
165:19: INFO: tf.losses.softmax_cross_entropy requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
165:19: INFO: Renamed 'tf.losses.softmax_cross_entropy' to 'tf.compat.v1.losses.softmax_cross_entropy'
169:28: INFO: Added keywords to args of function 'tf.gradients'
189:23: INFO: Added keywords to args of function 'tf.argmin'
211:23: INFO: Added keywords to args of function 'tf.argmin'
213:34: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
252:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
252:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
254:21: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
267:29: INFO: Renamed 'tf.train.batch' to 'tf.compat.v1.train.batch'
276:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
292:18: INFO: Added keywords to args of function 'tf.argmax'
309:7: INFO: Renamed 'tf.gfile.IsDirectory' to 'tf.io.gfile.isdir'
314:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
331:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/adv_imagenet_models/inception_resnet_v2.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/adv_imagenet_models/inception_resnet_v2.py'
--------------------------------------------------------------------------------

31:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
36:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
37:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
39:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
42:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
57:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
58:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
60:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
77:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
78:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
80:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
139:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
172:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
173:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
175:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
179:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
185:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
201:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
202:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
206:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
214:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
233:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
234:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
239:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
244:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
251:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
294:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
302:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
314:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
347:42: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

348:41: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lfads/lfads.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lfads/lfads.py'
--------------------------------------------------------------------------------

139:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
140:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
148:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
226:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
227:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
249:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
316:20: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
333:35: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
336:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
336:22: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
337:38: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
337:38: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
421:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
500:23: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
507:33: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
515:23: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

515:37: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
517:27: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

542:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
550:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
605:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
617:17: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

663:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
676:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
696:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
758:19: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

759:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
785:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
787:22: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

788:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
791:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
813:23: INFO: Added keywords to args of function 'tf.reduce_sum'
826:23: INFO: Added keywords to args of function 'tf.reduce_mean'
854:26: INFO: Added keywords to args of function 'tf.reduce_mean'
855:21: INFO: Added keywords to args of function 'tf.reduce_mean'
860:28: INFO: Added keywords to args of function 'tf.reduce_mean'
863:18: INFO: Added keywords to args of function 'tf.shape'
864:23: INFO: Renamed 'tf.log' to 'tf.math.log'
872:26: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
873:26: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
877:18: INFO: Added keywords to args of function 'tf.reduce_prod'
877:58: INFO: Added keywords to args of function 'tf.shape'
880:17: INFO: Added keywords to args of function 'tf.reduce_sum'
907:24: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
907:39: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
910:23: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
910:38: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
919:8: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
920:32: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
924:8: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
924:26: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
927:8: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
927:26: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
934:8: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
934:26: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
935:32: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
945:12: INFO: Added keywords to args of function 'tf.gradients'
947:10: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
954:22: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
954:37: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
958:21: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
958:36: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
963:25: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
965:24: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
965:24: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
969:19: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
969:19: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
970:26: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
970:26: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
971:26: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
971:26: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
972:26: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
972:26: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
973:33: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
973:33: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
980:12: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
980:12: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
983:12: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
983:12: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
990:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
991:26: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
991:26: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
993:26: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
993:26: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
995:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
996:24: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
996:24: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
999:20: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
1000:29: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1000:29: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1003:29: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1003:29: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1007:20: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
1008:23: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1008:23: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1010:23: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1010:23: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1019:27: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1019:27: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
1020:26: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1020:26: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
1021:24: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1021:24: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
1022:24: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1022:24: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
1024:14: INFO: Renamed 'tf.get_default_session' to 'tf.compat.v1.get_default_session'
1026:18: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1026:18: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
1267:16: INFO: Renamed 'tf.get_default_session' to 'tf.compat.v1.get_default_session'
1270:6: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
1303:14: INFO: Renamed 'tf.get_default_session' to 'tf.compat.v1.get_default_session'
1346:14: INFO: Renamed 'tf.get_default_session' to 'tf.compat.v1.get_default_session'
1432:14: INFO: Renamed 'tf.get_default_session' to 'tf.compat.v1.get_default_session'
1492:14: INFO: Renamed 'tf.get_default_session' to 'tf.compat.v1.get_default_session'
1532:10: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
1617:14: INFO: Renamed 'tf.get_default_session' to 'tf.compat.v1.get_default_session'
2040:14: INFO: Renamed 'tf.get_default_session' to 'tf.compat.v1.get_default_session'
2105:18: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
2106:14: INFO: Renamed 'tf.get_default_session' to 'tf.compat.v1.get_default_session'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lfads/distributions.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lfads/distributions.py'
--------------------------------------------------------------------------------

44:8: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
47:47: INFO: Renamed 'tf.lgamma' to 'tf.math.lgamma'
108:25: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
108:42: INFO: Added keywords to args of function 'tf.shape'
163:17: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
163:17: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
164:45: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
164:45: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
175:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
175:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
176:36: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
176:36: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
182:21: INFO: Renamed 'tf.log' to 'tf.math.log'
186:33: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
186:50: INFO: Added keywords to args of function 'tf.shape'
243:25: INFO: Added keywords to args of function 'tf.shape'
247:19: INFO: Renamed 'tf.log' to 'tf.math.log'
250:33: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
328:40: INFO: Renamed 'tf.log' to 'tf.math.log'
336:40: INFO: Renamed 'tf.log' to 'tf.math.log'
355:23: INFO: Renamed 'tf.log' to 'tf.math.log'
355:46: INFO: Renamed 'tf.log' to 'tf.math.log'
443:20: INFO: Added keywords to args of function 'tf.reduce_sum'
450:19: INFO: Added keywords to args of function 'tf.reduce_mean'
491:11: INFO: Added keywords to args of function 'tf.reduce_sum'
493:19: INFO: Added keywords to args of function 'tf.reduce_mean'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lfads/run_lfads.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lfads/run_lfads.py'
--------------------------------------------------------------------------------

98:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
423:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
445:12: INFO: Renamed 'tf.get_default_session' to 'tf.compat.v1.get_default_session'
447:14: INFO: Renamed 'tf.train.checkpoint_exists' to 'tf.compat.v1.train.checkpoint_exists'
460:4: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
606:11: INFO: Renamed 'tf.get_default_session' to 'tf.compat.v1.get_default_session'
790:11: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
794:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
814:4: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lfads/plot_lfads.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lfads/plot_lfads.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lfads/utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lfads/utils.py'
--------------------------------------------------------------------------------

39:6: INFO: Added keywords to args of function 'tf.reduce_max'
42:6: INFO: Added keywords to args of function 'tf.reduce_sum'
43:9: INFO: Renamed 'tf.log' to 'tf.math.log'
69:13: INFO: tf.random_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
69:13: INFO: Renamed 'tf.random_normal_initializer' to 'tf.compat.v1.random_normal_initializer'
120:15: INFO: tf.random_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
120:15: INFO: Renamed 'tf.random_normal_initializer' to 'tf.compat.v1.random_normal_initializer'
131:21: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
138:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
138:10: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
140:30: INFO: Renamed keyword argument for tf.nn.l2_normalize from dim to axis
142:21: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
149:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
149:10: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
153:21: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
158:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
158:10: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
159:38: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
159:38: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lfads/synth_data/generate_itb_data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lfads/synth_data/generate_itb_data.py'
--------------------------------------------------------------------------------

31:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
65:30: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
68:31: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
74:10: INFO: Renamed 'tf.nn.xw_plus_b' to 'tf.compat.v1.nn.xw_plus_b'
100:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
103:8: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
116:5: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lfads/synth_data/generate_labeled_rnn_data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lfads/synth_data/generate_labeled_rnn_data.py'
--------------------------------------------------------------------------------

32:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lfads/synth_data/generate_chaotic_rnn_data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lfads/synth_data/generate_chaotic_rnn_data.py'
--------------------------------------------------------------------------------

35:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lfads/synth_data/synthetic_data_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lfads/synth_data/synthetic_data_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/evaluator.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/evaluator.py'
--------------------------------------------------------------------------------

23:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/train.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/train.py'
--------------------------------------------------------------------------------

49:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/export_tflite_lstd_graph.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/export_tflite_lstd_graph.py'
--------------------------------------------------------------------------------

87:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
92:8: ERROR: Using member tf.app.flags in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/model_builder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/model_builder.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/export_tflite_lstd_model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/export_tflite_lstd_model.py'
--------------------------------------------------------------------------------

20:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/trainer.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/trainer.py'
--------------------------------------------------------------------------------

23:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/model_builder_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/model_builder_test.py'
--------------------------------------------------------------------------------

18:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/export_tflite_lstd_graph_lib.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/export_tflite_lstd_graph_lib.py'
--------------------------------------------------------------------------------

23:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/test_tflite_model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/test_tflite_model.py'
--------------------------------------------------------------------------------

21:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/eval.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/eval.py'
--------------------------------------------------------------------------------

28:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
37:8: ERROR: Using member tf.app.flags in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/models/lstm_ssd_mobilenet_v1_feature_extractor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/models/lstm_ssd_mobilenet_v1_feature_extractor_test.py'
--------------------------------------------------------------------------------

19:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/models/lstm_ssd_interleaved_mobilenet_v2_feature_extractor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/models/lstm_ssd_interleaved_mobilenet_v2_feature_extractor.py'
--------------------------------------------------------------------------------

18:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/models/mobilenet_defs.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/models/mobilenet_defs.py'
--------------------------------------------------------------------------------

17:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/models/lstm_ssd_mobilenet_v1_feature_extractor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/models/lstm_ssd_mobilenet_v1_feature_extractor.py'
--------------------------------------------------------------------------------

18:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/models/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/models/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/models/mobilenet_defs_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/models/mobilenet_defs_test.py'
--------------------------------------------------------------------------------

21:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/models/lstm_ssd_interleaved_mobilenet_v2_feature_extractor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/models/lstm_ssd_interleaved_mobilenet_v2_feature_extractor_test.py'
--------------------------------------------------------------------------------

20:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/inputs/tf_sequence_example_decoder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/inputs/tf_sequence_example_decoder.py'
--------------------------------------------------------------------------------

21:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/inputs/tf_sequence_example_decoder_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/inputs/tf_sequence_example_decoder_test.py'
--------------------------------------------------------------------------------

19:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/inputs/seq_dataset_builder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/inputs/seq_dataset_builder.py'
--------------------------------------------------------------------------------

25:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/inputs/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/inputs/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/inputs/seq_dataset_builder_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/inputs/seq_dataset_builder_test.py'
--------------------------------------------------------------------------------

20:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/lstm/utils_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/lstm/utils_test.py'
--------------------------------------------------------------------------------

21:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/lstm/rnn_decoder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/lstm/rnn_decoder.py'
--------------------------------------------------------------------------------

18:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/lstm/lstm_cells.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/lstm/lstm_cells.py'
--------------------------------------------------------------------------------

17:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/lstm/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/lstm/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/lstm/utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/lstm/utils.py'
--------------------------------------------------------------------------------

21:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/lstm/rnn_decoder_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/lstm/rnn_decoder_test.py'
--------------------------------------------------------------------------------

23:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/lstm/lstm_cells_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/lstm/lstm_cells_test.py'
--------------------------------------------------------------------------------

22:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/builders/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/builders/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/builders/graph_rewriter_builder_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/builders/graph_rewriter_builder_test.py'
--------------------------------------------------------------------------------

18:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/builders/graph_rewriter_builder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/builders/graph_rewriter_builder.py'
--------------------------------------------------------------------------------

24:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/metrics/coco_evaluation_all_frames_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/metrics/coco_evaluation_all_frames_test.py'
--------------------------------------------------------------------------------

19:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/metrics/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/metrics/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/metrics/coco_evaluation_all_frames.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/metrics/coco_evaluation_all_frames.py'
--------------------------------------------------------------------------------

18:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/meta_architectures/lstm_ssd_meta_arch_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/meta_architectures/lstm_ssd_meta_arch_test.py'
--------------------------------------------------------------------------------

25:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/meta_architectures/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/meta_architectures/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/meta_architectures/lstm_ssd_meta_arch.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/meta_architectures/lstm_ssd_meta_arch.py'
--------------------------------------------------------------------------------

27:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/protos/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/protos/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/utils/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/utils/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/utils/config_util.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/utils/config_util.py'
--------------------------------------------------------------------------------

22:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lstm_object_detection/utils/config_util_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lstm_object_detection/utils/config_util_test.py'
--------------------------------------------------------------------------------

23:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/entropy_coder/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/progressive/progressive.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/entropy_coder/progressive/progressive.py'
--------------------------------------------------------------------------------

206:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
206:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
208:16: INFO: Added keywords to args of function 'tf.reduce_mean'
209:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
209:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
218:31: INFO: Added keywords to args of function 'tf.reduce_mean'
225:13: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/progressive/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/entropy_coder/progressive/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/core/entropy_coder_single.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/entropy_coder/core/entropy_coder_single.py'
--------------------------------------------------------------------------------

33:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
37:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
38:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
42:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
44:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
60:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
64:7: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
86:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
96:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
98:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
100:15: INFO: Renamed 'tf.local_variables_initializer' to 'tf.compat.v1.local_variables_initializer'
116:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/core/code_loader.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/entropy_coder/core/code_loader.py'
--------------------------------------------------------------------------------

23:16: INFO: Renamed 'tf.python_io.tf_record_iterator' to 'tf.compat.v1.python_io.tf_record_iterator'
44:19: INFO: Renamed 'tf.train.string_input_producer' to 'tf.compat.v1.train.string_input_producer'
46:11: INFO: Renamed 'tf.TFRecordReader' to 'tf.compat.v1.TFRecordReader'
51:20: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
53:14: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
55:12: INFO: Added keywords to args of function 'tf.parse_example'
55:12: INFO: Renamed 'tf.parse_example' to 'tf.io.parse_example'
61:20: INFO: Renamed 'tf.sparse_tensor_to_dense' to 'tf.sparse.to_dense'
64:10: INFO: Renamed 'tf.PaddingFIFOQueue' to 'tf.queue.PaddingFIFOQueue'
70:17: INFO: Renamed 'tf.train.queue_runner.QueueRunner' to 'tf.compat.v1.train.queue_runner.QueueRunner'
71:2: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
71:23: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/core/config_helper.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/entropy_coder/core/config_helper.py'
--------------------------------------------------------------------------------

51:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/core/entropy_coder_train.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/entropy_coder/core/entropy_coder_train.py'
--------------------------------------------------------------------------------

31:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
34:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
36:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
38:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
40:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
44:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
45:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
49:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
51:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
91:19: INFO: Renamed 'tf.train.replica_device_setter' to 'tf.compat.v1.train.replica_device_setter'
103:30: INFO: Added keywords to args of function 'tf.shape'
105:20: ERROR: Using member tf.contrib.framework.create_global_step in deprecated module tf.contrib. tf.contrib.framework.create_global_step cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
108:22: INFO: tf.train.exponential_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

108:22: INFO: Renamed 'tf.train.exponential_decay' to 'tf.compat.v1.train.exponential_decay'
114:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
114:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
115:18: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
124:19: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
124:19: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
134:11: INFO: Renamed 'tf.train.Supervisor' to 'tf.compat.v1.train.Supervisor'
184:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/lib/blocks_entropy_coding_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/entropy_coder/lib/blocks_entropy_coding_test.py'
--------------------------------------------------------------------------------

42:13: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
43:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
48:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/lib/blocks_std_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/entropy_coder/lib/blocks_std_test.py'
--------------------------------------------------------------------------------

102:8: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
113:8: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
120:8: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
132:8: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
141:9: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
142:9: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
152:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
179:8: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
185:8: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
191:8: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
197:8: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
203:9: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
204:9: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
205:9: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
227:8: INFO: Added keywords to args of function 'tf.convert_to_tensor'
231:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
254:8: INFO: Added keywords to args of function 'tf.convert_to_tensor'
258:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
281:8: INFO: Added keywords to args of function 'tf.convert_to_tensor'
285:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
308:8: INFO: Added keywords to args of function 'tf.convert_to_tensor'
312:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
332:8: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/lib/block_util.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/entropy_coder/lib/block_util.py'
--------------------------------------------------------------------------------

51:11: INFO: Renamed 'tf.truncated_normal' to 'tf.random.truncated_normal'
86:11: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
101:11: INFO: Renamed 'tf.truncated_normal' to 'tf.random.truncated_normal'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/lib/blocks_binarizer.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/entropy_coder/lib/blocks_binarizer.py'
--------------------------------------------------------------------------------

35:9: INFO: Added keywords to args of function 'tf.reduce_all'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/lib/blocks_masked_conv2d_lstm.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/entropy_coder/lib/blocks_masked_conv2d_lstm.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/lib/blocks_masked_conv2d.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/entropy_coder/lib/blocks_masked_conv2d.py'
--------------------------------------------------------------------------------

72:11: INFO: Added keywords to args of function 'tf.convert_to_tensor'
107:11: INFO: Added keywords to args of function 'tf.convert_to_tensor'
186:11: INFO: Added keywords to args of function 'tf.convert_to_tensor'
226:11: INFO: Added keywords to args of function 'tf.convert_to_tensor'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/lib/blocks_operator_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/entropy_coder/lib/blocks_operator_test.py'
--------------------------------------------------------------------------------

51:8: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/lib/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/entropy_coder/lib/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/lib/block_base.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/entropy_coder/lib/block_base.py'
--------------------------------------------------------------------------------

67:18: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
239:17: INFO: Renamed 'tf.get_collection_ref' to 'tf.compat.v1.get_collection_ref'
239:39: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
247:24: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
255:24: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/lib/blocks_std.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/entropy_coder/lib/blocks_std.py'
--------------------------------------------------------------------------------

56:16: INFO: Added keywords to args of function 'tf.shape'
57:16: INFO: Renamed 'tf.mod' to 'tf.math.floormod'
66:8: INFO: Added keywords to args of function 'tf.pad'
122:28: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
122:28: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/lib/blocks_lstm_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/entropy_coder/lib/blocks_lstm_test.py'
--------------------------------------------------------------------------------

43:8: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
62:8: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
67:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
81:8: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
100:8: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
105:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/lib/blocks.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/entropy_coder/lib/blocks.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/lib/blocks_entropy_coding.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/entropy_coder/lib/blocks_entropy_coding.py'
--------------------------------------------------------------------------------

47:27: INFO: Renamed 'tf.log' to 'tf.math.log'
47:49: INFO: Renamed 'tf.log' to 'tf.math.log'
48:14: INFO: Added keywords to args of function 'tf.reduce_mean'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/lib/blocks_operator.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/entropy_coder/lib/blocks_operator.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/lib/blocks_lstm.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/entropy_coder/lib/blocks_lstm.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/lib/blocks_masked_conv2d_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/entropy_coder/lib/blocks_masked_conv2d_test.py'
--------------------------------------------------------------------------------

55:8: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
59:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
81:8: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
85:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
122:8: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
126:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
156:8: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
160:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
177:20: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
177:20: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
178:8: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
200:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/all_models/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/entropy_coder/all_models/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/all_models/all_models.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/entropy_coder/all_models/all_models.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/all_models/all_models_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/entropy_coder/all_models/all_models_test.py'
--------------------------------------------------------------------------------

33:6: INFO: Renamed 'tf.reset_default_graph' to 'tf.compat.v1.reset_default_graph'
39:18: INFO: Renamed 'tf.train.GradientDescentOptimizer' to 'tf.compat.v1.train.GradientDescentOptimizer'
45:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/model/entropy_coder_model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/entropy_coder/model/entropy_coder_model.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/model/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/entropy_coder/model/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/model/model_factory.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/entropy_coder/model/model_factory.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/dataset/gen_synthetic_single.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/entropy_coder/dataset/gen_synthetic_single.py'
--------------------------------------------------------------------------------

27:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
29:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
58:7: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
71:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/dataset/gen_synthetic_dataset.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/entropy_coder/dataset/gen_synthetic_dataset.py'
--------------------------------------------------------------------------------

27:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
29:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
32:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
74:7: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
89:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/entropy_coder/dataset/synthetic_model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/entropy_coder/dataset/synthetic_model.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/image_encoder/decoder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/image_encoder/decoder.py'
--------------------------------------------------------------------------------

30:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
31:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
34:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
36:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
38:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
66:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
67:4: INFO: Renamed 'tf.gfile.MkDir' to 'tf.io.gfile.mkdir'
69:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
74:7: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
95:9: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
96:18: INFO: Renamed 'tf.GraphDef' to 'tf.compat.v1.GraphDef'
101:18: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
112:7: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
120:11: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
127:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/image_encoder/msssim.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/image_encoder/msssim.py'
--------------------------------------------------------------------------------

30:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
31:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
32:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
193:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
197:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
201:7: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
203:7: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
206:14: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
209:7: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
217:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/compression/image_encoder/encoder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/compression/image_encoder/encoder.py'
--------------------------------------------------------------------------------

32:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
35:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
37:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
38:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
40:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
62:7: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
67:9: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
68:18: INFO: Renamed 'tf.GraphDef' to 'tf.compat.v1.GraphDef'
76:18: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
86:7: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
100:7: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
105:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/ptn/metrics.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/ptn/metrics.py'
--------------------------------------------------------------------------------

25:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
49:28: ERROR: Using member tf.contrib.metrics.streaming_mean_squared_error in deprecated module tf.contrib. tf.contrib.metrics.streaming_mean_squared_error cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
79:28: ERROR: Using member tf.contrib.metrics.streaming_mean_squared_error in deprecated module tf.contrib. tf.contrib.metrics.streaming_mean_squared_error cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
103:16: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
104:21: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
105:28: INFO: tf.metrics.mean_iou requires manual check. tf.metrics have been replaced with object oriented versions in TF 2.0 and after. The metric function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
105:28: INFO: Renamed 'tf.metrics.mean_iou' to 'tf.compat.v1.metrics.mean_iou'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/ptn/model_ptn.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/ptn/model_ptn.py'
--------------------------------------------------------------------------------

33:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
139:14: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/ptn/model_rotator.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/ptn/model_rotator.py'
--------------------------------------------------------------------------------

33:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
38:18: INFO: Renamed 'tf.train.batch' to 'tf.compat.v1.train.batch'
57:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
132:32: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
136:29: ERROR: Using member tf.contrib.framework.get_model_variables in deprecated module tf.contrib. tf.contrib.framework.get_model_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
175:32: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
182:29: ERROR: Using member tf.contrib.framework.get_model_variables in deprecated module tf.contrib. tf.contrib.framework.get_model_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
183:22: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
183:40: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
239:12: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/ptn/eval_ptn.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/ptn/eval_ptn.py'
--------------------------------------------------------------------------------

28:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
29:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/ptn/utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/ptn/utils.py'
--------------------------------------------------------------------------------

41:2: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/ptn/eval_rotator.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/ptn/eval_rotator.py'
--------------------------------------------------------------------------------

28:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
29:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/ptn/pretrain_rotator.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/ptn/pretrain_rotator.py'
--------------------------------------------------------------------------------

31:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
32:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
96:19: INFO: Renamed 'tf.train.replica_device_setter' to 'tf.compat.v1.train.replica_device_setter'
124:18: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
126:20: INFO: Renamed 'tf.train.SyncReplicasOptimizer' to 'tf.compat.v1.train.SyncReplicasOptimizer'
139:14: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/ptn/train_ptn.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/ptn/train_ptn.py'
--------------------------------------------------------------------------------

30:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
31:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
100:19: INFO: Renamed 'tf.train.replica_device_setter' to 'tf.compat.v1.train.replica_device_setter'
143:18: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
145:20: INFO: Renamed 'tf.train.SyncReplicasOptimizer' to 'tf.compat.v1.train.SyncReplicasOptimizer'
157:14: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
187:25: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
189:27: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/ptn/input_generator.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/ptn/input_generator.py'
--------------------------------------------------------------------------------

42:15: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
45:14: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
48:13: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
67:13: INFO: Renamed 'tf.TFRecordReader' to 'tf.compat.v1.TFRecordReader'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/ptn/model_voxel_generation.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/ptn/model_voxel_generation.py'
--------------------------------------------------------------------------------

31:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
68:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
82:23: INFO: Renamed 'tf.train.batch' to 'tf.compat.v1.train.batch'
127:34: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
131:31: ERROR: Using member tf.contrib.framework.get_model_variables in deprecated module tf.contrib. tf.contrib.framework.get_model_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
143:34: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
150:31: ERROR: Using member tf.contrib.framework.get_model_variables in deprecated module tf.contrib. tf.contrib.framework.get_model_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
151:24: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
151:42: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
181:10: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
185:10: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
192:19: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/ptn/losses.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/ptn/losses.py'
--------------------------------------------------------------------------------

24:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
46:15: INFO: Added keywords to args of function 'tf.shape'
52:16: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
78:15: INFO: Added keywords to args of function 'tf.shape'
84:15: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
109:15: INFO: Added keywords to args of function 'tf.shape'
114:15: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
140:15: INFO: Added keywords to args of function 'tf.shape'
145:14: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
166:34: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
170:26: ERROR: Using member tf.contrib.framework.get_model_variables in deprecated module tf.contrib. tf.contrib.framework.get_model_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/ptn/nets/perspective_transform.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/ptn/nets/perspective_transform.py'
--------------------------------------------------------------------------------

59:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
60:12: INFO: Added keywords to args of function 'tf.transpose'
64:12: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
87:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
94:10: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
95:10: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
96:10: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
97:16: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
98:17: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
99:16: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
106:14: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
106:26: INFO: Added keywords to args of function 'tf.shape'
107:14: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
107:26: INFO: Added keywords to args of function 'tf.shape'
108:14: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
108:26: INFO: Added keywords to args of function 'tf.shape'
115:11: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
117:11: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
119:11: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
150:16: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
161:13: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
162:13: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
163:13: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
164:13: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
165:13: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
166:13: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
168:17: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
170:17: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
172:17: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
174:17: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
176:17: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
178:17: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
215:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
222:12: INFO: Added keywords to args of function 'tf.transpose'
226:12: INFO: Added keywords to args of function 'tf.transpose'
242:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
276:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/ptn/nets/ptn_rotator.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/ptn/nets/ptn_rotator.py'
--------------------------------------------------------------------------------

34:24: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
34:24: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
36:23: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
36:23: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
38:11: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
38:11: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
40:9: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
40:9: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
43:2: ERROR: Using member tf.contrib.framework.add_model_variable in deprecated module tf.contrib. tf.contrib.framework.add_model_variable cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
44:2: ERROR: Using member tf.contrib.framework.add_model_variable in deprecated module tf.contrib. tf.contrib.framework.add_model_variable cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
52:9: INFO: Added keywords to args of function 'tf.reduce_sum'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/ptn/nets/ptn_vox_decoder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/ptn/nets/ptn_vox_decoder.py'
--------------------------------------------------------------------------------

24:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
34:41: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

35:40: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
35:40: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
46:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
53:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
53:14: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
58:4: ERROR: Using member tf.contrib.framework.add_model_variable in deprecated module tf.contrib. tf.contrib.framework.add_model_variable cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
86:15: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
86:15: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
91:6: ERROR: Using member tf.contrib.framework.add_model_variable in deprecated module tf.contrib. tf.contrib.framework.add_model_variable cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
27:1: ERROR: Using member tf.contrib.framework.add_arg_scope in deprecated module tf.contrib. tf.contrib.framework.add_arg_scope cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
108:26: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
108:26: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/ptn/nets/im2vox_factory.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/ptn/nets/im2vox_factory.py'
--------------------------------------------------------------------------------

61:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
68:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
72:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
76:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
82:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
86:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/ptn/nets/deeprotator_factory.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/ptn/nets/deeprotator_factory.py'
--------------------------------------------------------------------------------

60:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
68:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
72:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
80:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
83:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/ptn/nets/ptn_encoder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/ptn/nets/ptn_encoder.py'
--------------------------------------------------------------------------------

23:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
42:26: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
42:26: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/ptn/nets/perspective_projector.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/ptn/nets/perspective_projector.py'
--------------------------------------------------------------------------------

46:11: INFO: Added keywords to args of function 'tf.transpose'
51:10: INFO: Added keywords to args of function 'tf.reduce_max'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/ptn/nets/ptn_im_decoder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/ptn/nets/ptn_im_decoder.py'
--------------------------------------------------------------------------------

23:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
46:26: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
46:26: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/metarun.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learned_optimizer/metarun.py'
--------------------------------------------------------------------------------

33:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
36:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
38:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
41:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
43:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
45:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
49:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
51:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
55:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
59:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
63:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
65:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
67:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
71:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
73:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
77:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
79:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
81:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
83:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
85:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
87:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
90:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
93:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
96:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
98:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
100:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
103:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
106:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
109:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
114:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
117:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
119:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
121:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
123:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
125:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
127:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
129:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
131:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
133:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
135:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
139:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
141:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
145:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
149:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
153:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
157:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
160:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
166:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
169:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
172:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
175:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
177:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
179:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
183:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
185:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
190:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
194:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
198:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
202:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
204:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
207:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
209:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
212:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
337:26: WARNING: Using member tf.contrib.rnn in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
337:26: ERROR: Using member tf.contrib.rnn in deprecated module tf.contrib. tf.contrib.rnn cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
361:2: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
394:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/metaopt.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learned_optimizer/metaopt.py'
--------------------------------------------------------------------------------

32:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
35:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
37:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
40:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
43:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
45:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
49:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
53:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
161:25: INFO: Renamed 'tf.train.replica_device_setter' to 'tf.compat.v1.train.replica_device_setter'
189:8: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
189:8: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
192:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
192:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
196:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
196:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
202:24: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
202:42: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
205:35: INFO: Added keywords to args of function 'tf.reduce_sum'
209:17: INFO: Renamed 'tf.train.RMSPropOptimizer' to 'tf.compat.v1.train.RMSPropOptimizer'
225:8: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
225:8: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
231:8: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
231:8: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
233:8: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
233:8: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
241:19: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
241:19: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
253:11: INFO: Renamed 'tf.train.Supervisor' to 'tf.compat.v1.train.Supervisor'
273:27: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
273:27: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
286:27: INFO: Renamed 'tf.RunOptions' to 'tf.compat.v1.RunOptions'
286:53: INFO: Renamed 'tf.RunOptions' to 'tf.compat.v1.RunOptions'
288:25: INFO: Renamed 'tf.RunMetadata' to 'tf.compat.v1.RunMetadata'
394:10: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
447:10: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
458:23: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
459:25: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
467:7: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
469:13: INFO: Renamed 'tf.variables_initializer' to 'tf.compat.v1.variables_initializer'
471:14: INFO: Renamed 'tf.train.start_queue_runners' to 'tf.compat.v1.train.start_queue_runners'
482:22: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
482:40: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
485:12: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
485:30: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
493:15: INFO: Renamed 'tf.variables_initializer' to 'tf.compat.v1.variables_initializer'
495:13: INFO: Renamed 'tf.variables_initializer' to 'tf.compat.v1.variables_initializer'
594:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
595:23: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
601:7: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
601:24: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
603:13: INFO: Renamed 'tf.variables_initializer' to 'tf.compat.v1.variables_initializer'
608:22: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
608:40: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
611:12: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
611:30: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
619:15: INFO: Renamed 'tf.variables_initializer' to 'tf.compat.v1.variables_initializer'
621:13: INFO: Renamed 'tf.variables_initializer' to 'tf.compat.v1.variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/hierarchical_rnn.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/hierarchical_rnn.py'
--------------------------------------------------------------------------------

33:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
36:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
40:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
42:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
47:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
51:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
54:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
58:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
174:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
185:20: INFO: tf.random_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
185:20: INFO: Renamed 'tf.random_normal_initializer' to 'tf.compat.v1.random_normal_initializer'
189:28: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
189:28: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
196:33: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
196:33: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
226:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
235:14: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
240:14: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
251:31: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
251:31: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
254:28: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
254:28: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
256:28: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
256:28: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
261:28: INFO: Renamed 'tf.log' to 'tf.math.log'
272:31: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
272:31: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
275:28: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
275:28: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
277:28: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
277:28: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
282:28: INFO: Renamed 'tf.log' to 'tf.math.log'
292:18: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
292:18: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
294:24: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
294:24: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
297:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
297:21: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
324:22: INFO: Renamed 'tf.log' to 'tf.math.log'
328:22: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
332:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
358:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
365:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
432:22: INFO: Added keywords to args of function 'tf.reduce_sum'
495:27: INFO: Renamed 'tf.log' to 'tf.math.log'
498:12: INFO: Added keywords to args of function 'tf.reduce_mean'
517:37: INFO: Added keywords to args of function 'tf.reduce_mean'
521:53: INFO: Renamed 'tf.log' to 'tf.math.log'
522:40: INFO: Renamed 'tf.log' to 'tf.math.log'
527:36: INFO: Renamed 'tf.log' to 'tf.math.log'
548:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
571:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
574:24: INFO: Added keywords to args of function 'tf.reduce_mean'
574:59: INFO: Renamed keyword argument for tf.reduce_mean from keep_dims to keepdims
576:24: INFO: Added keywords to args of function 'tf.reduce_mean'
578:14: INFO: Renamed keyword argument for tf.reduce_mean from keep_dims to keepdims
611:22: INFO: Added keywords to args of function 'tf.reduce_mean'
627:12: INFO: Added keywords to args of function 'tf.reduce_mean'
675:26: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
675:26: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
681:30: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
681:30: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
710:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
712:23: INFO: Added keywords to args of function 'tf.reduce_mean'
713:38: INFO: Renamed keyword argument for tf.reduce_mean from keep_dims to keepdims
741:9: INFO: Renamed 'tf.op_scope' to 'tf.compat.v1.op_scope'
744:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
747:26: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
747:26: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
761:20: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
768:28: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
780:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

780:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/learning_rate_schedule.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/learning_rate_schedule.py'
--------------------------------------------------------------------------------

34:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
35:20: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
35:20: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
36:28: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
36:28: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/global_learning_rate.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/global_learning_rate.py'
--------------------------------------------------------------------------------

32:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
33:20: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
33:20: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
34:27: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
34:27: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/rnn_cells.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/rnn_cells.py'
--------------------------------------------------------------------------------

27:18: INFO: Renamed 'tf.contrib.rnn.RNNCell' to 'tf.compat.v1.nn.rnn_cell.RNNCell'
53:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
54:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
61:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/trainable_optimizer.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/trainable_optimizer.py'
--------------------------------------------------------------------------------

35:25: INFO: Renamed 'tf.train.Optimizer' to 'tf.compat.v1.train.Optimizer'
125:24: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
207:18: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
208:15: INFO: Added keywords to args of function 'tf.shape'
215:14: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
216:19: INFO: Renamed 'tf.placeholder_with_default' to 'tf.compat.v1.placeholder_with_default'
217:18: INFO: Renamed 'tf.placeholder_with_default' to 'tf.compat.v1.placeholder_with_default'
327:14: INFO: Renamed 'tf.is_finite' to 'tf.math.is_finite'
346:18: INFO: Added keywords to args of function 'tf.while_loop'
489:33: INFO: Renamed 'tf.log' to 'tf.math.log'
492:33: INFO: Renamed 'tf.log' to 'tf.math.log'
493:13: INFO: Added keywords to args of function 'tf.reduce_mean'
520:23: INFO: Renamed 'tf.get_collection_ref' to 'tf.compat.v1.get_collection_ref'
526:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
541:10: INFO: Renamed 'tf.get_local_variable' to 'tf.compat.v1.get_local_variable'
550:9: INFO: Added keywords to args of function 'tf.cond'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/trainable_adam.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/trainable_adam.py'
--------------------------------------------------------------------------------

63:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
67:31: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
67:31: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
70:22: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
70:22: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
71:25: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
71:25: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
74:22: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
74:22: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
75:25: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
75:25: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
78:22: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
78:22: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
79:25: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
79:25: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
82:22: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
82:22: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
111:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
120:23: INFO: Added keywords to args of function 'tf.shape'
127:23: INFO: Added keywords to args of function 'tf.shape'
148:22: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/utils.py'
--------------------------------------------------------------------------------

28:9: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
28:18: INFO: Renamed 'tf.is_finite' to 'tf.math.is_finite'
33:9: INFO: Renamed 'tf.log' to 'tf.math.log'
69:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
73:16: INFO: tf.random_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
73:16: INFO: Renamed 'tf.random_normal_initializer' to 'tf.compat.v1.random_normal_initializer'
76:13: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
76:13: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
80:13: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
80:13: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
81:41: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
81:41: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
121:6: INFO: tf.assert_less_equal requires manual check. tf.assert_less_equal has been changed to return None, the data argument has been removed, and arguments have been reordered.
The calls have been converted to compat.v1 for safety (even though  they may already have been correct).
121:6: INFO: Renamed 'tf.assert_less_equal' to 'tf.compat.v1.assert_less_equal'
122:6: INFO: tf.assert_greater_equal requires manual check. tf.assert_greater_equal has been changed to return None, the data argument has been removed, and arguments have been reordered.
The calls have been converted to compat.v1 for safety (even though  they may already have been correct).
122:6: INFO: Renamed 'tf.assert_greater_equal' to 'tf.compat.v1.assert_greater_equal'
129:10: INFO: Added keywords to args of function 'tf.cond'
129:18: INFO: Added keywords to args of function 'tf.reduce_all'
175:16: INFO: Renamed 'tf.unsorted_segment_sum' to 'tf.math.unsorted_segment_sum'
176:40: INFO: Added keywords to args of function 'tf.shape'
207:14: INFO: Added keywords to args of function 'tf.shape'
234:14: INFO: Added keywords to args of function 'tf.shape'
241:20: INFO: Added keywords to args of function 'tf.shape'
264:14: INFO: Added keywords to args of function 'tf.shape'
267:29: INFO: Added keywords to args of function 'tf.shape'
277:6: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
278:6: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/coordinatewise_rnn.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learned_optimizer/optimizer/coordinatewise_rnn.py'
--------------------------------------------------------------------------------

32:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
34:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
39:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
81:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
83:18: INFO: Renamed 'tf.contrib.rnn.MultiRNNCell' to 'tf.compat.v1.nn.rnn_cell.MultiRNNCell'
87:20: INFO: tf.random_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
87:20: INFO: Renamed 'tf.random_normal_initializer' to 'tf.compat.v1.random_normal_initializer'
90:28: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
90:28: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
100:26: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
100:26: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
102:22: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
102:22: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
119:27: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
119:27: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
122:24: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
122:24: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
124:22: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
124:22: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
140:18: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
140:18: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
142:24: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
142:24: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
145:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
145:21: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
160:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
188:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
195:20: INFO: Added keywords to args of function 'tf.shape'
226:53: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/problems/problem_generator.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learned_optimizer/problems/problem_generator.py'
--------------------------------------------------------------------------------

33:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
36:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
95:12: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
99:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
127:12: INFO: Added keywords to args of function 'tf.gradients'
132:35: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
132:52: INFO: Added keywords to args of function 'tf.shape'
135:45: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
167:12: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
201:13: INFO: Added keywords to args of function 'tf.reduce_sum'
210:11: INFO: Added keywords to args of function 'tf.reduce_mean'
210:36: INFO: Added keywords to args of function 'tf.reduce_mean'
221:19: INFO: Added keywords to args of function 'tf.argmax'
235:11: ERROR: Using member tf.contrib.metrics.accuracy in deprecated module tf.contrib. tf.contrib.metrics.accuracy cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
273:17: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
273:17: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
274:17: INFO: Added keywords to args of function 'tf.reduce_sum'
302:14: INFO: Added keywords to args of function 'tf.shape'
307:17: INFO: Added keywords to args of function 'tf.reduce_sum'
361:11: ERROR: Using member tf.contrib.metrics.accuracy in deprecated module tf.contrib. tf.contrib.metrics.accuracy cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
397:12: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
408:14: INFO: Added keywords to args of function 'tf.nn.conv2d'
408:14: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
471:34: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
474:10: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
475:10: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
493:12: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
515:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

515:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
517:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
517:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
518:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
518:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
519:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
519:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
521:24: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
521:24: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
528:16: INFO: Renamed 'tf.variables_initializer' to 'tf.compat.v1.variables_initializer'
530:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
551:10: INFO: Renamed 'tf.log' to 'tf.math.log'
562:12: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
578:12: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
594:12: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
608:12: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
613:16: INFO: Added keywords to args of function 'tf.reduce_sum'
623:12: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
637:9: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
639:9: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
664:12: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
730:16: INFO: Added keywords to args of function 'tf.reduce_sum'
748:11: INFO: Added keywords to args of function 'tf.reduce_sum'
765:11: INFO: Renamed 'tf.log' to 'tf.math.log'
765:43: INFO: Renamed 'tf.log' to 'tf.math.log'
788:12: INFO: Added keywords to args of function 'tf.gradients'
792:40: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
794:45: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
795:23: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
816:11: INFO: Added keywords to args of function 'tf.reduce_sum'
834:14: INFO: Added keywords to args of function 'tf.reduce_min'
835:14: INFO: Added keywords to args of function 'tf.reduce_max'
853:21: INFO: Added keywords to args of function 'tf.reduce_sum'
854:15: INFO: Added keywords to args of function 'tf.reduce_sum'
857:15: INFO: Added keywords to args of function 'tf.reduce_sum'
871:11: INFO: Added keywords to args of function 'tf.reduce_sum'
886:12: INFO: Added keywords to args of function 'tf.reduce_sum'
886:51: INFO: Added keywords to args of function 'tf.reduce_sum'
966:10: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
967:13: INFO: Added keywords to args of function 'tf.transpose'
967:45: INFO: Added keywords to args of function 'tf.transpose'
977:14: INFO: Added keywords to args of function 'tf.transpose'
979:8: INFO: Renamed 'tf.matrix_inverse' to 'tf.linalg.inv'
986:11: INFO: Added keywords to args of function 'tf.reduce_sum'
998:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/problems/problem_spec.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learned_optimizer/problems/problem_spec.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/problems/model_adapter.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learned_optimizer/problems/model_adapter.py'
--------------------------------------------------------------------------------

78:16: INFO: Renamed 'tf.initialize_variables' to 'tf.compat.v1.initialize_variables'
81:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
83:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
116:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
116:27: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
145:29: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
153:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

153:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
176:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/problems/problem_sets.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learned_optimizer/problems/problem_sets.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/learned_optimizer/problems/datasets.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/learned_optimizer/problems/datasets.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/celeba_formatting.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/real_nvp/celeba_formatting.py'
--------------------------------------------------------------------------------

44:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
46:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
47:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
48:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
50:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
72:13: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/imnet_formatting.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/real_nvp/imnet_formatting.py'
--------------------------------------------------------------------------------

48:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
50:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
52:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
79:21: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/real_nvp/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/lsun_formatting.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/real_nvp/lsun_formatting.py'
--------------------------------------------------------------------------------

43:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
45:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
47:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
73:21: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/real_nvp_multiscale_dataset.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/real_nvp/real_nvp_multiscale_dataset.py'
--------------------------------------------------------------------------------

44:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
47:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
50:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
53:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
56:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
58:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
62:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
66:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
69:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
72:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
75:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
82:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
135:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
197:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
302:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
315:15: INFO: Renamed 'tf.mod' to 'tf.math.floormod'
319:23: INFO: Renamed 'tf.mod' to 'tf.math.floormod'
337:15: INFO: Renamed 'tf.mod' to 'tf.math.floormod'
342:12: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
342:12: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
351:16: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
351:16: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
361:26: INFO: Renamed 'tf.log' to 'tf.math.log'
378:26: INFO: Renamed 'tf.log' to 'tf.math.log'
392:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
405:15: INFO: Renamed 'tf.mod' to 'tf.math.floormod'
409:23: INFO: Renamed 'tf.mod' to 'tf.math.floormod'
426:15: INFO: Renamed 'tf.mod' to 'tf.math.floormod'
435:26: INFO: Renamed 'tf.log' to 'tf.math.log'
450:26: INFO: Renamed 'tf.log' to 'tf.math.log'
487:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
518:12: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
518:12: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
527:16: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
527:16: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
535:26: INFO: Renamed 'tf.log' to 'tf.math.log'
552:26: INFO: Renamed 'tf.log' to 'tf.math.log'
571:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
602:26: INFO: Renamed 'tf.log' to 'tf.math.log'
617:26: INFO: Renamed 'tf.log' to 'tf.math.log'
668:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
701:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
764:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
825:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
858:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
870:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
937:16: INFO: Renamed 'tf.train.replica_device_setter' to 'tf.compat.v1.train.replica_device_setter'
938:33: INFO: Renamed 'tf.train.string_input_producer' to 'tf.compat.v1.train.string_input_producer'
940:25: INFO: Renamed 'tf.TFRecordReader' to 'tf.compat.v1.TFRecordReader'
942:27: INFO: Added keywords to args of function 'tf.parse_single_example'
942:27: INFO: Renamed 'tf.parse_single_example' to 'tf.io.parse_single_example'
945:37: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
947:24: INFO: Renamed 'tf.decode_raw' to 'tf.io.decode_raw'
951:29: INFO: Renamed 'tf.train.shuffle_batch' to 'tf.compat.v1.train.shuffle_batch'
957:29: INFO: Renamed 'tf.train.batch' to 'tf.compat.v1.train.batch'
967:22: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
967:40: INFO: Added keywords to args of function 'tf.shape'
970:16: INFO: Renamed 'tf.train.replica_device_setter' to 'tf.compat.v1.train.replica_device_setter'
971:33: INFO: Renamed 'tf.train.string_input_producer' to 'tf.compat.v1.train.string_input_producer'
973:25: INFO: Renamed 'tf.TFRecordReader' to 'tf.compat.v1.TFRecordReader'
975:27: INFO: Added keywords to args of function 'tf.parse_single_example'
975:27: INFO: Renamed 'tf.parse_single_example' to 'tf.io.parse_single_example'
978:37: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
980:24: INFO: Renamed 'tf.decode_raw' to 'tf.io.decode_raw'
987:29: INFO: Renamed 'tf.train.shuffle_batch' to 'tf.compat.v1.train.shuffle_batch'
992:29: INFO: Renamed 'tf.train.batch' to 'tf.compat.v1.train.batch'
999:42: INFO: Removed argument align_corners for function tf.image.resize_images
998:19: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
1001:22: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
1001:40: INFO: Added keywords to args of function 'tf.shape'
1004:16: INFO: Renamed 'tf.train.replica_device_setter' to 'tf.compat.v1.train.replica_device_setter'
1005:33: INFO: Renamed 'tf.train.string_input_producer' to 'tf.compat.v1.train.string_input_producer'
1007:25: INFO: Renamed 'tf.TFRecordReader' to 'tf.compat.v1.TFRecordReader'
1009:27: INFO: Added keywords to args of function 'tf.parse_single_example'
1009:27: INFO: Renamed 'tf.parse_single_example' to 'tf.io.parse_single_example'
1012:37: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
1013:34: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
1014:33: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
1015:33: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
1017:24: INFO: Renamed 'tf.decode_raw' to 'tf.io.decode_raw'
1025:24: INFO: Renamed 'tf.random_crop' to 'tf.image.random_crop'
1028:29: INFO: Renamed 'tf.train.shuffle_batch' to 'tf.compat.v1.train.shuffle_batch'
1034:29: INFO: Renamed 'tf.train.batch' to 'tf.compat.v1.train.batch'
1041:22: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
1041:40: INFO: Added keywords to args of function 'tf.shape'
1046:18: INFO: Added keywords to args of function 'tf.transpose'
1051:18: INFO: Added keywords to args of function 'tf.transpose'
1056:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1056:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
1073:21: INFO: Renamed 'tf.log' to 'tf.math.log'
1073:42: INFO: Renamed 'tf.log' to 'tf.math.log'
1074:25: INFO: Added keywords to args of function 'tf.reduce_sum'
1091:19: INFO: Added keywords to args of function 'tf.reduce_sum'
1092:19: INFO: Added keywords to args of function 'tf.reduce_sum'
1098:27: INFO: Added keywords to args of function 'tf.reduce_mean'
1101:13: INFO: Added keywords to args of function 'tf.reduce_sum'
1101:50: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
1112:24: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
1117:24: INFO: Renamed 'tf.train.RMSPropOptimizer' to 'tf.compat.v1.train.RMSPropOptimizer'
1122:24: INFO: Renamed 'tf.train.MomentumOptimizer' to 'tf.compat.v1.train.MomentumOptimizer'
1125:15: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
1125:15: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
1127:12: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
1127:12: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
1132:12: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
1136:24: INFO: Renamed 'tf.check_numerics' to 'tf.debugging.check_numerics'
1139:15: INFO: Added keywords to args of function 'tf.reduce_sum'
1141:12: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1141:12: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1142:12: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1142:12: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1143:12: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1143:12: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1144:12: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1144:12: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1144:53: INFO: Added keywords to args of function 'tf.reduce_mean'
1145:12: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1145:12: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1145:53: INFO: Added keywords to args of function 'tf.reduce_mean'
1146:12: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1146:12: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1148:27: INFO: Added keywords to args of function 'tf.reduce_mean'
1149:39: INFO: Added keywords to args of function 'tf.reduce_mean'
1150:12: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1150:12: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1152:27: INFO: Added keywords to args of function 'tf.reduce_mean'
1153:39: INFO: Added keywords to args of function 'tf.reduce_mean'
1154:12: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1154:12: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1154:54: INFO: Added keywords to args of function 'tf.reduce_mean'
1155:12: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1155:12: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1157:27: INFO: Added keywords to args of function 'tf.reduce_mean'
1158:39: INFO: Added keywords to args of function 'tf.reduce_mean'
1177:21: INFO: Added keywords to args of function 'tf.transpose'
1180:21: INFO: Added keywords to args of function 'tf.transpose'
1183:12: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1183:12: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
1197:28: INFO: Added keywords to args of function 'tf.transpose'
1202:28: INFO: Added keywords to args of function 'tf.transpose'
1212:12: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1212:12: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
1279:23: INFO: Added keywords to args of function 'tf.transpose'
1284:23: INFO: Added keywords to args of function 'tf.transpose'
1290:23: INFO: Added keywords to args of function 'tf.transpose'
1295:12: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1295:12: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
1320:34: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
1343:27: INFO: Added keywords to args of function 'tf.transpose'
1348:27: INFO: Added keywords to args of function 'tf.transpose'
1353:12: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1353:12: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
1361:32: INFO: Added keywords to args of function 'tf.transpose'
1366:32: INFO: Added keywords to args of function 'tf.transpose'
1371:12: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1371:12: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
1390:25: INFO: Added keywords to args of function 'tf.transpose'
1394:25: INFO: Added keywords to args of function 'tf.transpose'
1399:12: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1399:12: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
1415:12: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1415:12: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
1451:23: INFO: Renamed 'tf.train.replica_device_setter' to 'tf.compat.v1.train.replica_device_setter'
1452:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
1455:20: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
1455:35: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
1458:25: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1458:25: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
1461:19: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
1466:19: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
1466:37: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
1477:12: INFO: Renamed 'tf.train.start_queue_runners' to 'tf.compat.v1.train.start_queue_runners'
1479:29: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1479:29: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
1515:20: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
1531:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
1533:33: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1533:33: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
1536:20: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
1537:19: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
1537:37: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
1540:12: INFO: Renamed 'tf.train.start_queue_runners' to 'tf.compat.v1.train.start_queue_runners'
1554:35: INFO: Renamed 'tf.train.global_step' to 'tf.compat.v1.train.global_step'
1566:30: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
1568:25: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
1582:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
1584:33: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1584:33: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
1587:29: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1587:29: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
1588:20: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
1589:19: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
1589:37: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
1593:22: INFO: Renamed 'tf.train.start_queue_runners' to 'tf.compat.v1.train.start_queue_runners'
1611:35: INFO: Renamed 'tf.train.global_step' to 'tf.compat.v1.train.global_step'
1639:4: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/real_nvp/real_nvp_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/real_nvp/real_nvp_utils.py'
--------------------------------------------------------------------------------

32:15: INFO: Added keywords to args of function 'tf.reduce_mean'
34:14: INFO: Added keywords to args of function 'tf.reduce_max'
36:10: INFO: Added keywords to args of function 'tf.reduce_mean'
53:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
53:10: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
72:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
76:12: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
76:12: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
80:31: INFO: Added keywords to args of function 'tf.reduce_sum'
84:20: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
84:20: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
107:12: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
120:58: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
120:58: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
130:11: INFO: Added keywords to args of function 'tf.nn.max_pool'
130:11: INFO: Renamed keyword argument for tf.nn.max_pool from value to input
130:11: INFO: Renamed 'tf.nn.max_pool' to 'tf.nn.max_pool2d'
181:20: INFO: Added keywords to args of function 'tf.transpose'
182:10: INFO: Renamed 'tf.sparse_to_dense' to 'tf.compat.v1.sparse_to_dense'
213:10: INFO: Added keywords to args of function 'tf.transpose'
236:10: INFO: Added keywords to args of function 'tf.transpose'
254:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
256:26: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
256:26: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
258:27: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
258:27: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
259:43: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
259:43: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
261:52: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
261:52: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
262:46: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
262:46: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
265:30: INFO: Added keywords to args of function 'tf.nn.moments'
285:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

285:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
287:27: INFO: Renamed 'tf.assign_sub' to 'tf.compat.v1.assign_sub'
289:20: INFO: Renamed 'tf.check_numerics' to 'tf.debugging.check_numerics'
290:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

290:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
292:26: INFO: Renamed 'tf.assign_sub' to 'tf.compat.v1.assign_sub'
294:20: INFO: Renamed 'tf.check_numerics' to 'tf.debugging.check_numerics'
296:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

296:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
298:27: INFO: Renamed 'tf.assign_add' to 'tf.compat.v1.assign_add'
318:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
322:26: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
322:26: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
324:27: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
324:27: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
325:43: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
325:43: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
328:30: INFO: Added keywords to args of function 'tf.nn.moments'
343:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

343:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
345:27: INFO: Renamed 'tf.assign_sub' to 'tf.compat.v1.assign_sub'
347:20: INFO: Renamed 'tf.check_numerics' to 'tf.debugging.check_numerics'
349:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

349:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
351:26: INFO: Renamed 'tf.assign_sub' to 'tf.compat.v1.assign_sub'
353:20: INFO: Renamed 'tf.check_numerics' to 'tf.debugging.check_numerics'
355:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

355:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
357:27: INFO: Renamed 'tf.assign_add' to 'tf.compat.v1.assign_add'
379:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
425:11: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
461:12: INFO: Renamed keyword argument for tf.nn.conv2d_transpose from value to input
462:12: INFO: Renamed keyword argument for tf.nn.conv2d_transpose from filter to filters
470:12: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/domain_adaptation/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_preprocess_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_preprocess_test.py'
--------------------------------------------------------------------------------

31:4: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
34:14: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
37:14: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_task_towers.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_task_towers.py'
--------------------------------------------------------------------------------

18:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
75:26: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

129:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
133:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
174:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
178:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
227:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
230:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
258:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
261:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
268:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
292:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
300:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_losses.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_losses.py'
--------------------------------------------------------------------------------

25:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
39:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
46:28: INFO: tf.losses.sigmoid_cross_entropy requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
46:28: INFO: Renamed 'tf.losses.sigmoid_cross_entropy' to 'tf.compat.v1.losses.sigmoid_cross_entropy'
49:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
49:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
51:23: INFO: tf.losses.sigmoid_cross_entropy requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
51:23: INFO: Renamed 'tf.losses.sigmoid_cross_entropy' to 'tf.compat.v1.losses.sigmoid_cross_entropy'
54:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
54:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
59:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
59:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
79:12: INFO: Added keywords to args of function 'tf.reduce_all'
81:27: INFO: Added keywords to args of function 'tf.reduce_sum'
86:12: INFO: Added keywords to args of function 'tf.reduce_all'
88:27: INFO: Added keywords to args of function 'tf.reduce_sum'
93:26: INFO: Added keywords to args of function 'tf.reduce_sum'
96:28: INFO: Renamed 'tf.Print' to 'tf.compat.v1.Print'
98:8: INFO: Added keywords to args of function 'tf.shape'
101:12: INFO: Renamed 'tf.log' to 'tf.math.log'
120:12: INFO: Added keywords to args of function 'tf.reduce_sum'
124:14: INFO: Renamed 'tf.Print' to 'tf.compat.v1.Print'
149:26: INFO: Renamed 'tf.is_finite' to 'tf.math.is_finite'
151:6: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
151:6: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
153:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
153:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
179:11: INFO: tf.losses.softmax_cross_entropy requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
179:11: INFO: Renamed 'tf.losses.softmax_cross_entropy' to 'tf.compat.v1.losses.softmax_cross_entropy'
184:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
184:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
188:11: INFO: tf.losses.softmax_cross_entropy requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
188:11: INFO: Renamed 'tf.losses.softmax_cross_entropy' to 'tf.compat.v1.losses.softmax_cross_entropy'
193:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
193:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
217:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
217:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
265:8: ERROR: Using member (
        tf.contrib.losses.mean_pairwise_squared_error) in deprecated module tf.contrib. (
        tf.contrib.losses.mean_pairwise_squared_error) cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
271:13: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
277:13: ERROR: Using member tf.contrib.losses.mean_pairwise_squared_error in deprecated module tf.contrib. tf.contrib.losses.mean_pairwise_squared_error cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
282:40: ERROR: Using member tf.contrib.losses.mean_squared_error in deprecated module tf.contrib. tf.contrib.losses.mean_squared_error cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
288:13: INFO: Added keywords to args of function 'tf.reduce_mean'
296:13: INFO: Added keywords to args of function 'tf.reduce_mean'
306:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
306:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
338:24: INFO: tf.losses.sigmoid_cross_entropy requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
338:24: INFO: Renamed 'tf.losses.sigmoid_cross_entropy' to 'tf.compat.v1.losses.sigmoid_cross_entropy'
342:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
342:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/hparams.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/hparams.py'
--------------------------------------------------------------------------------

21:12: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
197:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
200:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_preprocess.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_preprocess.py'
--------------------------------------------------------------------------------

127:10: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_eval.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_eval.py'
--------------------------------------------------------------------------------

49:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
51:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
119:31: INFO: Added keywords to args of function 'tf.argmax'
132:33: INFO: Added keywords to args of function 'tf.argmax'
169:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
169:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
219:10: ERROR: Using member tf.contrib.metrics.streaming_accuracy in deprecated module tf.contrib. tf.contrib.metrics.streaming_accuracy cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
220:14: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
225:10: ERROR: Using member tf.contrib.metrics.streaming_accuracy in deprecated module tf.contrib. tf.contrib.metrics.streaming_accuracy cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
226:14: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
237:23: ERROR: Using member tf.contrib.metrics.streaming_accuracy in deprecated module tf.contrib. tf.contrib.metrics.streaming_accuracy cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
238:12: INFO: Added keywords to args of function 'tf.argmax'
244:23: ERROR: Using member tf.contrib.metrics.streaming_accuracy in deprecated module tf.contrib. tf.contrib.metrics.streaming_accuracy cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
245:12: INFO: Added keywords to args of function 'tf.argmax'
251:23: ERROR: Using member tf.contrib.metrics.streaming_accuracy in deprecated module tf.contrib. tf.contrib.metrics.streaming_accuracy cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
252:12: INFO: Added keywords to args of function 'tf.argmax'
289:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
289:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
298:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_utils.py'
--------------------------------------------------------------------------------

22:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
24:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
109:2: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
109:2: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
112:2: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
112:2: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
130:2: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
130:2: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
164:10: INFO: Added keywords to args of function 'tf.reduce_max'
164:31: INFO: Renamed keyword argument for tf.reduce_max from reduction_indices to axis
164:54: INFO: Renamed keyword argument for tf.reduce_max from keep_dims to keepdims
173:2: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
173:2: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
184:2: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
184:2: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
195:2: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
195:2: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_train.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_train.py'
--------------------------------------------------------------------------------

31:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
33:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
102:32: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
106:15: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
106:33: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
108:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
110:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
160:25: INFO: Renamed 'tf.train.Scaffold' to 'tf.compat.v1.train.Scaffold'
165:22: INFO: Renamed 'tf.train.ChiefSessionCreator' to 'tf.compat.v1.train.ChiefSessionCreator'
170:17: INFO: Renamed 'tf.train.StepCounterHook' to 'tf.estimator.StepCounterHook'
177:10: INFO: Renamed 'tf.train.SummarySaverHook' to 'tf.estimator.SummarySaverHook'
187:10: INFO: Renamed 'tf.train.CheckpointSaverHook' to 'tf.estimator.CheckpointSaverHook'
190:22: INFO: Renamed 'tf.train.WorkerSessionCreator' to 'tf.compat.v1.train.WorkerSessionCreator'
193:7: INFO: Renamed 'tf.train.MonitoredSession' to 'tf.compat.v1.train.MonitoredSession'
204:10: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
213:10: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
231:11: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
232:6: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
236:7: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
240:19: INFO: Renamed 'tf.train.replica_device_setter' to 'tf.compat.v1.train.replica_device_setter'
265:33: INFO: Added keywords to args of function 'tf.argmax'
311:24: INFO: tf.train.exponential_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

311:24: INFO: Renamed 'tf.train.exponential_decay' to 'tf.compat.v1.train.exponential_decay'
317:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
317:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
323:34: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
337:30: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
375:15: INFO: Renamed 'tf.train.StepCounterHook' to 'tf.estimator.StepCounterHook'
378:10: INFO: Renamed 'tf.train.CheckpointSaverHook' to 'tf.estimator.CheckpointSaverHook'
379:20: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
385:21: INFO: Renamed 'tf.train.StopAtStepHook' to 'tf.estimator.StopAtStepHook'
400:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
400:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
409:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/pixelda_model.py'
--------------------------------------------------------------------------------

39:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
88:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
90:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
91:14: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
107:26: INFO: tf.random_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
107:26: INFO: Renamed 'tf.random_normal_initializer' to 'tf.compat.v1.random_normal_initializer'
109:26: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

174:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
175:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
220:9: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
245:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
247:12: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
247:12: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
281:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
300:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
343:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
387:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
405:24: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
493:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
543:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
567:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
597:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
642:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
650:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
665:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/baselines/baseline_eval.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/baselines/baseline_eval.py'
--------------------------------------------------------------------------------

32:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
35:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
62:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
62:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
63:12: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
71:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
72:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
100:13: INFO: tf.losses.softmax_cross_entropy requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
100:13: INFO: Renamed 'tf.losses.softmax_cross_entropy' to 'tf.compat.v1.losses.softmax_cross_entropy'
102:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
102:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
106:17: INFO: tf.losses.get_total_loss requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
106:17: INFO: Renamed 'tf.losses.get_total_loss' to 'tf.compat.v1.losses.get_total_loss'
108:29: INFO: Added keywords to args of function 'tf.argmax'
109:19: INFO: Added keywords to args of function 'tf.argmax'
113:12: ERROR: Using member tf.contrib.metrics.streaming_mean in deprecated module tf.contrib. tf.contrib.metrics.streaming_mean cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
115:12: ERROR: Using member tf.contrib.metrics.streaming_accuracy in deprecated module tf.contrib. tf.contrib.metrics.streaming_accuracy cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
120:12: ERROR: Using member tf.contrib.metrics.streaming_recall_at_k in deprecated module tf.contrib. tf.contrib.metrics.streaming_recall_at_k cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
123:4: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
123:4: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
124:4: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
124:4: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
127:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
127:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
141:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/baselines/baseline_train.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/domain_adaptation/pixel_domain_adaptation/baselines/baseline_train.py'
--------------------------------------------------------------------------------

31:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
34:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
87:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
87:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
88:12: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
98:8: INFO: Renamed 'tf.train.replica_device_setter' to 'tf.compat.v1.train.replica_device_setter'
122:15: INFO: tf.losses.softmax_cross_entropy requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
122:15: INFO: Renamed 'tf.losses.softmax_cross_entropy' to 'tf.compat.v1.losses.softmax_cross_entropy'
124:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
124:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
128:19: INFO: tf.losses.get_total_loss requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
128:19: INFO: Renamed 'tf.losses.get_total_loss' to 'tf.compat.v1.losses.get_total_loss'
129:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
129:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
135:6: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
136:10: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
140:22: INFO: tf.train.exponential_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

140:22: INFO: Renamed 'tf.train.exponential_decay' to 'tf.compat.v1.train.exponential_decay'
147:18: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
161:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/datasets/dataset_factory.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/domain_adaptation/datasets/dataset_factory.py'
--------------------------------------------------------------------------------

27:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
95:30: INFO: Renamed 'tf.train.batch' to 'tf.compat.v1.train.batch'
106:13: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/datasets/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/domain_adaptation/datasets/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/datasets/mnist_m.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/domain_adaptation/datasets/mnist_m.py'
--------------------------------------------------------------------------------

31:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
67:13: INFO: Renamed 'tf.TFRecordReader' to 'tf.compat.v1.TFRecordReader'
71:10: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
73:10: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
75:10: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/datasets/download_and_convert_mnist_m.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/domain_adaptation/datasets/download_and_convert_mnist_m.py'
--------------------------------------------------------------------------------

40:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
44:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
81:28: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
116:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
119:11: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
122:23: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
145:15: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
188:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
189:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
194:5: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
194:41: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
237:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/models.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/models.py'
--------------------------------------------------------------------------------

28:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
69:26: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

111:26: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

121:10: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
125:10: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
130:10: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
168:26: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

177:10: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
183:10: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
214:26: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

226:10: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
264:26: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

312:26: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

364:26: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

415:2: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
415:2: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
418:26: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

435:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/grl_op_grads.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/grl_op_grads.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/dsn.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/dsn.py'
--------------------------------------------------------------------------------

34:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
50:9: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
98:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
104:6: INFO: Added keywords to args of function 'tf.argmax'
104:35: INFO: Added keywords to args of function 'tf.argmax'
110:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
110:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
112:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
112:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
121:12: INFO: Added keywords to args of function 'tf.boolean_mask'
171:14: ERROR: Using member tf.contrib.losses.mean_pairwise_squared_error in deprecated module tf.contrib. tf.contrib.losses.mean_pairwise_squared_error cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
173:14: ERROR: Using member tf.contrib.losses.mean_squared_error in deprecated module tf.contrib. tf.contrib.losses.mean_squared_error cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
179:24: INFO: Renamed 'tf.is_finite' to 'tf.math.is_finite'
181:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
181:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
201:14: INFO: Added keywords to args of function 'tf.reduce_min'
202:20: INFO: Added keywords to args of function 'tf.reduce_max'
231:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
235:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
251:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
254:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
260:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
296:2: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
296:2: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
300:2: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
300:2: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
306:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
306:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
310:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
310:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
332:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
344:26: INFO: Renamed 'tf.is_finite' to 'tf.math.is_finite'
347:6: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
347:6: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
349:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
349:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
351:24: INFO: tf.losses.softmax_cross_entropy requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
351:24: INFO: Renamed 'tf.losses.softmax_cross_entropy' to 'tf.compat.v1.losses.softmax_cross_entropy'
354:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
354:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/models_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/models_test.py'
--------------------------------------------------------------------------------

30:13: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
34:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
63:13: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
68:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
77:13: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
82:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
109:12: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
118:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/dsn_train.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/dsn_train.py'
--------------------------------------------------------------------------------

24:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
25:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
27:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
30:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
33:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
36:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
39:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
42:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
45:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
48:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
52:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
54:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
58:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
62:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
66:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
69:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
73:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
77:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
81:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
85:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
89:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
93:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
95:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
97:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
99:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
102:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
104:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
109:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
113:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
116:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
121:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
123:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
129:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
134:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
137:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
164:19: INFO: Renamed 'tf.train.replica_device_setter' to 'tf.compat.v1.train.replica_device_setter'
193:21: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
197:24: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
199:30: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
204:31: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
208:36: INFO: Renamed 'tf.train.shuffle_batch' to 'tf.compat.v1.train.shuffle_batch'
221:36: INFO: Renamed 'tf.train.shuffle_batch' to 'tf.compat.v1.train.shuffle_batch'
234:6: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
234:6: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
235:6: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
235:6: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
248:22: INFO: tf.train.exponential_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

248:22: INFO: Renamed 'tf.train.exponential_decay' to 'tf.compat.v1.train.exponential_decay'
256:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
256:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
257:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
257:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
257:38: INFO: tf.losses.get_total_loss requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
257:38: INFO: Renamed 'tf.losses.get_total_loss' to 'tf.compat.v1.losses.get_total_loss'
259:12: INFO: Renamed 'tf.train.MomentumOptimizer' to 'tf.compat.v1.train.MomentumOptimizer'
260:6: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
260:31: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
278:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/grl_ops.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/grl_ops.py'
--------------------------------------------------------------------------------

24:0: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
24:16: INFO: Renamed 'tf.resource_loader.get_data_files_path' to 'tf.compat.v1.resource_loader.get_data_files_path'
26:17: INFO: Renamed 'tf.resource_loader.get_data_files_path' to 'tf.compat.v1.resource_loader.get_data_files_path'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/dsn_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/dsn_test.py'
--------------------------------------------------------------------------------

28:13: ERROR: Using member tf.contrib.slim.get_or_create_global_step in deprecated module tf.contrib. tf.contrib.slim.get_or_create_global_step cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
29:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
35:16: INFO: Renamed 'tf.assign_add' to 'tf.compat.v1.assign_add'
43:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
52:13: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
55:8: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
79:21: ERROR: Using member tf.contrib.losses.get_losses in deprecated module tf.contrib. tf.contrib.losses.get_losses cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
89:21: ERROR: Using member tf.contrib.losses.get_losses in deprecated module tf.contrib. tf.contrib.losses.get_losses cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
99:21: ERROR: Using member tf.contrib.losses.get_losses in deprecated module tf.contrib. tf.contrib.losses.get_losses cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
109:21: ERROR: Using member tf.contrib.losses.get_losses in deprecated module tf.contrib. tf.contrib.losses.get_losses cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
119:21: ERROR: Using member tf.contrib.losses.get_losses in deprecated module tf.contrib. tf.contrib.losses.get_losses cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
129:21: ERROR: Using member tf.contrib.losses.get_losses in deprecated module tf.contrib. tf.contrib.losses.get_losses cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
131:27: ERROR: Using member tf.contrib.losses.get_regularization_losses in deprecated module tf.contrib. tf.contrib.losses.get_regularization_losses cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
141:21: ERROR: Using member tf.contrib.losses.get_losses in deprecated module tf.contrib. tf.contrib.losses.get_losses cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
143:26: ERROR: Using member tf.contrib.losses.get_regularization_losses in deprecated module tf.contrib. tf.contrib.losses.get_regularization_losses cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
152:21: ERROR: Using member tf.contrib.losses.get_losses in deprecated module tf.contrib. tf.contrib.losses.get_losses cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/dsn_eval.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/dsn_eval.py'
--------------------------------------------------------------------------------

29:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
31:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
33:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
36:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
39:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
42:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
46:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
49:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
52:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
55:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
57:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
60:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
64:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
94:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
94:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
97:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
111:22: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
119:15: ERROR: Using member tf.contrib.metrics.streaming_accuracy in deprecated module tf.contrib. tf.contrib.metrics.streaming_accuracy cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
120:8: INFO: Added keywords to args of function 'tf.argmax'
120:35: INFO: Added keywords to args of function 'tf.argmax'
122:18: INFO: Added keywords to args of function 'tf.argmax'
123:13: INFO: Added keywords to args of function 'tf.argmax'
142:11: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
142:11: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
143:11: INFO: Renamed 'tf.Print' to 'tf.compat.v1.Print'
157:19: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
157:19: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
161:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/losses_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/losses_test.py'
--------------------------------------------------------------------------------

31:13: INFO: Added keywords to args of function 'tf.reduce_sum'
50:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
52:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
56:32: INFO: Added keywords to args of function 'tf.shape'
63:10: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
71:10: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
101:10: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
102:10: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/utils.py'
--------------------------------------------------------------------------------

45:6: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
45:6: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
51:6: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
51:6: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
56:6: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
56:6: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
101:9: INFO: Added keywords to args of function 'tf.reduce_mean'
127:23: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
150:19: INFO: Added keywords to args of function 'tf.reduce_sum'
161:9: INFO: Added keywords to args of function 'tf.transpose'
161:50: INFO: Added keywords to args of function 'tf.transpose'
183:20: INFO: Added keywords to args of function 'tf.reduce_sum'
183:50: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/grl_ops_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/grl_ops_test.py'
--------------------------------------------------------------------------------

25:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
46:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
46:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
47:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
47:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
48:18: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
50:19: INFO: Renamed 'tf.nn.xw_plus_b' to 'tf.compat.v1.nn.xw_plus_b'
59:14: INFO: Renamed 'tf.train.GradientDescentOptimizer' to 'tf.compat.v1.train.GradientDescentOptimizer'
61:49: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
63:49: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/grl_op_shapes.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/grl_op_shapes.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/losses.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/domain_adaptation/domain_separation/losses.py'
--------------------------------------------------------------------------------

34:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
62:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

62:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
64:11: INFO: Added keywords to args of function 'tf.reduce_mean'
65:12: INFO: Added keywords to args of function 'tf.reduce_mean'
66:16: INFO: Added keywords to args of function 'tf.reduce_mean'
69:11: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
98:24: INFO: Renamed 'tf.is_finite' to 'tf.math.is_finite'
103:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
103:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
104:4: INFO: tf.losses.add_loss requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
104:4: INFO: Renamed 'tf.losses.add_loss' to 'tf.compat.v1.losses.add_loss'
121:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

121:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
122:22: INFO: Added keywords to args of function 'tf.reduce_mean'
123:22: INFO: Added keywords to args of function 'tf.reduce_mean'
128:27: INFO: Added keywords to args of function 'tf.transpose'
129:27: INFO: Added keywords to args of function 'tf.transpose'
131:16: INFO: Added keywords to args of function 'tf.reduce_mean'
133:24: INFO: Renamed 'tf.is_finite' to 'tf.math.is_finite'
138:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
138:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
139:4: INFO: tf.losses.add_loss requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
139:4: INFO: Renamed 'tf.losses.add_loss' to 'tf.compat.v1.losses.add_loss'
156:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
157:17: INFO: Added keywords to args of function 'tf.shape'
173:16: INFO: tf.losses.log_loss requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
173:16: INFO: Renamed 'tf.losses.log_loss' to 'tf.compat.v1.losses.log_loss'
179:24: INFO: Renamed 'tf.is_finite' to 'tf.math.is_finite'
187:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
187:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
188:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
188:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
205:21: INFO: Added keywords to args of function 'tf.reduce_mean'
206:20: INFO: Added keywords to args of function 'tf.reduce_mean'
214:9: INFO: Added keywords to args of function 'tf.reduce_mean'
215:9: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
217:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
217:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
219:24: INFO: Renamed 'tf.is_finite' to 'tf.math.is_finite'
221:4: INFO: tf.losses.add_loss requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
221:4: INFO: Renamed 'tf.losses.add_loss' to 'tf.compat.v1.losses.add_loss'
243:12: INFO: Added keywords to args of function 'tf.reduce_all'
245:27: INFO: Added keywords to args of function 'tf.reduce_sum'
250:12: INFO: Added keywords to args of function 'tf.reduce_all'
252:27: INFO: Added keywords to args of function 'tf.reduce_sum'
257:26: INFO: Added keywords to args of function 'tf.reduce_sum'
260:28: INFO: Renamed 'tf.Print' to 'tf.compat.v1.Print'
262:32: INFO: Added keywords to args of function 'tf.shape'
265:12: INFO: Renamed 'tf.log' to 'tf.math.log'
284:12: INFO: Added keywords to args of function 'tf.reduce_sum'
288:14: INFO: Renamed 'tf.Print' to 'tf.compat.v1.Print'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/model_n2nmn/modules.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/qa_kg/model_n2nmn/modules.py'
--------------------------------------------------------------------------------

40:19: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
40:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
41:19: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
41:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
42:19: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
42:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
71:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
73:34: INFO: Renamed keyword argument for tf.nn.l2_normalize from dim to axis
97:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
99:36: INFO: Renamed keyword argument for tf.nn.l2_normalize from dim to axis
123:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
129:49: INFO: Renamed keyword argument for tf.nn.l2_normalize from dim to axis
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/model_n2nmn/model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/qa_kg/model_n2nmn/model.py'
--------------------------------------------------------------------------------

40:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
43:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
43:22: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
45:20: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

47:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
65:28: INFO: Added keywords to args of function 'tf.reduce_sum'
65:42: INFO: Renamed 'tf.log' to 'tf.math.log'
68:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
114:25: INFO: Added keywords to args of function 'tf.reduce_mean'
116:21: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/model_n2nmn/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/qa_kg/model_n2nmn/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/model_n2nmn/assembler.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/qa_kg/model_n2nmn/assembler.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/model_n2nmn/netgen_att.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/qa_kg/model_n2nmn/netgen_att.py'
--------------------------------------------------------------------------------

22:6: INFO: Renamed 'tf.contrib.rnn.BasicLSTMCell' to 'tf.compat.v1.nn.rnn_cell.BasicLSTMCell'
25:9: INFO: Renamed 'tf.contrib.rnn.MultiRNNCell' to 'tf.compat.v1.nn.rnn_cell.MultiRNNCell'
55:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
67:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
68:10: INFO: Added keywords to args of function 'tf.shape'
69:10: INFO: Added keywords to args of function 'tf.shape'
74:21: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
74:21: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
81:40: INFO: Renamed 'tf.nn.dynamic_rnn' to 'tf.compat.v1.nn.dynamic_rnn'
138:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
139:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
139:22: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
143:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
143:21: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
146:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
147:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
147:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
148:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
148:14: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
150:24: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

151:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
151:14: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
152:44: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
152:44: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
155:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
156:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
156:14: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
158:24: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

159:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
159:14: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
162:24: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
162:24: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
186:20: INFO: Added keywords to args of function 'tf.reduce_sum'
191:14: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
188:18: INFO: Renamed 'tf.nn.xw_plus_b' to 'tf.compat.v1.nn.xw_plus_b'
194:39: INFO: Renamed keyword argument for tf.nn.softmax from dim to axis
195:22: INFO: Added keywords to args of function 'tf.reduce_sum'
195:49: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
197:15: INFO: Added keywords to args of function 'tf.reduce_sum'
200:25: INFO: Renamed 'tf.nn.xw_plus_b' to 'tf.compat.v1.nn.xw_plus_b'
207:27: INFO: Added keywords to args of function 'tf.multinomial'
207:27: INFO: Renamed 'tf.multinomial' to 'tf.random.categorical'
210:38: INFO: Added keywords to args of function 'tf.argmax'
222:23: INFO: Added keywords to args of function 'tf.reduce_sum'
224:24: INFO: Added keywords to args of function 'tf.reduce_sum'
225:32: INFO: Renamed 'tf.log' to 'tf.math.log'
233:28: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
235:23: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
236:24: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
244:23: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
244:23: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
277:25: INFO: Renamed 'tf.nn.raw_rnn' to 'tf.compat.v1.nn.raw_rnn'
285:18: INFO: Added keywords to args of function 'tf.reduce_sum'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/util/nn.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/qa_kg/util/nn.py'
--------------------------------------------------------------------------------

34:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
37:28: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

39:27: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
39:27: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
42:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
42:14: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
45:15: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
45:15: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
48:6: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
48:27: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
52:9: INFO: Renamed 'tf.nn.xw_plus_b' to 'tf.compat.v1.nn.xw_plus_b'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/util/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/qa_kg/util/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/util/misc.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/qa_kg/util/misc.py'
--------------------------------------------------------------------------------

35:18: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
64:15: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
71:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
72:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
73:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
74:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/util/data_reader.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/qa_kg/util/data_reader.py'
--------------------------------------------------------------------------------

42:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
52:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
59:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
69:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
178:8: INFO: Renamed 'tf.logging.warning' to 'tf.compat.v1.logging.warning'
182:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
198:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
199:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
200:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/exp_1_hop/test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/qa_kg/exp_1_hop/test.py'
--------------------------------------------------------------------------------

28:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
29:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
36:2: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
54:19: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
55:18: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
71:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
72:11: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
74:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
76:19: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
81:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
127:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
135:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/exp_1_hop/config.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/qa_kg/exp_1_hop/config.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/qa_kg/exp_1_hop/train_gt_layout.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/qa_kg/exp_1_hop/train_gt_layout.py'
--------------------------------------------------------------------------------

36:2: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
54:19: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
55:18: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
56:20: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
58:20: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
84:20: INFO: Added keywords to args of function 'tf.reduce_mean'
85:24: INFO: Added keywords to args of function 'tf.reduce_mean'
91:11: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
104:15: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
104:15: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
104:53: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
106:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
107:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
108:16: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
110:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
110:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
111:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
111:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
112:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
112:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
114:19: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
114:19: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
117:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
118:11: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
119:19: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
169:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
186:6: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
187:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
189:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
194:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/global_objectives/loss_layers_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/global_objectives/loss_layers_test.py'
--------------------------------------------------------------------------------

38:25: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
40:8: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
40:31: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
53:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
60:25: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
62:8: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
62:31: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
88:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
128:11: INFO: Added keywords to args of function 'tf.reduce_sum'
130:20: INFO: Added keywords to args of function 'tf.reduce_sum'
142:11: INFO: Added keywords to args of function 'tf.reduce_mean'
172:42: INFO: Added keywords to args of function 'tf.reduce_sum'
178:18: INFO: Added keywords to args of function 'tf.reduce_sum'
180:18: INFO: Added keywords to args of function 'tf.reduce_sum'
182:16: INFO: Added keywords to args of function 'tf.reduce_sum'
201:11: INFO: Added keywords to args of function 'tf.reduce_sum'
202:20: INFO: Added keywords to args of function 'tf.reduce_sum'
216:25: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
218:8: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
218:31: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
224:8: ERROR: Using member tf.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits in deprecated module tf.contrib. tf.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
228:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
238:25: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
240:8: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
240:31: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
252:8: ERROR: Using member tf.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits in deprecated module tf.contrib. tf.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
256:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
266:25: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
268:8: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
268:31: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
273:28: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
273:28: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
281:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
295:25: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
297:8: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
297:31: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
316:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
329:25: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
331:8: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
331:31: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
351:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
408:25: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
410:8: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
410:31: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
414:28: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
414:28: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
419:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
428:25: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
430:8: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
430:31: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
437:28: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
437:28: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
443:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
471:25: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
473:8: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
473:31: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
477:28: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
477:28: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
482:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
493:25: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
495:8: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
495:31: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
502:28: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
502:28: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
508:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
545:25: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
547:8: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
547:31: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
566:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
579:25: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
581:8: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
581:31: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
601:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
615:25: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
617:8: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
617:31: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
623:28: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
623:28: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
631:28: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
631:28: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
640:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
652:25: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
668:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
678:25: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
680:8: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
680:31: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
689:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
748:25: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
750:8: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
750:31: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
762:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
777:25: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
779:8: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
779:31: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
798:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
812:25: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
814:8: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
814:31: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
820:28: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
820:28: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
828:28: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
828:28: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
837:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
847:25: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
867:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
923:25: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
925:8: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
925:31: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
937:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
952:25: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
954:8: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
954:31: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
973:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
983:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
983:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
987:16: INFO: Renamed 'tf.train.GradientDescentOptimizer' to 'tf.compat.v1.train.GradientDescentOptimizer'
991:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
997:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
997:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
1001:16: INFO: Renamed 'tf.train.GradientDescentOptimizer' to 'tf.compat.v1.train.GradientDescentOptimizer'
1005:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
1116:8: INFO: Renamed 'tf.train.GradientDescentOptimizer' to 'tf.compat.v1.train.GradientDescentOptimizer'
1120:4: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
1198:11: INFO: Added keywords to args of function 'tf.reduce_sum'
1204:20: INFO: Added keywords to args of function 'tf.reduce_sum'
1206:14: ERROR: Using member tf.contrib.framework.get_unique_variable in deprecated module tf.contrib. tf.contrib.framework.get_unique_variable cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
1207:23: ERROR: Using member tf.contrib.framework.get_unique_variable in deprecated module tf.contrib. tf.contrib.framework.get_unique_variable cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
1209:22: INFO: Added keywords to args of function 'tf.gradients'
1210:31: INFO: Added keywords to args of function 'tf.gradients'
1213:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
1275:22: INFO: Added keywords to args of function 'tf.reduce_sum'
1282:22: INFO: Added keywords to args of function 'tf.reduce_sum'
1288:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
1304:13: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
1306:13: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
1325:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/global_objectives/util.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/global_objectives/util.py'
--------------------------------------------------------------------------------

80:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

80:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
88:27: INFO: Renamed 'tf.log' to 'tf.math.log'
129:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

129:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
179:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

179:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
265:16: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
267:4: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
269:28: ERROR: Using member tf.contrib.framework.model_variable in deprecated module tf.contrib. tf.contrib.framework.model_variable cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
273:20: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
273:20: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
278:8: INFO: Added keywords to args of function 'tf.reduce_sum'
281:17: ERROR: Using member tf.contrib.framework.model_variable in deprecated module tf.contrib. tf.contrib.framework.model_variable cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
285:20: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
285:20: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
290:46: INFO: Added keywords to args of function 'tf.reduce_sum'
293:4: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
295:17: INFO: Renamed 'tf.div' to 'tf.compat.v1.div'
313:17: INFO: Added keywords to args of function 'tf.convert_to_tensor'
330:11: INFO: Added keywords to args of function 'tf.convert_to_tensor'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/global_objectives/loss_layers.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/global_objectives/loss_layers.py'
--------------------------------------------------------------------------------

37:24: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
37:24: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
105:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
130:13: ERROR: Using member tf.contrib.framework.model_variable in deprecated module tf.contrib. tf.contrib.framework.model_variable cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
134:20: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
134:20: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
155:17: INFO: Renamed 'tf.log' to 'tf.math.log'
159:29: INFO: Added keywords to args of function 'tf.reduce_sum'
165:18: INFO: Renamed 'tf.div' to 'tf.compat.v1.div'
217:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

217:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
238:11: INFO: Added keywords to args of function 'tf.reduce_mean'
251:24: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
251:24: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
323:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
358:17: INFO: Renamed 'tf.log' to 'tf.math.log'
381:24: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
381:24: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
447:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
482:17: INFO: Renamed 'tf.log' to 'tf.math.log'
505:24: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
505:24: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
592:24: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
592:24: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
662:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
697:17: INFO: Renamed 'tf.log' to 'tf.math.log'
735:11: INFO: Added keywords to args of function 'tf.convert_to_tensor'
827:16: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
829:4: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
830:20: ERROR: Using member tf.contrib.framework.model_variable in deprecated module tf.contrib. tf.contrib.framework.model_variable cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
838:4: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
898:15: INFO: Renamed 'tf.log' to 'tf.math.log'
904:9: INFO: Added keywords to args of function 'tf.reduce_sum'
926:15: INFO: Renamed 'tf.log' to 'tf.math.log'
930:9: INFO: Added keywords to args of function 'tf.reduce_sum'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/global_objectives/util_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/global_objectives/util_test.py'
--------------------------------------------------------------------------------

32:11: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
49:8: ERROR: Using member tf.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits in deprecated module tf.contrib. tf.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
69:8: ERROR: Using member tf.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits in deprecated module tf.contrib. tf.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
122:8: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
126:8: ERROR: Using member tf.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits in deprecated module tf.contrib. tf.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
131:8: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
135:8: ERROR: Using member tf.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits in deprecated module tf.contrib. tf.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
140:20: INFO: Added keywords to args of function 'tf.reduce_sum'
143:25: INFO: Added keywords to args of function 'tf.gradients'
146:8: INFO: Added keywords to args of function 'tf.reduce_sum'
147:8: INFO: Added keywords to args of function 'tf.reduce_sum'
148:25: INFO: Added keywords to args of function 'tf.gradients'
150:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
151:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
160:14: INFO: Renamed 'tf.truncated_normal' to 'tf.random.truncated_normal'
177:14: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
187:14: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
208:11: INFO: Added keywords to args of function 'tf.reduce_sum'
211:22: INFO: Added keywords to args of function 'tf.reduce_sum'
212:22: INFO: Added keywords to args of function 'tf.reduce_sum'
221:14: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
241:8: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
241:31: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
245:22: INFO: Added keywords to args of function 'tf.reduce_mean'
248:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
255:8: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
255:31: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
262:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
280:8: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
280:31: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
281:26: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
285:43: INFO: Added keywords to args of function 'tf.reduce_sum'
286:32: INFO: Added keywords to args of function 'tf.reduce_sum'
291:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
306:14: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
326:14: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/global_objectives/loss_layers_example.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/global_objectives/loss_layers_example.py'
--------------------------------------------------------------------------------

139:11: INFO: Added keywords to args of function 'tf.reduce_mean'
141:11: INFO: Added keywords to args of function 'tf.reduce_mean'
146:18: INFO: tf.train.polynomial_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

146:18: INFO: Renamed 'tf.train.polynomial_decay' to 'tf.compat.v1.train.polynomial_decay'
154:14: INFO: Renamed 'tf.train.GradientDescentOptimizer' to 'tf.compat.v1.train.GradientDescentOptimizer'
165:7: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
167:13: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
186:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
189:12: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
202:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
205:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
210:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
210:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
211:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/global_objectives/test_all.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/global_objectives/test_all.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lm_commonsense/utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lm_commonsense/utils.py'
--------------------------------------------------------------------------------

26:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
40:9: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
231:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lm_commonsense/eval.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lm_commonsense/eval.py'
--------------------------------------------------------------------------------

27:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
32:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
143:11: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
146:6: INFO: Renamed 'tf.reset_default_graph' to 'tf.compat.v1.reset_default_graph'
147:18: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
149:14: INFO: Renamed 'tf.train.import_meta_graph' to 'tf.compat.v1.train.import_meta_graph'
153:14: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
167:11: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
190:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/rebar/logger.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/rebar/logger.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/rebar/config.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/rebar/config.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/rebar/datasets.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/rebar/datasets.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/rebar/rebar.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/rebar/rebar.py'
--------------------------------------------------------------------------------

34:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
52:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
53:13: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
56:22: INFO: Added keywords to args of function 'tf.shape'
63:42: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
79:27: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
92:63: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
105:20: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

175:46: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

202:46: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

248:46: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

273:46: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

312:11: INFO: Added keywords to args of function 'tf.transpose'
321:11: INFO: Added keywords to args of function 'tf.reduce_mean'
326:26: INFO: Added keywords to args of function 'tf.reduce_mean'
344:27: INFO: Added keywords to args of function 'tf.reduce_mean'
347:19: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
350:22: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
359:38: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
374:25: INFO: Added keywords to args of function 'tf.reduce_mean'
378:25: INFO: Added keywords to args of function 'tf.reduce_mean'
386:16: INFO: Added keywords to args of function 'tf.reduce_mean'
387:31: INFO: Renamed 'tf.log' to 'tf.math.log'
387:38: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
435:49: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
451:8: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
452:8: INFO: Renamed 'tf.check_numerics' to 'tf.debugging.check_numerics'
465:31: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
554:20: INFO: Added keywords to args of function 'tf.reduce_mean'
586:20: INFO: Added keywords to args of function 'tf.reduce_mean'
615:18: INFO: Added keywords to args of function 'tf.gradients'
615:31: INFO: Added keywords to args of function 'tf.reduce_sum'
624:15: INFO: Added keywords to args of function 'tf.reduce_sum'
628:13: INFO: Added keywords to args of function 'tf.reduce_sum'
644:20: INFO: Added keywords to args of function 'tf.reduce_mean'
775:30: INFO: Added keywords to args of function 'tf.nn.moments'
790:53: INFO: Added keywords to args of function 'tf.reduce_mean'
794:47: INFO: Added keywords to args of function 'tf.reduce_mean'
804:25: INFO: Added keywords to args of function 'tf.reduce_mean'
810:16: INFO: Added keywords to args of function 'tf.gradients'
812:51: INFO: Added keywords to args of function 'tf.reduce_mean'
819:14: INFO: Added keywords to args of function 'tf.gradients'
821:49: INFO: Added keywords to args of function 'tf.reduce_mean'
826:47: INFO: Added keywords to args of function 'tf.reduce_mean'
829:18: INFO: Added keywords to args of function 'tf.gradients'
829:31: INFO: Added keywords to args of function 'tf.reduce_mean'
831:30: INFO: Added keywords to args of function 'tf.reduce_mean'
847:53: INFO: Added keywords to args of function 'tf.reduce_mean'
851:47: INFO: Added keywords to args of function 'tf.reduce_mean'
858:25: INFO: Added keywords to args of function 'tf.reduce_mean'
886:16: INFO: Added keywords to args of function 'tf.reduce_mean'
887:31: INFO: Renamed 'tf.log' to 'tf.math.log'
887:38: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
906:16: INFO: Added keywords to args of function 'tf.reduce_mean'
907:31: INFO: Renamed 'tf.log' to 'tf.math.log'
907:38: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
926:16: INFO: Added keywords to args of function 'tf.reduce_mean'
927:31: INFO: Renamed 'tf.log' to 'tf.math.log'
927:38: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
946:65: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
952:16: INFO: Added keywords to args of function 'tf.reduce_mean'
953:31: INFO: Renamed 'tf.log' to 'tf.math.log'
953:38: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
972:65: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
979:16: INFO: Added keywords to args of function 'tf.reduce_mean'
980:31: INFO: Renamed 'tf.log' to 'tf.math.log'
980:38: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
1018:9: INFO: Added keywords to args of function 'tf.reduce_mean'
1022:33: INFO: Added keywords to args of function 'tf.reduce_mean'
1023:24: INFO: Added keywords to args of function 'tf.reduce_mean'
1032:21: INFO: Renamed 'tf.log' to 'tf.math.log'
1032:28: INFO: Added keywords to args of function 'tf.reduce_mean'
1040:65: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
1046:16: INFO: Added keywords to args of function 'tf.reduce_mean'
1047:31: INFO: Renamed 'tf.log' to 'tf.math.log'
1047:38: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
1087:18: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/rebar/download_data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/rebar/download_data.py'
--------------------------------------------------------------------------------

65:2: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/rebar/utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/rebar/utils.py'
--------------------------------------------------------------------------------

59:13: INFO: Renamed 'tf.log' to 'tf.math.log'
62:9: INFO: Renamed 'tf.log' to 'tf.math.log'
65:17: INFO: Added keywords to args of function 'tf.reduce_mean'
68:8: INFO: Added keywords to args of function 'tf.reduce_sum'
68:30: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
68:42: INFO: Added keywords to args of function 'tf.shape'
103:9: INFO: Added keywords to args of function 'tf.reduce_sum'
109:9: INFO: Added keywords to args of function 'tf.reduce_mean'
110:9: INFO: Added keywords to args of function 'tf.reduce_mean'
111:6: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
111:18: INFO: Added keywords to args of function 'tf.shape'
113:9: INFO: Added keywords to args of function 'tf.reduce_sum'
116:19: INFO: Renamed 'tf.rsqrt' to 'tf.math.rsqrt'
116:39: INFO: Renamed 'tf.rsqrt' to 'tf.math.rsqrt'
130:6: INFO: Added keywords to args of function 'tf.reduce_max'
131:12: INFO: Renamed 'tf.log' to 'tf.math.log'
131:19: INFO: Added keywords to args of function 'tf.reduce_sum'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/rebar/rebar_train.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/rebar/rebar_train.py'
--------------------------------------------------------------------------------

39:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
41:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
43:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
45:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
48:10: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
49:16: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
84:19: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
84:19: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
87:7: INFO: Renamed 'tf.train.Supervisor' to 'tf.compat.v1.train.Supervisor'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/train_mask_gan.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/train_mask_gan.py'
--------------------------------------------------------------------------------

78:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
81:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
83:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
85:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
87:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
91:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
93:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
94:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
95:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
96:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
98:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
102:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
104:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
106:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
110:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
113:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
118:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
121:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
124:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
126:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
129:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
134:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
137:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
140:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
141:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
142:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
145:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
147:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
149:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
153:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
156:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
158:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
159:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
161:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
164:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
166:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
168:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
172:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
176:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
178:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
180:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
182:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
186:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
191:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
197:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
199:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
201:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
202:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
204:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
209:12: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
250:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
252:25: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
254:13: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
256:24: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
259:11: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
261:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
263:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
353:15: INFO: Added keywords to args of function 'tf.reduce_mean'
379:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

379:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
380:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
380:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
381:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
381:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
383:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

383:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
384:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
384:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
384:39: INFO: Added keywords to args of function 'tf.reduce_mean'
385:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
385:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
386:22: INFO: Added keywords to args of function 'tf.reduce_mean'
388:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

388:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
389:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

389:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
390:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
390:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
390:40: INFO: Added keywords to args of function 'tf.reduce_mean'
392:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

392:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
395:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

395:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
398:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

398:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
401:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

401:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
404:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

404:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
405:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
405:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
406:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
406:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
407:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
407:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
408:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
408:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
409:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
409:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
412:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

412:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
413:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
413:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
415:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

415:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
426:23: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
426:23: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
427:29: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
428:20: INFO: tf.summary.text requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
428:20: INFO: Renamed 'tf.summary.text' to 'tf.compat.v1.summary.text'
431:10: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
506:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
519:19: INFO: Renamed 'tf.train.replica_device_setter' to 'tf.compat.v1.train.replica_device_setter'
521:11: INFO: Renamed 'tf.container' to 'tf.compat.v1.container'
531:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
542:13: INFO: Renamed 'tf.train.Supervisor' to 'tf.compat.v1.train.Supervisor'
694:16: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
760:40: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
761:22: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
770:44: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
771:20: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
780:45: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
781:20: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
789:41: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
790:20: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
856:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
860:4: INFO: Renamed 'tf.logging.warning' to 'tf.compat.v1.logging.warning'
863:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
864:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
885:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
895:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
976:26: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
977:8: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
985:30: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
986:6: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
992:31: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
993:6: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
999:27: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
1000:6: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
1017:2: INFO: Renamed 'tf.logging.error' to 'tf.compat.v1.logging.error'
1035:4: INFO: Renamed 'tf.logging.error' to 'tf.compat.v1.logging.error'
1042:9: INFO: Renamed 'tf.container' to 'tf.compat.v1.container'
1056:29: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
1058:19: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
1062:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
1068:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
1132:2: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
1135:10: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
1138:10: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
1141:10: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
1144:10: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
1167:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/generate_samples.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/generate_samples.py'
--------------------------------------------------------------------------------

56:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
59:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
60:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
63:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
66:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
204:10: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
243:2: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
244:16: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
281:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/sample_shuffler.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/sample_shuffler.py'
--------------------------------------------------------------------------------

40:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
41:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
42:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
44:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
47:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
50:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
72:16: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
82:20: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
84:21: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
95:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/pretrain_mask_gan.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/pretrain_mask_gan.py'
--------------------------------------------------------------------------------

35:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
38:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
42:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
101:32: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
102:14: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
108:33: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
109:12: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
195:32: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
196:14: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
202:33: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
203:12: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/regularization/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/regularization/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/regularization/variational_dropout.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/regularization/variational_dropout.py'
--------------------------------------------------------------------------------

25:32: INFO: Renamed 'tf.contrib.rnn.RNNCell' to 'tf.compat.v1.nn.rnn_cell.RNNCell'
37:23: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/regularization/zoneout.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/regularization/zoneout.py'
--------------------------------------------------------------------------------

25:21: INFO: Renamed 'tf.contrib.rnn.RNNCell' to 'tf.compat.v1.nn.rnn_cell.RNNCell'
50:25: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
50:43: INFO: Added keywords to args of function 'tf.shape'
61:21: INFO: Renamed 'tf.contrib.rnn.LSTMStateTuple' to 'tf.nn.rnn_cell.LSTMStateTuple'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_vd.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_vd.py'
--------------------------------------------------------------------------------

28:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
71:22: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
93:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
94:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
94:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
97:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
100:13: INFO: Renamed 'tf.contrib.rnn.BasicLSTMCell' to 'tf.compat.v1.nn.rnn_cell.BasicLSTMCell'
114:11: INFO: Renamed 'tf.contrib.rnn.MultiRNNCell' to 'tf.compat.v1.nn.rnn_cell.MultiRNNCell'
125:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
131:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
131:20: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
133:26: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
133:26: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
139:24: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
139:24: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
140:26: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
140:26: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
147:25: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
154:29: INFO: Renamed 'tf.nn.dynamic_rnn' to 'tf.compat.v1.nn.dynamic_rnn'
164:22: INFO: Renamed 'tf.nn.dynamic_rnn' to 'tf.compat.v1.nn.dynamic_rnn'
183:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
184:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
185:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
185:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
188:15: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
188:15: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
193:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
198:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
198:10: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
199:32: INFO: Renamed 'tf.truncated_normal' to 'tf.random.truncated_normal'
200:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
200:10: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
203:13: INFO: Added keywords to args of function 'tf.nn.conv1d'
203:13: INFO: Renamed keyword argument for tf.nn.conv1d from value to input
218:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
219:20: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

222:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
223:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
223:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
226:20: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

227:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
227:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
231:18: INFO: Renamed 'tf.nn.xw_plus_b' to 'tf.compat.v1.nn.xw_plus_b'
235:16: INFO: Added keywords to args of function 'tf.reduce_mean'
253:12: INFO: Renamed 'tf.Print' to 'tf.compat.v1.Print'
255:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
256:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
256:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
259:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
262:13: INFO: Renamed 'tf.contrib.rnn.BasicLSTMCell' to 'tf.compat.v1.nn.rnn_cell.BasicLSTMCell'
276:15: INFO: Renamed 'tf.contrib.rnn.MultiRNNCell' to 'tf.compat.v1.nn.rnn_cell.MultiRNNCell'
298:23: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
304:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
308:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
308:20: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
310:18: INFO: Renamed 'tf.matrix_transpose' to 'tf.linalg.matrix_transpose'
311:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
311:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
313:19: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
313:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
322:10: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
340:27: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
340:27: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
341:22: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
362:24: ERROR: Using member tf.contrib.distributions.Categorical in deprecated module tf.contrib. tf.contrib.distributions.Categorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
368:19: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
398:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
401:13: INFO: Renamed 'tf.contrib.rnn.BasicLSTMCell' to 'tf.compat.v1.nn.rnn_cell.BasicLSTMCell'
415:15: INFO: Renamed 'tf.contrib.rnn.MultiRNNCell' to 'tf.compat.v1.nn.rnn_cell.MultiRNNCell'
421:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
424:26: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
424:26: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
427:26: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
427:26: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
432:25: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
440:10: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
462:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
465:13: INFO: Renamed 'tf.contrib.rnn.BasicLSTMCell' to 'tf.compat.v1.nn.rnn_cell.BasicLSTMCell'
479:15: INFO: Renamed 'tf.contrib.rnn.MultiRNNCell' to 'tf.compat.v1.nn.rnn_cell.MultiRNNCell'
501:23: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
507:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
510:19: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
510:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
514:10: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
526:15: ERROR: Using member tf.contrib.layers.linear in deprecated module tf.contrib. tf.contrib.layers.linear cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
544:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
545:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
545:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
549:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
550:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
550:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
557:18: INFO: Renamed 'tf.Print' to 'tf.compat.v1.Print'
562:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
596:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_nas.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_nas.py'
--------------------------------------------------------------------------------

33:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
80:22: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
104:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
105:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
105:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
108:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
128:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
134:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
134:20: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
136:26: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
136:26: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
140:24: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
140:24: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
141:26: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
141:26: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
144:28: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

149:10: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
173:8: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
198:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
199:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
199:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
202:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
230:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
234:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
234:20: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
236:18: INFO: Renamed 'tf.matrix_transpose' to 'tf.linalg.matrix_transpose'
237:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
237:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
239:19: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
239:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
242:21: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

246:10: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
257:25: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
257:25: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
266:22: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
297:22: ERROR: Using member tf.contrib.distributions.Categorical in deprecated module tf.contrib. tf.contrib.distributions.Categorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
301:17: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
320:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/models/seq2seq.py'
--------------------------------------------------------------------------------

29:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
69:22: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
77:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
78:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
78:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
81:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
84:13: WARNING: tf.contrib.rnn.LayerNormBasicLSTMCell requires manual check. (Manual edit required) `tf.contrib.rnn.LayerNormBasicLSTMCell` has been migrated to `tfa.rnn.LayerNormLSTMCell` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
84:13: WARNING: Using member tf.contrib.rnn.LayerNormBasicLSTMCell in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
84:13: ERROR: Using member tf.contrib.rnn.LayerNormBasicLSTMCell in deprecated module tf.contrib. tf.contrib.rnn.LayerNormBasicLSTMCell cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
96:11: INFO: Renamed 'tf.contrib.rnn.MultiRNNCell' to 'tf.compat.v1.nn.rnn_cell.MultiRNNCell'
107:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
110:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
110:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
113:24: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
113:24: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
114:26: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
114:26: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
119:10: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
131:8: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
154:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
157:13: WARNING: tf.contrib.rnn.LayerNormBasicLSTMCell requires manual check. (Manual edit required) `tf.contrib.rnn.LayerNormBasicLSTMCell` has been migrated to `tfa.rnn.LayerNormLSTMCell` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
157:13: WARNING: Using member tf.contrib.rnn.LayerNormBasicLSTMCell in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
157:13: ERROR: Using member tf.contrib.rnn.LayerNormBasicLSTMCell in deprecated module tf.contrib. tf.contrib.rnn.LayerNormBasicLSTMCell cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
169:15: INFO: Renamed 'tf.contrib.rnn.MultiRNNCell' to 'tf.compat.v1.nn.rnn_cell.MultiRNNCell'
188:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
190:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
190:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
192:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
192:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
194:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
194:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
196:19: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
196:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
200:10: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
211:25: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
211:25: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
220:22: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
241:22: ERROR: Using member tf.contrib.distributions.Categorical in deprecated module tf.contrib. tf.contrib.distributions.Categorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
245:17: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
264:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/bidirectional_vd.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/models/bidirectional_vd.py'
--------------------------------------------------------------------------------

25:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
40:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
41:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
41:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
44:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
47:13: INFO: Renamed 'tf.contrib.rnn.BasicLSTMCell' to 'tf.compat.v1.nn.rnn_cell.BasicLSTMCell'
61:15: INFO: Renamed 'tf.contrib.rnn.MultiRNNCell' to 'tf.compat.v1.nn.rnn_cell.MultiRNNCell'
65:15: INFO: Renamed 'tf.contrib.rnn.MultiRNNCell' to 'tf.compat.v1.nn.rnn_cell.MultiRNNCell'
82:23: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
90:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
90:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
93:17: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
93:17: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
97:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
98:22: INFO: Renamed 'tf.contrib.rnn.static_bidirectional_rnn' to 'tf.compat.v1.nn.static_bidirectional_rnn'
105:20: ERROR: Using member tf.contrib.layers.linear in deprecated module tf.contrib. tf.contrib.layers.linear cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
106:20: INFO: Added keywords to args of function 'tf.transpose'
109:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
110:15: ERROR: Using member tf.contrib.layers.linear in deprecated module tf.contrib. tf.contrib.layers.linear cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
111:15: INFO: Added keywords to args of function 'tf.transpose'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_zaremba.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/models/rnn_zaremba.py'
--------------------------------------------------------------------------------

25:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
39:2: INFO: Renamed 'tf.logging.warning' to 'tf.compat.v1.logging.warning'
43:16: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
43:16: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
44:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
47:13: INFO: Renamed 'tf.contrib.rnn.BasicLSTMCell' to 'tf.compat.v1.nn.rnn_cell.BasicLSTMCell'
56:15: WARNING: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
56:15: ERROR: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib. tf.contrib.rnn.DropoutWrapper cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
59:15: INFO: Renamed 'tf.contrib.rnn.MultiRNNCell' to 'tf.compat.v1.nn.rnn_cell.MultiRNNCell'
65:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
67:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
67:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
69:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
69:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
71:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
71:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
73:19: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
73:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
76:21: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

81:10: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
94:25: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
94:25: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
103:22: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
113:22: ERROR: Using member tf.contrib.distributions.Categorical in deprecated module tf.contrib. tf.contrib.distributions.Categorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
121:17: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
132:8: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
147:2: INFO: Renamed 'tf.logging.warning' to 'tf.compat.v1.logging.warning'
153:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
156:13: INFO: Renamed 'tf.contrib.rnn.BasicLSTMCell' to 'tf.compat.v1.nn.rnn_cell.BasicLSTMCell'
165:15: WARNING: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
165:15: ERROR: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib. tf.contrib.rnn.DropoutWrapper cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
168:15: INFO: Renamed 'tf.contrib.rnn.MultiRNNCell' to 'tf.compat.v1.nn.rnn_cell.MultiRNNCell'
174:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
176:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
176:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
179:19: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
179:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
182:21: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

186:10: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
192:15: ERROR: Using member tf.contrib.layers.linear in deprecated module tf.contrib. tf.contrib.layers.linear cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/attention_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/models/attention_utils.py'
--------------------------------------------------------------------------------

68:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

68:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
104:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

104:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
199:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

199:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
205:27: INFO: Added keywords to args of function 'tf.convert_to_tensor'
206:25: INFO: Added keywords to args of function 'tf.convert_to_tensor'
207:21: INFO: Added keywords to args of function 'tf.convert_to_tensor'
208:26: INFO: Added keywords to args of function 'tf.convert_to_tensor'
209:19: INFO: Renamed 'tf.contrib.framework.nest.flatten' to 'tf.nest.flatten'
214:19: INFO: Added keywords to args of function 'tf.shape'
260:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

260:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
291:32: INFO: Added keywords to args of function 'tf.argmax'
299:13: INFO: Added keywords to args of function 'tf.cond'
326:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
327:21: ERROR: Using member tf.contrib.layers.linear in deprecated module tf.contrib. tf.contrib.layers.linear cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
360:27: INFO: Renamed 'tf.contrib.rnn.LSTMStateTuple' to 'tf.nn.rnn_cell.LSTMStateTuple'
382:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
386:18: ERROR: Using member tf.contrib.layers.linear in deprecated module tf.contrib. tf.contrib.layers.linear cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
398:9: INFO: Added keywords to args of function 'tf.reduce_sum'
403:9: INFO: Added keywords to args of function 'tf.reduce_sum'
425:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
427:16: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
427:16: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
428:16: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
428:16: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
472:23: INFO: Added keywords to args of function 'tf.reduce_sum'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/feedforward.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/models/feedforward.py'
--------------------------------------------------------------------------------

25:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
37:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
38:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
38:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
41:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
43:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
43:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
46:17: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
46:17: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
49:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
49:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
51:20: INFO: Renamed 'tf.truncated_normal' to 'tf.random.truncated_normal'
54:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
54:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
58:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
58:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
60:20: INFO: Renamed 'tf.truncated_normal' to 'tf.random.truncated_normal'
62:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
62:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
67:8: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
87:26: INFO: Renamed 'tf.nn.xw_plus_b' to 'tf.compat.v1.nn.xw_plus_b'
90:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
91:17: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

94:15: INFO: Renamed 'tf.nn.xw_plus_b' to 'tf.compat.v1.nn.xw_plus_b'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_vd.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/models/rnn_vd.py'
--------------------------------------------------------------------------------

26:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
35:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
45:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
46:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
46:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
49:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
52:13: INFO: Renamed 'tf.contrib.rnn.BasicLSTMCell' to 'tf.compat.v1.nn.rnn_cell.BasicLSTMCell'
66:15: INFO: Renamed 'tf.contrib.rnn.MultiRNNCell' to 'tf.compat.v1.nn.rnn_cell.MultiRNNCell'
79:23: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
85:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
89:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
89:20: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
92:19: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
92:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
96:10: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
105:15: ERROR: Using member tf.contrib.layers.linear in deprecated module tf.contrib. tf.contrib.layers.linear cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
112:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
114:15: ERROR: Using member tf.contrib.layers.linear in deprecated module tf.contrib. tf.contrib.layers.linear cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/bidirectional.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/models/bidirectional.py'
--------------------------------------------------------------------------------

27:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
38:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
39:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
39:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
42:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
43:15: WARNING: tf.contrib.rnn.LayerNormBasicLSTMCell requires manual check. (Manual edit required) `tf.contrib.rnn.LayerNormBasicLSTMCell` has been migrated to `tfa.rnn.LayerNormLSTMCell` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
43:15: WARNING: Using member tf.contrib.rnn.LayerNormBasicLSTMCell in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
43:15: ERROR: Using member tf.contrib.rnn.LayerNormBasicLSTMCell in deprecated module tf.contrib. tf.contrib.rnn.LayerNormBasicLSTMCell cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
45:15: WARNING: tf.contrib.rnn.LayerNormBasicLSTMCell requires manual check. (Manual edit required) `tf.contrib.rnn.LayerNormBasicLSTMCell` has been migrated to `tfa.rnn.LayerNormLSTMCell` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
45:15: WARNING: Using member tf.contrib.rnn.LayerNormBasicLSTMCell in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
45:15: ERROR: Using member tf.contrib.rnn.LayerNormBasicLSTMCell in deprecated module tf.contrib. tf.contrib.rnn.LayerNormBasicLSTMCell cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
61:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
61:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
64:17: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
64:17: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
67:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
68:22: INFO: Renamed 'tf.contrib.rnn.static_bidirectional_rnn' to 'tf.compat.v1.nn.static_bidirectional_rnn'
72:20: ERROR: Using member tf.contrib.layers.linear in deprecated module tf.contrib. tf.contrib.layers.linear cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
74:20: INFO: Added keywords to args of function 'tf.transpose'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_zaremba.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/models/seq2seq_zaremba.py'
--------------------------------------------------------------------------------

26:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
65:22: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
85:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
88:13: INFO: Renamed 'tf.contrib.rnn.BasicLSTMCell' to 'tf.compat.v1.nn.rnn_cell.BasicLSTMCell'
97:15: WARNING: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
97:15: ERROR: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib. tf.contrib.rnn.DropoutWrapper cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
100:11: INFO: Renamed 'tf.contrib.rnn.MultiRNNCell' to 'tf.compat.v1.nn.rnn_cell.MultiRNNCell'
111:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
116:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
116:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
118:26: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
118:26: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
122:24: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
122:24: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
123:26: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
123:26: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
126:28: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

131:10: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
143:8: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
166:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
169:13: INFO: Renamed 'tf.contrib.rnn.BasicLSTMCell' to 'tf.compat.v1.nn.rnn_cell.BasicLSTMCell'
178:15: WARNING: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
178:15: ERROR: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib. tf.contrib.rnn.DropoutWrapper cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
181:15: INFO: Renamed 'tf.contrib.rnn.MultiRNNCell' to 'tf.compat.v1.nn.rnn_cell.MultiRNNCell'
200:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
203:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
203:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
205:18: INFO: Renamed 'tf.matrix_transpose' to 'tf.linalg.matrix_transpose'
206:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
206:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
208:19: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
208:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
211:21: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

218:10: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
236:27: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
236:27: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
237:22: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
255:24: ERROR: Using member tf.contrib.distributions.Categorical in deprecated module tf.contrib. tf.contrib.distributions.Categorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
259:19: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
262:23: INFO: Added keywords to args of function 'tf.shape'
292:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/models/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/cnn.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/models/cnn.py'
--------------------------------------------------------------------------------

24:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
36:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
37:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
37:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
42:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
44:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
44:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
46:17: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
46:17: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
51:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
56:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
56:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
57:34: INFO: Renamed 'tf.truncated_normal' to 'tf.random.truncated_normal'
58:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
58:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
61:15: INFO: Added keywords to args of function 'tf.nn.conv1d'
61:15: INFO: Renamed keyword argument for tf.nn.conv1d from value to input
76:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
77:15: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

79:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
80:11: ERROR: Using member tf.contrib.layers.fully_connected in deprecated module tf.contrib. tf.contrib.layers.fully_connected cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
84:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
85:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
85:10: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
88:22: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

89:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
89:10: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
90:20: INFO: Renamed 'tf.nn.xw_plus_b' to 'tf.compat.v1.nn.xw_plus_b'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/bidirectional_zaremba.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/models/bidirectional_zaremba.py'
--------------------------------------------------------------------------------

24:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
35:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
36:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
36:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
39:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
42:13: INFO: Renamed 'tf.contrib.rnn.BasicLSTMCell' to 'tf.compat.v1.nn.rnn_cell.BasicLSTMCell'
52:15: WARNING: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
52:15: ERROR: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib. tf.contrib.rnn.DropoutWrapper cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
55:15: INFO: Renamed 'tf.contrib.rnn.MultiRNNCell' to 'tf.compat.v1.nn.rnn_cell.MultiRNNCell'
59:15: INFO: Renamed 'tf.contrib.rnn.MultiRNNCell' to 'tf.compat.v1.nn.rnn_cell.MultiRNNCell'
67:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
67:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
70:17: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
70:17: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
72:19: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

75:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
76:22: INFO: Renamed 'tf.contrib.rnn.static_bidirectional_rnn' to 'tf.compat.v1.nn.static_bidirectional_rnn'
80:20: ERROR: Using member tf.contrib.layers.linear in deprecated module tf.contrib. tf.contrib.layers.linear cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
82:20: INFO: Added keywords to args of function 'tf.transpose'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/critic_vd.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/models/critic_vd.py'
--------------------------------------------------------------------------------

26:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
43:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
44:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
44:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
47:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
48:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
48:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
51:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
55:13: INFO: Renamed 'tf.contrib.rnn.BasicLSTMCell' to 'tf.compat.v1.nn.rnn_cell.BasicLSTMCell'
69:18: INFO: Renamed 'tf.contrib.rnn.MultiRNNCell' to 'tf.compat.v1.nn.rnn_cell.MultiRNNCell'
73:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
79:23: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
85:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
88:19: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
88:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
92:10: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
104:16: ERROR: Using member tf.contrib.layers.linear in deprecated module tf.contrib. tf.contrib.layers.linear cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rollout.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/models/rollout.py'
--------------------------------------------------------------------------------

33:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
48:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
50:25: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
52:13: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
54:24: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
57:11: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
59:12: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
61:16: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
89:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
132:29: INFO: Added keywords to args of function 'tf.reduce_mean'
146:15: INFO: Added keywords to args of function 'tf.reduce_mean'
168:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

168:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
169:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
169:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
170:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
170:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
172:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

172:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
173:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
173:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
173:34: INFO: Added keywords to args of function 'tf.reduce_mean'
174:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
174:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
175:22: INFO: Added keywords to args of function 'tf.reduce_mean'
176:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
176:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
177:22: INFO: Added keywords to args of function 'tf.reduce_mean'
179:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

179:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
180:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

180:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
181:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
181:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
181:39: INFO: Added keywords to args of function 'tf.reduce_mean'
182:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
182:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
182:39: INFO: Added keywords to args of function 'tf.reduce_mean'
184:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

184:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
188:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

188:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
192:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

192:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
196:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

196:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
200:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

200:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
201:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
201:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
202:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
202:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
203:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
203:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
205:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

205:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
217:23: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
217:23: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
220:10: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
258:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
263:8: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
288:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
293:8: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/models/rnn.py'
--------------------------------------------------------------------------------

28:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
42:2: INFO: Renamed 'tf.logging.warning' to 'tf.compat.v1.logging.warning'
46:16: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
46:16: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
48:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
51:13: WARNING: tf.contrib.rnn.LayerNormBasicLSTMCell requires manual check. (Manual edit required) `tf.contrib.rnn.LayerNormBasicLSTMCell` has been migrated to `tfa.rnn.LayerNormLSTMCell` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
51:13: WARNING: Using member tf.contrib.rnn.LayerNormBasicLSTMCell in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
51:13: ERROR: Using member tf.contrib.rnn.LayerNormBasicLSTMCell in deprecated module tf.contrib. tf.contrib.rnn.LayerNormBasicLSTMCell cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
63:15: INFO: Renamed 'tf.contrib.rnn.MultiRNNCell' to 'tf.compat.v1.nn.rnn_cell.MultiRNNCell'
69:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
71:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
71:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
73:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
73:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
75:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
75:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
77:19: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
77:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
81:10: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
94:25: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
94:25: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
102:22: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
113:22: ERROR: Using member tf.contrib.distributions.Categorical in deprecated module tf.contrib. tf.contrib.distributions.Categorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
120:17: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
131:8: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
157:2: INFO: Renamed 'tf.logging.warning' to 'tf.compat.v1.logging.warning'
167:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
168:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
168:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
171:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
174:13: WARNING: tf.contrib.rnn.LayerNormBasicLSTMCell requires manual check. (Manual edit required) `tf.contrib.rnn.LayerNormBasicLSTMCell` has been migrated to `tfa.rnn.LayerNormLSTMCell` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
174:13: WARNING: Using member tf.contrib.rnn.LayerNormBasicLSTMCell in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
174:13: ERROR: Using member tf.contrib.rnn.LayerNormBasicLSTMCell in deprecated module tf.contrib. tf.contrib.rnn.LayerNormBasicLSTMCell cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
186:15: INFO: Renamed 'tf.contrib.rnn.MultiRNNCell' to 'tf.compat.v1.nn.rnn_cell.MultiRNNCell'
191:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
194:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
194:20: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
197:19: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
197:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
201:10: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
207:15: ERROR: Using member tf.contrib.layers.linear in deprecated module tf.contrib. tf.contrib.layers.linear cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/evaluation_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/models/evaluation_utils.py'
--------------------------------------------------------------------------------

32:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/models/rnn_nas.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/models/rnn_nas.py'
--------------------------------------------------------------------------------

31:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
52:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
60:16: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
60:16: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
62:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
76:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
78:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
78:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
80:18: INFO: Renamed 'tf.matrix_transpose' to 'tf.linalg.matrix_transpose'
81:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
81:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
83:19: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
83:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
86:21: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

90:10: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
103:25: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
103:25: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
112:22: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
133:22: ERROR: Using member tf.contrib.distributions.Categorical in deprecated module tf.contrib. tf.contrib.distributions.Categorical cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
141:17: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
152:8: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
167:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
177:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
178:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
178:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
185:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
199:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
202:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
202:20: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
205:19: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
205:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
208:21: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

212:10: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
230:15: ERROR: Using member tf.contrib.layers.linear in deprecated module tf.contrib. tf.contrib.layers.linear cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/losses/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/losses/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/losses/losses.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/losses/losses.py'
--------------------------------------------------------------------------------

40:9: INFO: tf.losses.sigmoid_cross_entropy requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
40:9: INFO: Renamed 'tf.losses.sigmoid_cross_entropy' to 'tf.compat.v1.losses.sigmoid_cross_entropy'
43:9: INFO: Renamed 'tf.Print' to 'tf.compat.v1.Print'
76:21: INFO: Renamed 'tf.log' to 'tf.math.log'
82:10: INFO: Renamed 'tf.log' to 'tf.math.log'
82:17: INFO: Added keywords to args of function 'tf.reduce_mean'
102:14: INFO: Renamed 'tf.log' to 'tf.math.log'
103:16: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
104:9: INFO: Added keywords to args of function 'tf.reduce_mean'
127:16: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
128:9: INFO: Added keywords to args of function 'tf.reduce_mean'
143:13: INFO: Added keywords to args of function 'tf.reduce_mean'
144:13: INFO: Added keywords to args of function 'tf.reduce_mean'
171:15: INFO: Added keywords to args of function 'tf.reduce_sum'
172:15: INFO: Added keywords to args of function 'tf.reduce_sum'
177:13: INFO: Added keywords to args of function 'tf.reduce_sum'
178:13: INFO: Added keywords to args of function 'tf.reduce_sum'
182:13: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
183:13: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/model_utils/model_losses.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/model_utils/model_losses.py'
--------------------------------------------------------------------------------

30:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
41:18: INFO: tf.losses.sigmoid_cross_entropy requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
41:18: INFO: Renamed 'tf.losses.sigmoid_cross_entropy' to 'tf.compat.v1.losses.sigmoid_cross_entropy'
43:18: INFO: tf.losses.sigmoid_cross_entropy requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
43:18: INFO: Renamed 'tf.losses.sigmoid_cross_entropy' to 'tf.compat.v1.losses.sigmoid_cross_entropy'
57:9: INFO: tf.losses.mean_squared_error requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
57:9: INFO: Renamed 'tf.losses.mean_squared_error' to 'tf.compat.v1.losses.mean_squared_error'
70:20: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
126:12: INFO: Renamed 'tf.log' to 'tf.math.log'
130:14: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
131:12: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
200:20: INFO: Added keywords to args of function 'tf.reduce_sum'
202:21: INFO: Added keywords to args of function 'tf.reduce_sum'
203:55: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
281:18: INFO: Added keywords to args of function 'tf.reduce_sum'
282:27: INFO: Added keywords to args of function 'tf.reduce_sum'
321:16: INFO: Added keywords to args of function 'tf.reduce_sum'
323:19: ERROR: Using member tf.contrib.legacy_seq2seq.sequence_loss_by_example in deprecated module tf.contrib. tf.contrib.legacy_seq2seq.sequence_loss_by_example cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
326:23: INFO: Added keywords to args of function 'tf.reduce_sum'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/model_utils/n_gram.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/model_utils/n_gram.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/model_utils/model_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/model_utils/model_utils.py'
--------------------------------------------------------------------------------

28:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
96:20: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
112:19: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
114:17: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
121:23: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
130:25: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
137:33: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
142:33: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
153:33: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
158:33: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
169:23: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
176:23: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
184:27: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
185:27: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
191:23: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
197:31: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
201:31: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
219:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
221:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
230:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
241:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
248:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
261:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
274:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
284:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/model_utils/variable_mapping.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/model_utils/variable_mapping.py'
--------------------------------------------------------------------------------

24:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
43:19: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
48:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
52:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
57:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
62:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
67:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
116:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
153:19: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
156:19: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
162:19: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
166:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
170:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
174:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
178:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
230:19: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
234:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
239:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
244:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
249:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
286:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
290:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
295:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
300:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
305:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
311:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
351:19: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
355:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
359:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
363:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
367:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
409:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
413:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
417:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
421:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
425:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
429:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
474:19: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
477:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
481:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
485:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
489:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
527:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
531:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
535:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
539:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
567:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
571:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
575:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
579:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
607:19: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
611:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
615:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
619:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
623:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
665:19: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
671:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
675:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
679:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
683:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
690:19: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
694:19: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
700:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
704:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
708:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
712:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/model_utils/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/model_utils/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/model_utils/helper.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/model_utils/helper.py'
--------------------------------------------------------------------------------

31:9: INFO: Added keywords to args of function 'tf.reduce_mean'
32:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
32:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
33:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

33:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
34:21: INFO: Added keywords to args of function 'tf.reduce_sum'
35:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
35:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
36:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
36:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
36:35: INFO: Added keywords to args of function 'tf.reduce_max'
37:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
37:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
37:35: INFO: Added keywords to args of function 'tf.reduce_min'
38:2: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
38:2: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/model_utils/model_construction.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/model_utils/model_construction.py'
--------------------------------------------------------------------------------

41:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/model_utils/model_optimization.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/model_utils/model_optimization.py'
--------------------------------------------------------------------------------

26:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
31:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

31:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
32:16: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
34:19: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
38:21: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
42:16: INFO: Added keywords to args of function 'tf.gradients'
52:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

52:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
53:16: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
55:19: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
57:16: INFO: Added keywords to args of function 'tf.gradients'
68:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

68:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
70:22: INFO: Renamed 'tf.train.GradientDescentOptimizer' to 'tf.compat.v1.train.GradientDescentOptimizer'
72:22: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
76:19: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
82:18: INFO: Added keywords to args of function 'tf.gradients'
84:18: INFO: Added keywords to args of function 'tf.gradients'
110:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

110:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
112:22: INFO: Renamed 'tf.train.GradientDescentOptimizer' to 'tf.compat.v1.train.GradientDescentOptimizer'
114:22: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
118:19: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
125:16: INFO: Added keywords to args of function 'tf.gradients'
142:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

142:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
143:20: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
145:19: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
149:21: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
156:16: INFO: Added keywords to args of function 'tf.gradients'
166:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

166:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
167:23: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
169:19: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
175:23: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
180:23: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
189:19: INFO: Added keywords to args of function 'tf.gradients'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/data/imdb_loader.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/data/imdb_loader.py'
--------------------------------------------------------------------------------

28:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
29:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
40:11: INFO: Renamed 'tf.python_io.tf_record_iterator' to 'tf.compat.v1.python_io.tf_record_iterator'
59:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/data/ptb_loader.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/data/ptb_loader.py'
--------------------------------------------------------------------------------

33:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/data/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/data/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/nas_utils/configs.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/nas_utils/configs.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/nas_utils/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/nas_utils/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/nas_utils/variational_dropout.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/nas_utils/variational_dropout.py'
--------------------------------------------------------------------------------

24:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
30:19: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/maskgan/nas_utils/custom_cell.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/maskgan/nas_utils/custom_cell.py'
--------------------------------------------------------------------------------

24:8: ERROR: Using member tf.flags in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
25:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
36:26: INFO: Renamed 'tf.contrib.rnn.RNNCell' to 'tf.compat.v1.nn.rnn_cell.RNNCell'
65:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
69:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
79:22: INFO: Renamed 'tf.contrib.rnn.RNNCell' to 'tf.compat.v1.nn.rnn_cell.RNNCell'
95:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
99:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
104:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
104:20: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
107:25: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
107:25: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
117:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/video_prediction/lstm_ops.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/video_prediction/lstm_ops.py'
--------------------------------------------------------------------------------

26:33: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
26:33: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
80:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/video_prediction/prediction_train.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/video_prediction/prediction_train.py'
--------------------------------------------------------------------------------

84:16: INFO: Renamed 'tf.log' to 'tf.math.log'
84:63: INFO: Renamed 'tf.log' to 'tf.math.log'
96:9: INFO: Added keywords to args of function 'tf.reduce_sum'
96:49: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
96:61: INFO: Added keywords to args of function 'tf.size'
113:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
115:20: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
140:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
163:10: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
163:10: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
164:23: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
164:23: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
172:10: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
172:10: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
174:21: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
174:21: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
179:21: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
179:21: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
181:14: INFO: Renamed 'tf.placeholder_with_default' to 'tf.compat.v1.placeholder_with_default'
183:20: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
184:19: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
184:19: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
190:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
195:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
202:10: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
203:6: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
203:24: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
206:9: INFO: Renamed 'tf.InteractiveSession' to 'tf.compat.v1.InteractiveSession'
207:11: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
209:19: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
209:19: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
215:2: INFO: Renamed 'tf.train.start_queue_runners' to 'tf.compat.v1.train.start_queue_runners'
217:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
228:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
239:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
240:6: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
245:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
246:2: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
247:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
248:2: INFO: Renamed 'tf.logging.flush' to 'tf.compat.v1.logging.flush'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/video_prediction/prediction_model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/video_prediction/prediction_model.py'
--------------------------------------------------------------------------------

81:23: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
82:17: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
240:20: INFO: Added keywords to args of function 'tf.convert_to_tensor'
278:16: INFO: Added keywords to args of function 'tf.reduce_sum'
278:53: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
285:15: INFO: Added keywords to args of function 'tf.transpose'
288:15: INFO: Added keywords to args of function 'tf.transpose'
291:16: INFO: Added keywords to args of function 'tf.nn.depthwise_conv2d'
295:16: INFO: Added keywords to args of function 'tf.transpose'
310:19: INFO: Added keywords to args of function 'tf.pad'
326:15: INFO: Added keywords to args of function 'tf.reduce_sum'
327:23: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
328:9: INFO: Added keywords to args of function 'tf.reduce_sum'
328:45: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
343:8: INFO: Renamed 'tf.random_shuffle' to 'tf.random.shuffle'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/video_prediction/prediction_input.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/video_prediction/prediction_input.py'
--------------------------------------------------------------------------------

62:19: INFO: Renamed 'tf.train.string_input_producer' to 'tf.compat.v1.train.string_input_producer'
63:11: INFO: Renamed 'tf.TFRecordReader' to 'tf.compat.v1.TFRecordReader'
73:30: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
74:31: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
75:30: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
77:30: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
78:15: INFO: Added keywords to args of function 'tf.parse_single_example'
78:15: INFO: Renamed 'tf.parse_single_example' to 'tf.io.parse_single_example'
88:12: INFO: Renamed 'tf.image.resize_image_with_crop_or_pad' to 'tf.image.resize_with_crop_or_pad'
90:12: INFO: Changed tf.image.resize_bicubic call to tf.image.resize(..., method=tf.image.ResizeMethod.BICUBIC).
105:47: INFO: Renamed 'tf.train.batch' to 'tf.compat.v1.train.batch'
112:18: INFO: Renamed 'tf.train.batch' to 'tf.compat.v1.train.batch'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/lexnet_common.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lexnet_nc/lexnet_common.py'
--------------------------------------------------------------------------------

171:18: INFO: Added keywords to args of function 'tf.parse_example'
171:18: INFO: Renamed 'tf.parse_example' to 'tf.io.parse_example'
172:16: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
188:18: INFO: Added keywords to args of function 'tf.parse_example'
188:18: INFO: Renamed 'tf.parse_example' to 'tf.io.parse_example'
189:14: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/lexnet_model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lexnet_nc/lexnet_model.py'
--------------------------------------------------------------------------------

33:11: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
72:6: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
80:27: ERROR: Using member tf.contrib.lookup.HashTable in deprecated module tf.contrib. tf.contrib.lookup.HashTable cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
81:10: ERROR: Using member tf.contrib.lookup.KeyValueTensorInitializer in deprecated module tf.contrib. tf.contrib.lookup.KeyValueTensorInitializer cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
99:27: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
99:27: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
109:34: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
111:25: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
111:25: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
117:32: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
124:32: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
126:23: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
126:23: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
132:30: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
139:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
139:22: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
143:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
143:19: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
150:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
150:22: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
154:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
154:19: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
159:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
159:22: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
163:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
163:19: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
172:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
186:29: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
337:26: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
337:26: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
341:12: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
341:12: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
348:29: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
348:29: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
364:34: INFO: Added keywords to args of function 'tf.reduce_sum'
370:10: INFO: Added keywords to args of function 'tf.reduce_sum'
375:34: INFO: Renamed 'tf.div' to 'tf.compat.v1.div'
380:21: INFO: Changing keep_prob arg of tf.nn.dropout to rate

391:23: INFO: Added keywords to args of function 'tf.argmax'
396:16: INFO: Added keywords to args of function 'tf.reduce_sum'
398:21: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
414:13: INFO: Added keywords to args of function 'tf.parse_example'
414:13: INFO: Renamed 'tf.parse_example' to 'tf.io.parse_example'
416:28: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
417:28: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
418:29: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
419:19: INFO: Renamed 'tf.FixedLenSequenceFeature' to 'tf.io.FixedLenSequenceFeature'
421:20: INFO: Renamed 'tf.FixedLenSequenceFeature' to 'tf.io.FixedLenSequenceFeature'
423:20: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
430:16: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/path_model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lexnet_nc/path_model.py'
--------------------------------------------------------------------------------

36:11: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
68:6: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
80:24: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
80:24: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
85:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
85:22: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
89:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
89:22: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
93:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
93:22: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
98:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
98:20: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
102:17: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
102:17: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
121:29: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
218:24: INFO: Added keywords to args of function 'tf.reduce_sum'
219:38: INFO: Added keywords to args of function 'tf.reduce_sum'
223:18: INFO: Renamed 'tf.div' to 'tf.compat.v1.div'
224:23: INFO: Added keywords to args of function 'tf.argmax'
228:35: INFO: Added keywords to args of function 'tf.reduce_mean'
229:16: INFO: Added keywords to args of function 'tf.reduce_sum'
231:21: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
250:19: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
250:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
259:16: INFO: Renamed 'tf.contrib.rnn.BasicLSTMCell' to 'tf.compat.v1.nn.rnn_cell.BasicLSTMCell'
262:27: INFO: Renamed 'tf.nn.dynamic_rnn' to 'tf.compat.v1.nn.dynamic_rnn'
283:13: INFO: Added keywords to args of function 'tf.parse_single_example'
283:13: INFO: Renamed 'tf.parse_single_example' to 'tf.io.parse_single_example'
285:10: INFO: Renamed 'tf.FixedLenSequenceFeature' to 'tf.io.FixedLenSequenceFeature'
288:10: INFO: Renamed 'tf.FixedLenSequenceFeature' to 'tf.io.FixedLenSequenceFeature'
291:10: INFO: Renamed 'tf.FixedLenSequenceFeature' to 'tf.io.FixedLenSequenceFeature'
294:10: INFO: Renamed 'tf.FixedLenSequenceFeature' to 'tf.io.FixedLenSequenceFeature'
297:10: INFO: Renamed 'tf.FixedLenSequenceFeature' to 'tf.io.FixedLenSequenceFeature'
300:10: INFO: Renamed 'tf.FixedLenSequenceFeature' to 'tf.io.FixedLenSequenceFeature'
303:10: INFO: Renamed 'tf.FixedLenSequenceFeature' to 'tf.io.FixedLenSequenceFeature'
306:10: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
309:16: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
327:10: INFO: Added keywords to args of function 'tf.cond'
328:6: INFO: Added keywords to args of function 'tf.shape'
335:16: INFO: Added keywords to args of function 'tf.cond'
336:6: INFO: Added keywords to args of function 'tf.shape'
340:16: INFO: Added keywords to args of function 'tf.cond'
341:6: INFO: Added keywords to args of function 'tf.shape'
364:13: INFO: Added keywords to args of function 'tf.reduce_sum'
380:9: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
380:27: INFO: Added keywords to args of function 'tf.shape'
382:9: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
391:18: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
446:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
503:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/learn_path_embeddings.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lexnet_nc/learn_path_embeddings.py'
--------------------------------------------------------------------------------

29:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
33:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
39:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
44:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
48:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
52:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
80:9: INFO: Renamed 'tf.python_io.TFRecordOptions' to 'tf.io.TFRecordOptions'
81:23: INFO: Renamed 'tf.python_io.TFRecordCompressionType' to 'tf.compat.v1.python_io.TFRecordCompressionType'
82:25: INFO: Renamed 'tf.python_io.tf_record_iterator' to 'tf.compat.v1.python_io.tf_record_iterator'
83:23: INFO: Renamed 'tf.python_io.tf_record_iterator' to 'tf.compat.v1.python_io.tf_record_iterator'
84:24: INFO: Renamed 'tf.python_io.tf_record_iterator' to 'tf.compat.v1.python_io.tf_record_iterator'
93:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
94:16: INFO: Renamed 'tf.python_io.TFRecordOptions' to 'tf.io.TFRecordOptions'
95:27: INFO: Renamed 'tf.python_io.TFRecordCompressionType' to 'tf.compat.v1.python_io.TFRecordCompressionType'
96:15: INFO: Renamed 'tf.TFRecordReader' to 'tf.compat.v1.TFRecordReader'
98:10: INFO: Renamed 'tf.train.string_input_producer' to 'tf.compat.v1.train.string_input_producer'
99:32: INFO: Renamed 'tf.train.shuffle_batch' to 'tf.compat.v1.train.shuffle_batch'
110:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
111:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
120:23: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
121:11: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
123:24: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
125:17: INFO: Renamed 'tf.train.Supervisor' to 'tf.compat.v1.train.Supervisor'
218:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
225:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/learn_classifier.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lexnet_nc/learn_classifier.py'
--------------------------------------------------------------------------------

29:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
33:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
38:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
43:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
47:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
51:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
53:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
57:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
90:9: INFO: Renamed 'tf.python_io.TFRecordOptions' to 'tf.io.TFRecordOptions'
91:23: INFO: Renamed 'tf.python_io.TFRecordCompressionType' to 'tf.compat.v1.python_io.TFRecordCompressionType'
92:25: INFO: Renamed 'tf.python_io.tf_record_iterator' to 'tf.compat.v1.python_io.tf_record_iterator'
93:23: INFO: Renamed 'tf.python_io.tf_record_iterator' to 'tf.compat.v1.python_io.tf_record_iterator'
94:24: INFO: Renamed 'tf.python_io.tf_record_iterator' to 'tf.compat.v1.python_io.tf_record_iterator'
120:14: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
121:16: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
125:18: INFO: Renamed 'tf.tables_initializer' to 'tf.compat.v1.tables_initializer'
211:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
214:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
223:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/lexnet_nc/get_indicative_paths.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/lexnet_nc/get_indicative_paths.py'
--------------------------------------------------------------------------------

29:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
33:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
39:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
44:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
48:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
52:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
55:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
58:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
92:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
93:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
97:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
103:14: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
111:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/steve/learner.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/steve/learner.py'
--------------------------------------------------------------------------------

59:24: INFO: Renamed 'tf.FIFOQueue' to 'tf.queue.FIFOQueue'
65:20: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
66:22: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
175:32: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
181:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
183:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
228:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
229:27: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
229:27: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
229:70: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
229:70: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
230:28: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
230:28: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
230:72: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
230:72: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
231:27: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
231:27: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
231:70: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
231:70: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
232:25: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
232:25: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
232:66: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
232:66: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
233:39: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
234:40: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
235:39: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
236:37: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
237:32: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
237:83: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
237:136: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
237:187: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
240:28: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
240:46: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
241:21: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
254:27: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
255:27: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/steve/worldmodel.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/steve/worldmodel.py'
--------------------------------------------------------------------------------

41:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
53:22: INFO: Renamed 'tf.random_shuffle' to 'tf.random.shuffle'
70:27: INFO: Added keywords to args of function 'tf.reduce_sum'
72:16: INFO: Added keywords to args of function 'tf.reduce_mean'
73:18: INFO: Added keywords to args of function 'tf.reduce_mean'
74:20: INFO: Added keywords to args of function 'tf.reduce_mean'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/steve/valuerl.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/steve/valuerl.py'
--------------------------------------------------------------------------------

45:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
55:37: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
55:55: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
56:32: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
56:50: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
57:24: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
57:42: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
59:28: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
60:28: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
60:79: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
60:132: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
60:183: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
76:23: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
76:32: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
76:50: INFO: Added keywords to args of function 'tf.shape'
109:20: INFO: Added keywords to args of function 'tf.reduce_sum'
113:20: INFO: Added keywords to args of function 'tf.reduce_sum'
115:20: INFO: Added keywords to args of function 'tf.reduce_sum'
116:33: INFO: Added keywords to args of function 'tf.reduce_mean'
142:18: INFO: Added keywords to args of function 'tf.reduce_mean'
143:13: INFO: Added keywords to args of function 'tf.reduce_mean'
144:22: INFO: Added keywords to args of function 'tf.reduce_mean'
181:19: INFO: Added keywords to args of function 'tf.reduce_mean'
182:21: INFO: Added keywords to args of function 'tf.reduce_mean'
190:94: INFO: Added keywords to args of function 'tf.while_loop'
201:11: INFO: Added keywords to args of function 'tf.transpose'
208:12: INFO: Added keywords to args of function 'tf.transpose'
214:14: INFO: Added keywords to args of function 'tf.transpose'
218:21: INFO: Renamed 'tf.cumprod' to 'tf.math.cumprod'
226:18: INFO: Added keywords to args of function 'tf.reduce_mean'
227:41: INFO: Added keywords to args of function 'tf.reduce_mean'
240:26: INFO: Renamed 'tf.matrix_band_part' to 'tf.linalg.band_part'
241:25: INFO: Renamed 'tf.matrix_band_part' to 'tf.linalg.band_part'
264:37: INFO: Added keywords to args of function 'tf.nn.moments'
269:69: INFO: Added keywords to args of function 'tf.transpose'
270:37: INFO: Renamed 'tf.matrix_solve' to 'tf.linalg.solve'
270:104: INFO: Renamed 'tf.matrix_band_part' to 'tf.linalg.band_part'
270:132: INFO: Added keywords to args of function 'tf.shape'
270:205: INFO: Added keywords to args of function 'tf.shape'
275:25: INFO: Renamed 'tf.matrix_band_part' to 'tf.linalg.band_part'
276:44: INFO: Added keywords to args of function 'tf.reduce_sum'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/steve/replay.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/steve/replay.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/steve/util.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/steve/util.py'
--------------------------------------------------------------------------------

32:32: INFO: Added keywords to args of function 'tf.shape'
34:21: INFO: Added keywords to args of function 'tf.shape'
36:20: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
39:24: INFO: Added keywords to args of function 'tf.reduce_sum'
40:12: INFO: Added keywords to args of function 'tf.reduce_sum'
41:18: INFO: Added keywords to args of function 'tf.shape'
46:11: INFO: Added keywords to args of function 'tf.reduce_sum'
46:25: INFO: Renamed 'tf.log' to 'tf.math.log'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/steve/toy_demo.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/steve/toy_demo.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/steve/nn.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/steve/nn.py'
--------------------------------------------------------------------------------

39:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
45:40: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
45:40: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
45:112: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

46:39: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
46:39: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
46:102: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
46:102: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
50:25: INFO: Added keywords to args of function 'tf.shape'
65:25: INFO: Added keywords to args of function 'tf.reduce_sum'
75:28: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
79:108: INFO: Added keywords to args of function 'tf.shape'
80:25: INFO: Added keywords to args of function 'tf.shape'
84:32: INFO: Changing keep_prob arg of tf.nn.dropout to rate

90:29: INFO: Added keywords to args of function 'tf.nn.moments'
119:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
125:40: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
125:40: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
125:127: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

126:39: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
126:39: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
126:114: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
126:114: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
132:28: INFO: Renamed 'tf.random_shuffle' to 'tf.random.shuffle'
136:32: INFO: Added keywords to args of function 'tf.shape'
141:25: INFO: Added keywords to args of function 'tf.shape'
159:44: INFO: Added keywords to args of function 'tf.reduce_sum'
159:84: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
159:103: INFO: Added keywords to args of function 'tf.shape'
159:190: INFO: Added keywords to args of function 'tf.shape'
159:220: INFO: Added keywords to args of function 'tf.shape'
160:44: INFO: Added keywords to args of function 'tf.reduce_sum'
160:84: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
160:103: INFO: Added keywords to args of function 'tf.shape'
160:190: INFO: Added keywords to args of function 'tf.shape'
160:220: INFO: Added keywords to args of function 'tf.shape'
162:44: INFO: Added keywords to args of function 'tf.reduce_mean'
163:44: INFO: Added keywords to args of function 'tf.reduce_mean'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/steve/envwrap.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/steve/envwrap.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/steve/config.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/steve/config.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/steve/master.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/steve/master.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/steve/visualizer.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/steve/visualizer.py'
--------------------------------------------------------------------------------

56:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
60:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
61:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
62:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
66:11: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
67:13: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/steve/worldmodel_learner.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/steve/worldmodel_learner.py'
--------------------------------------------------------------------------------

28:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
29:31: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
30:29: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
31:29: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
32:27: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
33:31: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
40:26: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/steve/agent.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/steve/agent.py'
--------------------------------------------------------------------------------

53:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
67:16: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
68:18: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/steve/valuerl_learner.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/steve/valuerl_learner.py'
--------------------------------------------------------------------------------

32:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
33:27: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
34:25: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
35:25: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
36:23: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
37:27: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
49:23: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
54:18: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/parameters.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/neural_programmer/parameters.py'
--------------------------------------------------------------------------------

64:14: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
75:11: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
82:11: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/neural_programmer/neural_programmer.py'
--------------------------------------------------------------------------------

32:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
33:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
35:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
37:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
40:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
43:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
44:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
45:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
46:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
47:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
48:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
49:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
50:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
51:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
52:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
53:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
55:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
56:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
58:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
60:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
61:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
62:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
63:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
64:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
66:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
68:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
69:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
70:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
71:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
72:0: ERROR: Using member tf.flags.DEFINE_boolean in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
74:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
77:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
79:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
80:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
134:6: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
167:7: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
171:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
175:20: INFO: Renamed 'tf.gfile.ListDirectory' to 'tf.io.gfile.listdir'
200:15: INFO: Renamed 'tf.gfile.IsDirectory' to 'tf.io.gfile.isdir'
202:8: INFO: Renamed 'tf.gfile.MkDir' to 'tf.io.gfile.mkdir'
203:15: INFO: Renamed 'tf.gfile.IsDirectory' to 'tf.io.gfile.isdir'
205:8: INFO: Renamed 'tf.gfile.MkDir' to 'tf.io.gfile.mkdir'
239:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/data_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/neural_programmer/data_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/neural_programmer/model.py'
--------------------------------------------------------------------------------

40:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
42:41: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
45:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
46:30: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
50:31: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
53:41: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
55:54: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
58:39: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
60:52: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
62:40: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
65:35: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
68:34: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
70:37: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
73:36: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
76:29: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
79:36: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
81:30: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
85:33: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
86:37: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
88:38: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
90:42: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
92:34: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
94:38: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
109:12: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
110:16: INFO: Added keywords to args of function 'tf.shape'
141:14: INFO: Added keywords to args of function 'tf.transpose'
143:20: INFO: Added keywords to args of function 'tf.transpose'
144:24: INFO: Added keywords to args of function 'tf.reduce_sum'
146:32: INFO: Added keywords to args of function 'tf.transpose'
148:53: INFO: Added keywords to args of function 'tf.transpose'
150:20: INFO: Added keywords to args of function 'tf.transpose'
151:24: INFO: Added keywords to args of function 'tf.reduce_sum'
153:32: INFO: Added keywords to args of function 'tf.transpose'
159:28: INFO: Added keywords to args of function 'tf.reduce_max'
161:34: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
163:20: INFO: Added keywords to args of function 'tf.shape'
164:20: INFO: Added keywords to args of function 'tf.shape'
168:10: INFO: Added keywords to args of function 'tf.reduce_sum'
179:21: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
179:21: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
194:8: INFO: Added keywords to args of function 'tf.transpose'
194:21: INFO: Added keywords to args of function 'tf.reduce_sum'
197:23: INFO: Added keywords to args of function 'tf.transpose'
199:17: INFO: Added keywords to args of function 'tf.reduce_sum'
205:33: INFO: Added keywords to args of function 'tf.reduce_sum'
208:38: INFO: Added keywords to args of function 'tf.reduce_sum'
214:41: INFO: Added keywords to args of function 'tf.reduce_sum'
234:20: INFO: Added keywords to args of function 'tf.reduce_sum'
263:17: INFO: Added keywords to args of function 'tf.transpose'
270:28: INFO: Added keywords to args of function 'tf.reduce_max'
271:14: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
272:22: INFO: Added keywords to args of function 'tf.shape'
272:55: INFO: Added keywords to args of function 'tf.shape'
302:15: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
303:18: INFO: Added keywords to args of function 'tf.reduce_sum'
316:23: INFO: Added keywords to args of function 'tf.reduce_sum'
324:21: INFO: Added keywords to args of function 'tf.reduce_sum'
327:20: INFO: Added keywords to args of function 'tf.reduce_sum'
330:17: INFO: Added keywords to args of function 'tf.reduce_sum'
333:17: INFO: Added keywords to args of function 'tf.reduce_sum'
336:17: INFO: Added keywords to args of function 'tf.reduce_sum'
338:17: INFO: Added keywords to args of function 'tf.reduce_sum'
350:24: INFO: Added keywords to args of function 'tf.reduce_sum'
352:26: INFO: Added keywords to args of function 'tf.reduce_sum'
361:13: INFO: Added keywords to args of function 'tf.reduce_sum'
387:13: INFO: Added keywords to args of function 'tf.reduce_sum'
410:38: INFO: Added keywords to args of function 'tf.transpose'
414:33: INFO: Added keywords to args of function 'tf.transpose'
415:18: INFO: Added keywords to args of function 'tf.transpose'
415:50: INFO: Added keywords to args of function 'tf.transpose'
434:12: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
442:11: INFO: Added keywords to args of function 'tf.reduce_min'
442:25: INFO: Added keywords to args of function 'tf.reduce_min'
444:12: INFO: Added keywords to args of function 'tf.reduce_sum'
444:26: INFO: Added keywords to args of function 'tf.reduce_sum'
449:52: INFO: Renamed 'tf.log' to 'tf.math.log'
459:36: INFO: Added keywords to args of function 'tf.shape'
460:28: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
461:37: INFO: Renamed 'tf.log' to 'tf.math.log'
463:8: INFO: Renamed 'tf.log' to 'tf.math.log'
466:18: INFO: Added keywords to args of function 'tf.reduce_sum'
466:32: INFO: Added keywords to args of function 'tf.reduce_sum'
471:14: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
475:18: INFO: Added keywords to args of function 'tf.reduce_sum'
475:32: INFO: Added keywords to args of function 'tf.reduce_sum'
478:10: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
481:14: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
485:18: INFO: Added keywords to args of function 'tf.reduce_sum'
485:32: INFO: Added keywords to args of function 'tf.reduce_sum'
488:10: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
540:12: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
541:16: INFO: Added keywords to args of function 'tf.shape'
556:17: INFO: Added keywords to args of function 'tf.transpose'
558:14: INFO: Added keywords to args of function 'tf.transpose'
558:46: INFO: Added keywords to args of function 'tf.transpose'
560:18: INFO: Added keywords to args of function 'tf.reduce_sum'
572:18: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
573:22: INFO: Added keywords to args of function 'tf.shape'
573:52: INFO: Added keywords to args of function 'tf.shape'
574:14: INFO: Added keywords to args of function 'tf.reduce_sum'
576:18: INFO: Added keywords to args of function 'tf.reduce_sum'
624:40: INFO: Added keywords to args of function 'tf.shape'
626:16: INFO: Added keywords to args of function 'tf.reduce_sum'
628:8: INFO: Added keywords to args of function 'tf.reduce_sum'
628:22: INFO: Added keywords to args of function 'tf.reduce_sum'
647:12: INFO: Added keywords to args of function 'tf.gradients'
652:21: INFO: Added keywords to args of function 'tf.reduce_sum'
654:21: INFO: Added keywords to args of function 'tf.reduce_sum'
673:11: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
679:19: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/nn_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/neural_programmer/nn_utils.py'
--------------------------------------------------------------------------------

21:9: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
21:9: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
27:10: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/neural_programmer/wiki_data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/neural_programmer/wiki_data.py'
--------------------------------------------------------------------------------

175:8: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
290:8: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
328:10: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
347:10: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
423:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/autoencoder/MaskingNoiseAutoencoderRunner.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/autoencoder/MaskingNoiseAutoencoderRunner.py'
--------------------------------------------------------------------------------

38:14: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/autoencoder/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/autoencoder/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/autoencoder/AdditiveGaussianNoiseAutoencoderRunner.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/autoencoder/AdditiveGaussianNoiseAutoencoderRunner.py'
--------------------------------------------------------------------------------

38:14: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/autoencoder/VariationalAutoencoderRunner.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/autoencoder/VariationalAutoencoderRunner.py'
--------------------------------------------------------------------------------

37:14: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/autoencoder/AutoencoderRunner.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/autoencoder/AutoencoderRunner.py'
--------------------------------------------------------------------------------

36:38: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/autoencoder/autoencoder_models/Autoencoder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/autoencoder/autoencoder_models/Autoencoder.py'
--------------------------------------------------------------------------------

7:77: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
15:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
33:26: INFO: Added keywords to args of function 'tf.reduce_sum'
36:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
37:20: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
43:22: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/autoencoder/autoencoder_models/DenoisingAutoencoder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/autoencoder/autoencoder_models/DenoisingAutoencoder.py'
--------------------------------------------------------------------------------

4:90: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
9:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
15:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
16:70: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
22:26: INFO: Added keywords to args of function 'tf.reduce_sum'
25:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
26:20: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
31:28: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
31:28: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
32:24: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

56:35: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
72:90: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
78:25: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
84:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
85:53: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

90:26: INFO: Added keywords to args of function 'tf.reduce_sum'
93:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
94:20: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
99:28: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
99:28: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
100:24: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

119:35: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/autoencoder/autoencoder_models/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/autoencoder/autoencoder_models/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/autoencoder/autoencoder_models/VariationalAutoencoder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/autoencoder/autoencoder_models/VariationalAutoencoder.py'
--------------------------------------------------------------------------------

5:54: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
13:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
18:14: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
18:41: INFO: Added keywords to args of function 'tf.shape'
24:30: INFO: Added keywords to args of function 'tf.reduce_sum'
25:29: INFO: Added keywords to args of function 'tf.reduce_sum'
28:20: INFO: Added keywords to args of function 'tf.reduce_mean'
31:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
32:20: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
37:28: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
37:28: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
38:24: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

39:38: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
39:38: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
40:24: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

59:35: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/setup.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/setup.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/feature_extractor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/feature_extractor_test.py'
--------------------------------------------------------------------------------

73:20: INFO: Added keywords to args of function 'tf.shape'
74:29: INFO: Added keywords to args of function 'tf.norm'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/feature_io_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/feature_io_test.py'
--------------------------------------------------------------------------------

84:13: INFO: Renamed 'tf.test.get_temp_dir' to 'tf.compat.v1.test.get_temp_dir'
97:13: INFO: Renamed 'tf.test.get_temp_dir' to 'tf.compat.v1.test.get_temp_dir'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/feature_aggregation_extractor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/feature_aggregation_extractor.py'
--------------------------------------------------------------------------------

70:12: ERROR: Using member 
            tf.contrib.factorization.KMeansClustering.CLUSTER_CENTERS_VAR_NAME in deprecated module tf.contrib. 
            tf.contrib.factorization.KMeansClustering.CLUSTER_CENTERS_VAR_NAME cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
192:21: INFO: Added keywords to args of function 'tf.shape'
215:28: INFO: Added keywords to args of function 'tf.cond'
233:12: INFO: Added keywords to args of function 'tf.reduce_sum'
296:11: INFO: Added keywords to args of function 'tf.cond'
297:19: INFO: Added keywords to args of function 'tf.size'
355:27: INFO: Added keywords to args of function 'tf.reduce_sum'
361:20: INFO: Added keywords to args of function 'tf.shape'
379:11: INFO: Added keywords to args of function 'tf.cond'
380:19: INFO: Added keywords to args of function 'tf.size'
399:25: INFO: Added keywords to args of function 'tf.norm'
402:8: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
437:9: INFO: Added keywords to args of function 'tf.shape'
475:9: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/box_io.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/box_io.py'
--------------------------------------------------------------------------------

135:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
150:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/datum_io.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/datum_io.py'
--------------------------------------------------------------------------------

182:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
195:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
207:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
220:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/feature_extractor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/feature_extractor.py'
--------------------------------------------------------------------------------

42:10: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
43:10: INFO: Renamed 'tf.div' to 'tf.compat.v1.div'
63:16: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
120:41: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
120:53: INFO: Added keywords to args of function 'tf.shape'
166:21: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
167:20: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
173:8: INFO: Added keywords to args of function 'tf.shape'
174:8: INFO: Added keywords to args of function 'tf.shape'
181:25: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
211:15: INFO: Added keywords to args of function 'tf.shape'
353:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
355:21: INFO: Renamed keyword argument for tf.nn.l2_normalize from dim to axis
382:29: INFO: Renamed keyword argument for tf.nn.l2_normalize from dim to axis
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/delf_v1.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/delf_v1.py'
--------------------------------------------------------------------------------

32:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
71:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
108:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
110:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
130:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
135:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
139:29: INFO: Added keywords to args of function 'tf.reduce_mean'
172:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
337:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/box_io_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/box_io_test.py'
--------------------------------------------------------------------------------

60:13: INFO: Renamed 'tf.test.get_temp_dir' to 'tf.compat.v1.test.get_temp_dir'
70:13: INFO: Renamed 'tf.test.get_temp_dir' to 'tf.compat.v1.test.get_temp_dir'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/datum_io_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/datum_io_test.py'
--------------------------------------------------------------------------------

72:13: INFO: Renamed 'tf.test.get_temp_dir' to 'tf.compat.v1.test.get_temp_dir'
87:13: INFO: Renamed 'tf.test.get_temp_dir' to 'tf.compat.v1.test.get_temp_dir'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/feature_io.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/feature_io.py'
--------------------------------------------------------------------------------

171:7: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
195:7: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/feature_aggregation_similarity.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/feature_aggregation_similarity.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/feature_aggregation_similarity_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/feature_aggregation_similarity_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/feature_aggregation_extractor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/feature_aggregation_extractor_test.py'
--------------------------------------------------------------------------------

44:6: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/examples/extractor_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/examples/extractor_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/examples/detector.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/examples/detector.py'
--------------------------------------------------------------------------------

35:2: INFO: Renamed 'tf.saved_model.loader.load' to 'tf.compat.v1.saved_model.loader.load'
36:13: INFO: Renamed 'tf.saved_model.tag_constants.SERVING' to 'tf.saved_model.SERVING'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/examples/extract_features.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/examples/extract_features.py'
--------------------------------------------------------------------------------

56:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
63:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
63:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
66:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
69:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
73:7: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
77:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
78:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
83:21: INFO: Renamed 'tf.train.string_input_producer' to 'tf.compat.v1.train.string_input_producer'
84:13: INFO: Renamed 'tf.WholeFileReader' to 'tf.compat.v1.WholeFileReader'
88:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
89:16: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
96:16: INFO: Renamed 'tf.train.start_queue_runners' to 'tf.compat.v1.train.start_queue_runners'
101:10: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
104:10: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
117:11: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
118:10: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/examples/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/examples/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/examples/extractor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/examples/extractor.py'
--------------------------------------------------------------------------------

84:2: INFO: Renamed 'tf.saved_model.loader.load' to 'tf.compat.v1.saved_model.loader.load'
85:13: INFO: Renamed 'tf.saved_model.tag_constants.SERVING' to 'tf.saved_model.SERVING'
105:26: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/examples/extract_boxes.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/examples/extract_boxes.py'
--------------------------------------------------------------------------------

61:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
133:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
133:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
136:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
139:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
142:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
143:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
144:37: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
145:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
150:21: INFO: Renamed 'tf.train.string_input_producer' to 'tf.compat.v1.train.string_input_producer'
151:13: INFO: Renamed 'tf.WholeFileReader' to 'tf.compat.v1.WholeFileReader'
156:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
157:16: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
164:16: INFO: Renamed 'tf.train.start_queue_runners' to 'tf.compat.v1.train.start_queue_runners'
169:10: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
172:10: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
186:11: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
187:10: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/examples/match_images.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/examples/match_images.py'
--------------------------------------------------------------------------------

48:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
48:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
54:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
58:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
84:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/google_landmarks_dataset/dataset_file_io_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/google_landmarks_dataset/dataset_file_io_test.py'
--------------------------------------------------------------------------------

32:29: INFO: Renamed 'tf.test.get_temp_dir' to 'tf.compat.v1.test.get_temp_dir'
33:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
63:29: INFO: Renamed 'tf.test.get_temp_dir' to 'tf.compat.v1.test.get_temp_dir'
64:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
94:29: INFO: Renamed 'tf.test.get_temp_dir' to 'tf.compat.v1.test.get_temp_dir'
96:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
132:29: INFO: Renamed 'tf.test.get_temp_dir' to 'tf.compat.v1.test.get_temp_dir'
134:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/google_landmarks_dataset/compute_retrieval_metrics.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/google_landmarks_dataset/compute_retrieval_metrics.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/google_landmarks_dataset/metrics.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/google_landmarks_dataset/metrics.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/google_landmarks_dataset/dataset_file_io.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/google_landmarks_dataset/dataset_file_io.py'
--------------------------------------------------------------------------------

52:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
111:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/google_landmarks_dataset/compute_recognition_metrics.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/google_landmarks_dataset/compute_recognition_metrics.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/google_landmarks_dataset/metrics_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/google_landmarks_dataset/metrics_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/detect_to_retrieve/aggregation_extraction.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/detect_to_retrieve/aggregation_extraction.py'
--------------------------------------------------------------------------------

62:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
104:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
124:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
125:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
127:7: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/detect_to_retrieve/extract_index_boxes_and_features.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/detect_to_retrieve/extract_index_boxes_and_features.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/detect_to_retrieve/extract_aggregation.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/detect_to_retrieve/extract_aggregation.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/detect_to_retrieve/dataset_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/detect_to_retrieve/dataset_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/detect_to_retrieve/boxes_and_features_extraction.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/detect_to_retrieve/boxes_and_features_extraction.py'
--------------------------------------------------------------------------------

58:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
71:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
121:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
125:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
126:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
127:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
128:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
129:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
130:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
134:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
136:16: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
164:11: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
200:13: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/detect_to_retrieve/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/detect_to_retrieve/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/detect_to_retrieve/cluster_delf_features.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/detect_to_retrieve/cluster_delf_features.py'
--------------------------------------------------------------------------------

55:24: INFO: Renamed 'tf.train.SessionRunHook' to 'tf.estimator.SessionRunHook'
73:5: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
80:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
129:29: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
134:17: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

149:11: INFO: Renamed 'tf.estimator.experimental.KMeans' to 'tf.compat.v1.estimator.experimental.KMeans'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/detect_to_retrieve/extract_query_features.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/detect_to_retrieve/extract_query_features.py'
--------------------------------------------------------------------------------

64:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
73:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
73:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
76:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
80:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
84:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
88:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
89:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
92:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
94:16: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
105:11: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
106:10: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/detect_to_retrieve/dataset.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/detect_to_retrieve/dataset.py'
--------------------------------------------------------------------------------

43:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/python/detect_to_retrieve/perform_retrieval.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/python/detect_to_retrieve/perform_retrieval.py'
--------------------------------------------------------------------------------

292:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
317:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
320:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
371:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
372:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/protos/feature_pb2.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/protos/feature_pb2.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/protos/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/protos/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/protos/aggregation_config_pb2.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/protos/aggregation_config_pb2.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/protos/delf_config_pb2.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/protos/delf_config_pb2.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/protos/datum_pb2.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/protos/datum_pb2.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/delf/delf/protos/box_pb2.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/delf/delf/protos/box_pb2.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/audioset/yamnet/inference.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/audioset/yamnet/inference.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/audioset/yamnet/yamnet_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/audioset/yamnet/yamnet_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/audioset/yamnet/params.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/audioset/yamnet/params.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/audioset/yamnet/yamnet.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/audioset/yamnet/yamnet.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/audioset/yamnet/features.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/audioset/yamnet/features.py'
--------------------------------------------------------------------------------

24:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

24:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
59:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

59:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/audioset/vggish/mel_features.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/audioset/vggish/mel_features.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/audioset/vggish/vggish_smoke_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/audioset/vggish/vggish_smoke_test.py'
--------------------------------------------------------------------------------

35:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/audioset/vggish/vggish_input.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/audioset/vggish/vggish_input.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/audioset/vggish/vggish_params.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/audioset/vggish/vggish_params.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/audioset/vggish/vggish_inference_demo.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/audioset/vggish/vggish_inference_demo.py'
--------------------------------------------------------------------------------

52:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
60:8: ERROR: Using member tf.app.flags in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/audioset/vggish/vggish_postprocess.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/audioset/vggish/vggish_postprocess.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/audioset/vggish/vggish_train_demo.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/audioset/vggish/vggish_train_demo.py'
--------------------------------------------------------------------------------

51:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
59:8: ERROR: Using member tf.app.flags in deprecated module tf.app.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/audioset/vggish/vggish_slim.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/audioset/vggish/vggish_slim.py'
--------------------------------------------------------------------------------

33:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/namignizer/data_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/namignizer/data_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/namignizer/model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/namignizer/model.py'
--------------------------------------------------------------------------------

34:27: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
35:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
37:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
42:24: INFO: Renamed 'tf.contrib.rnn.BasicLSTMCell' to 'tf.compat.v1.nn.rnn_cell.BasicLSTMCell'
44:28: WARNING: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
44:28: ERROR: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib. tf.contrib.rnn.DropoutWrapper cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
47:15: INFO: Renamed 'tf.contrib.rnn.MultiRNNCell' to 'tf.compat.v1.nn.rnn_cell.MultiRNNCell'
52:24: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
52:24: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
53:21: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
53:21: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
56:21: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

60:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
63:20: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
68:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
68:20: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
69:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
69:20: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
71:15: ERROR: Using member tf.contrib.legacy_seq2seq.sequence_loss_by_example in deprecated module tf.contrib. tf.contrib.legacy_seq2seq.sequence_loss_by_example cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
76:28: INFO: Added keywords to args of function 'tf.reduce_sum'
83:21: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
83:36: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
89:16: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
90:42: INFO: Added keywords to args of function 'tf.gradients'
92:20: INFO: Renamed 'tf.train.GradientDescentOptimizer' to 'tf.compat.v1.train.GradientDescentOptimizer'
96:20: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/namignizer/names.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/namignizer/names.py'
--------------------------------------------------------------------------------

156:34: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
157:22: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
157:22: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
159:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
162:8: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
174:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
190:34: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
192:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
225:34: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
227:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/tfcode/cmp_summary.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/tfcode/cmp_summary.py'
--------------------------------------------------------------------------------

124:19: INFO: Added keywords to args of function 'tf.reduce_mean'
124:58: INFO: Renamed keyword argument for tf.reduce_mean from keep_dims to keepdims
127:23: INFO: Added keywords to args of function 'tf.reduce_mean'
130:18: INFO: Added keywords to args of function 'tf.reduce_max'
130:60: INFO: Renamed keyword argument for tf.reduce_max from keep_dims to keepdims
134:18: INFO: Added keywords to args of function 'tf.reduce_max'
137:17: INFO: Added keywords to args of function 'tf.reduce_mean'
146:18: INFO: Added keywords to args of function 'tf.shape'
149:18: INFO: Added keywords to args of function 'tf.shape'
152:18: INFO: Added keywords to args of function 'tf.shape'
175:43: INFO: Added keywords to args of function 'tf.shape'
193:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

193:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/tfcode/cmp.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/tfcode/cmp.py'
--------------------------------------------------------------------------------

68:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

68:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
132:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
151:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

151:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
213:40: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

214:40: INFO: tf.random_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
214:40: INFO: Renamed 'tf.random_normal_initializer' to 'tf.compat.v1.random_normal_initializer'
219:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
237:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
253:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

253:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
257:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

257:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
264:2: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
268:6: INFO: Renamed 'tf.placeholder_with_default' to 'tf.compat.v1.placeholder_with_default'
307:27: INFO: Added keywords to args of function 'tf.pad'
308:28: INFO: Added keywords to args of function 'tf.pad'
315:10: INFO: Added keywords to args of function 'tf.reduce_max'
315:36: INFO: Renamed keyword argument for tf.reduce_max from reduction_indices to axis
316:24: INFO: Renamed keyword argument for tf.reduce_max from keep_dims to keepdims
329:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

329:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
330:41: INFO: Added keywords to args of function 'tf.shape'
343:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
356:10: INFO: Added keywords to args of function 'tf.cond'
368:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

368:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
413:28: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
413:28: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
439:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
465:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

465:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
478:17: INFO: Added keywords to args of function 'tf.shape'
483:31: INFO: tf.losses.sigmoid_cross_entropy requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
483:31: INFO: Renamed 'tf.losses.sigmoid_cross_entropy' to 'tf.compat.v1.losses.sigmoid_cross_entropy'
509:32: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
549:23: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
550:23: INFO: Renamed 'tf.local_variables_initializer' to 'tf.compat.v1.local_variables_initializer'
551:15: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
552:44: INFO: Renamed 'tf.train.SaverDef' to 'tf.compat.v1.train.SaverDef'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/tfcode/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/tfcode/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/tfcode/tf_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/tfcode/tf_utils.py'
--------------------------------------------------------------------------------

44:37: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

45:37: INFO: tf.random_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
45:37: INFO: Renamed 'tf.random_normal_initializer' to 'tf.compat.v1.random_normal_initializer'
46:36: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
46:36: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
81:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

81:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
82:10: INFO: Added keywords to args of function 'tf.cond'
87:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

87:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
100:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

100:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
108:23: INFO: Added keywords to args of function 'tf.shape'
112:24: INFO: Added keywords to args of function 'tf.reduce_prod'
152:11: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
153:11: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
161:38: INFO: Added keywords to args of function 'tf.shape'
184:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

184:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
207:20: INFO: Added keywords to args of function 'tf.shape'
220:24: INFO: Added keywords to args of function 'tf.shape'
234:51: INFO: tf.random_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
234:51: INFO: Renamed 'tf.random_normal_initializer' to 'tf.compat.v1.random_normal_initializer'
235:51: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

238:50: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
238:50: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
242:51: INFO: tf.random_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
242:51: INFO: Renamed 'tf.random_normal_initializer' to 'tf.compat.v1.random_normal_initializer'
243:51: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

244:50: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
244:50: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
254:49: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

255:49: INFO: tf.random_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
255:49: INFO: Renamed 'tf.random_normal_initializer' to 'tf.compat.v1.random_normal_initializer'
256:48: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
256:48: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
322:8: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
322:26: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
469:27: INFO: tf.summary.Summary requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
469:27: INFO: Renamed 'tf.summary.Summary' to 'tf.compat.v1.summary.Summary'
502:8: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
502:26: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
564:27: INFO: tf.summary.Summary requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
564:27: INFO: Renamed 'tf.summary.Summary' to 'tf.compat.v1.summary.Summary'
598:8: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
598:26: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
663:19: INFO: tf.train.exponential_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

663:19: INFO: Renamed 'tf.train.exponential_decay' to 'tf.compat.v1.train.exponential_decay'
666:21: INFO: Renamed 'tf.train.MomentumOptimizer' to 'tf.compat.v1.train.MomentumOptimizer'
668:21: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
673:21: INFO: Renamed 'tf.train.SyncReplicasOptimizer' to 'tf.compat.v1.train.SyncReplicasOptimizer'
702:7: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
702:7: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
704:4: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
706:7: INFO: Renamed 'tf.Print' to 'tf.compat.v1.Print'
707:2: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
714:8: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
731:21: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
731:21: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
732:21: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
732:21: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
747:23: ERROR: Using member tf.contrib.metrics.streaming_mean in deprecated module tf.contrib. tf.contrib.metrics.streaming_mean cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
769:21: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
769:21: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
770:21: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
770:21: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
818:18: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
818:18: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
819:24: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
819:24: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/tfcode/cmp_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/tfcode/cmp_utils.py'
--------------------------------------------------------------------------------

51:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
53:28: INFO: Added keywords to args of function 'tf.shape'
57:55: INFO: Renamed keyword argument for tf.expand_dims from dim to axis
59:18: INFO: Added keywords to args of function 'tf.shape'
74:44: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

75:44: INFO: tf.random_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
75:44: INFO: Renamed 'tf.random_normal_initializer' to 'tf.compat.v1.random_normal_initializer'
76:43: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
76:43: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
89:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

89:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
104:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

104:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
133:57: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/tfcode/nav_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/tfcode/nav_utils.py'
--------------------------------------------------------------------------------

43:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

43:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
49:14: INFO: Added keywords to args of function 'tf.reduce_sum'
50:28: INFO: Renamed keyword argument for tf.reduce_sum from reduction_indices to axis
51:12: INFO: Added keywords to args of function 'tf.reduce_sum'
54:18: INFO: Added keywords to args of function 'tf.reduce_sum'
55:32: INFO: Renamed keyword argument for tf.reduce_sum from reduction_indices to axis
56:20: INFO: Renamed 'tf.log' to 'tf.math.log'
58:19: INFO: Added keywords to args of function 'tf.reduce_sum'
61:31: INFO: tf.losses.get_regularization_losses requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
61:31: INFO: Renamed 'tf.losses.get_regularization_losses' to 'tf.compat.v1.losses.get_regularization_losses'
71:13: INFO: Added keywords to args of function 'tf.reduce_sum'
85:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

85:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
92:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

92:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
124:34: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
124:34: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/tfcode/vision_baseline_lstm.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/tfcode/vision_baseline_lstm.py'
--------------------------------------------------------------------------------

61:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

61:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
128:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

128:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
136:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
158:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

158:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
162:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
163:11: INFO: Renamed 'tf.contrib.rnn.LSTMCell' to 'tf.compat.v1.nn.rnn_cell.LSTMCell'
166:18: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
166:18: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
173:31: INFO: Added keywords to args of function 'tf.cond'
180:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

180:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
203:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

203:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
211:2: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
221:6: INFO: Renamed 'tf.placeholder_with_default' to 'tf.compat.v1.placeholder_with_default'
246:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

246:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
247:41: INFO: Added keywords to args of function 'tf.shape'
278:28: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

279:28: INFO: tf.random_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
279:28: INFO: Renamed 'tf.random_normal_initializer' to 'tf.compat.v1.random_normal_initializer'
294:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
304:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
315:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
330:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
398:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
413:70: INFO: Renamed keyword argument for tf.expand_dims from dim to axis
414:17: INFO: Added keywords to args of function 'tf.cond'
444:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
492:32: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
528:23: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
529:23: INFO: Renamed 'tf.local_variables_initializer' to 'tf.compat.v1.local_variables_initializer'
530:15: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
531:44: INFO: Renamed 'tf.train.SaverDef' to 'tf.compat.v1.train.SaverDef'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/render/swiftshader_renderer.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/render/swiftshader_renderer.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/render/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/render/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/cfgs/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/cfgs/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/cfgs/config_cmp.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/cfgs/config_cmp.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/cfgs/config_distill.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/cfgs/config_distill.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/cfgs/config_vision_baseline.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/cfgs/config_vision_baseline.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/cfgs/config_common.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/cfgs/config_common.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/scripts/script_plot_trajectory.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/scripts/script_plot_trajectory.py'
--------------------------------------------------------------------------------

266:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/scripts/script_env_vis.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/scripts/script_env_vis.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/scripts/script_preprocess_annoations_S3DIS.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/scripts/script_preprocess_annoations_S3DIS.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/scripts/script_distill.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/scripts/script_distill.py'
--------------------------------------------------------------------------------

105:13: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
111:21: INFO: Renamed 'tf.train.replica_device_setter' to 'tf.compat.v1.train.replica_device_setter'
161:17: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/scripts/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/scripts/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/scripts/script_nav_agent_release.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/scripts/script_nav_agent_release.py'
--------------------------------------------------------------------------------

138:11: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
142:19: INFO: Renamed 'tf.train.replica_device_setter' to 'tf.compat.v1.train.replica_device_setter'
144:11: INFO: Renamed 'tf.container' to 'tf.compat.v1.container'
182:11: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
191:9: INFO: Renamed 'tf.container' to 'tf.compat.v1.container'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/datasets/nav_env_config.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/datasets/nav_env_config.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/datasets/nav_env.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/datasets/nav_env.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/datasets/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/datasets/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/datasets/factory.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/datasets/factory.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/src/rotation_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/src/rotation_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/src/graph_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/src/graph_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/src/file_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/src/file_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/src/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/src/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/src/utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/src/utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/src/map_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/src/map_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/src/depth_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_mapping_and_planning/src/depth_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_crypto/train_eval.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/adversarial_crypto/train_eval.py'
--------------------------------------------------------------------------------

46:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
136:9: ERROR: Using member tf.contrib.framework.arg_scope in deprecated module tf.contrib. tf.contrib.framework.arg_scope cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
137:9: ERROR: Using member tf.contrib.layers.fully_connected in deprecated module tf.contrib. tf.contrib.layers.fully_connected cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
137:44: ERROR: Using member tf.contrib.layers.conv2d in deprecated module tf.contrib. tf.contrib.layers.conv2d cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
140:11: ERROR: Using member tf.contrib.layers.fully_connected in deprecated module tf.contrib. tf.contrib.layers.fully_connected cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
143:29: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
143:29: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
151:13: ERROR: Using member tf.contrib.layers.conv2d in deprecated module tf.contrib. tf.contrib.layers.conv2d cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
154:13: ERROR: Using member tf.contrib.layers.conv2d in deprecated module tf.contrib. tf.contrib.layers.conv2d cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
157:13: ERROR: Using member tf.contrib.layers.conv2d in deprecated module tf.contrib. tf.contrib.layers.conv2d cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
175:21: INFO: Added keywords to args of function 'tf.reduce_sum'
177:20: INFO: Added keywords to args of function 'tf.reduce_sum'
182:26: INFO: Added keywords to args of function 'tf.reduce_sum'
185:35: INFO: Added keywords to args of function 'tf.reduce_sum'
190:19: INFO: Added keywords to args of function 'tf.reduce_sum'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/train_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/efficient-hrl/train_utils.py'
--------------------------------------------------------------------------------

30:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
96:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
148:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
160:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

160:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
162:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
162:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
168:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

168:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
170:6: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
170:6: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
172:6: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
172:6: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
174:6: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
174:6: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
175:4: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
175:4: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/cond_fn.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/efficient-hrl/cond_fn.py'
--------------------------------------------------------------------------------

89:18: INFO: Renamed 'tf.mod' to 'tf.math.floormod'
128:19: INFO: Renamed 'tf.mod' to 'tf.math.floormod'
129:15: INFO: Renamed 'tf.mod' to 'tf.math.floormod'
171:6: INFO: Added keywords to args of function 'tf.reduce_sum'
171:20: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
174:15: INFO: Renamed 'tf.mod' to 'tf.math.floormod'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/train.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/efficient-hrl/train.py'
--------------------------------------------------------------------------------

28:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
40:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
101:12: INFO: Added keywords to args of function 'tf.cond'
105:12: INFO: Added keywords to args of function 'tf.cond'
122:22: INFO: Added keywords to args of function 'tf.cond'
123:25: INFO: Added keywords to args of function 'tf.cond'
125:23: INFO: Added keywords to args of function 'tf.cond'
156:33: INFO: Added keywords to args of function 'tf.reduce_sum'
163:18: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
169:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
169:27: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
169:58: INFO: Renamed 'tf.AUTO_REUSE' to 'tf.compat.v1.AUTO_REUSE'
170:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
170:19: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
173:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
173:20: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
176:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
176:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
177:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
177:19: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
178:24: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
178:24: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
181:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
181:10: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
185:22: INFO: Renamed 'tf.scatter_update' to 'tf.compat.v1.scatter_update'
195:39: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
210:28: INFO: Added keywords to args of function 'tf.cond'
215:21: INFO: Renamed 'tf.scatter_update' to 'tf.compat.v1.scatter_update'
218:20: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
220:8: INFO: Added keywords to args of function 'tf.cond'
221:21: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
223:8: INFO: Added keywords to args of function 'tf.cond'
226:18: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
227:26: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
229:8: INFO: Added keywords to args of function 'tf.cond'
231:8: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
233:12: INFO: Added keywords to args of function 'tf.cond'
260:12: INFO: Added keywords to args of function 'tf.reduce_sum'
261:17: INFO: Added keywords to args of function 'tf.argmax'
337:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
345:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
354:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
357:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
362:16: ERROR: Using member tf.contrib.framework.get_or_create_global_step in deprecated module tf.contrib. tf.contrib.framework.get_or_create_global_step cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
381:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
381:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
382:20: INFO: Added keywords to args of function 'tf.reduce_mean'
383:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
383:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
384:20: INFO: Added keywords to args of function 'tf.reduce_mean'
385:2: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
385:2: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
386:2: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
386:2: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
454:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

454:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
457:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

457:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
458:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
458:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
458:49: INFO: Added keywords to args of function 'tf.reduce_mean'
537:20: INFO: Added keywords to args of function 'tf.reduce_mean'
542:20: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
612:17: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
618:19: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
621:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
624:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
638:18: INFO: Renamed 'tf.local_variables_initializer' to 'tf.compat.v1.local_variables_initializer'
647:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
657:16: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
658:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/run_eval.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/efficient-hrl/run_eval.py'
--------------------------------------------------------------------------------

32:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
37:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
37:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
51:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/run_env.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/efficient-hrl/run_env.py'
--------------------------------------------------------------------------------

25:8: ERROR: Using member tf.flags in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/eval.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/efficient-hrl/eval.py'
--------------------------------------------------------------------------------

29:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
39:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
75:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
75:34: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
76:11: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
77:11: INFO: Renamed 'tf.local_variables_initializer' to 'tf.compat.v1.local_variables_initializer'
78:19: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
78:19: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
88:17: ERROR: Using member tf.contrib.framework.assign_from_checkpoint_fn in deprecated module tf.contrib. tf.contrib.framework.assign_from_checkpoint_fn cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
105:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
113:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
114:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
115:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
116:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
117:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
123:12: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
125:12: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
127:12: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
141:24: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
142:14: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
153:10: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
177:13: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
178:14: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
223:14: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
246:22: INFO: Added keywords to args of function 'tf.cond'
248:27: INFO: Added keywords to args of function 'tf.cond'
265:20: INFO: Added keywords to args of function 'tf.cond'
360:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
369:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
377:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
419:2: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
424:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
425:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
436:18: INFO: Renamed 'tf.gfile.Glob' to 'tf.io.gfile.glob'
438:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
449:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/agent.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/efficient-hrl/agent.py'
--------------------------------------------------------------------------------

27:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
137:18: INFO: Added keywords to args of function 'tf.shape'
137:39: INFO: Added keywords to args of function 'tf.shape'
139:25: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
170:10: INFO: tf.train.exponential_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

170:10: INFO: Renamed 'tf.train.exponential_decay' to 'tf.compat.v1.train.exponential_decay'
179:19: INFO: Renamed 'tf.distributions.Normal' to 'tf.compat.v1.distributions.Normal'
224:27: INFO: Added keywords to args of function 'tf.shape'
262:12: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
330:21: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
390:30: INFO: Added keywords to args of function 'tf.cond'
552:38: INFO: Added keywords to args of function 'tf.reduce_mean'
553:8: INFO: Added keywords to args of function 'tf.reduce_sum'
595:26: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

598:19: INFO: Added keywords to args of function 'tf.shape'
600:13: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
613:44: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
613:44: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
641:26: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

644:14: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
650:36: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
659:44: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
659:44: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
672:31: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
673:46: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
687:18: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
689:33: INFO: Renamed 'tf.make_template' to 'tf.compat.v1.make_template'
692:29: INFO: Renamed 'tf.make_template' to 'tf.compat.v1.make_template'
708:17: INFO: Added keywords to args of function 'tf.shape'
714:13: INFO: Added keywords to args of function 'tf.reduce_sum'
715:17: INFO: Renamed 'tf.distributions.Categorical' to 'tf.compat.v1.distributions.Categorical'
721:22: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
726:13: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
727:13: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
729:8: INFO: Renamed 'tf.layers.flatten' to 'tf.compat.v1.layers.flatten'
732:25: INFO: Added keywords to args of function 'tf.reduce_sum'
733:16: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
733:16: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
734:44: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
734:44: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
737:18: INFO: Added keywords to args of function 'tf.reduce_mean'
738:24: INFO: Added keywords to args of function 'tf.reduce_logsumexp'
740:21: INFO: Renamed 'tf.log' to 'tf.math.log'
740:28: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
741:12: INFO: Added keywords to args of function 'tf.reduce_mean'
767:26: INFO: Added keywords to args of function 'tf.shape'
768:11: INFO: Renamed 'tf.distributions.Normal' to 'tf.compat.v1.distributions.Normal'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/run_train.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/efficient-hrl/run_train.py'
--------------------------------------------------------------------------------

32:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
37:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
37:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
49:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/agents/ddpg_agent.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/efficient-hrl/agents/ddpg_agent.py'
--------------------------------------------------------------------------------

26:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
89:30: INFO: tf.losses.huber_loss requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
89:30: INFO: Renamed 'tf.losses.huber_loss' to 'tf.compat.v1.losses.huber_loss'
130:18: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
131:22: INFO: Renamed 'tf.make_template' to 'tf.compat.v1.make_template'
133:23: INFO: Renamed 'tf.make_template' to 'tf.compat.v1.make_template'
135:29: INFO: Renamed 'tf.make_template' to 'tf.compat.v1.make_template'
137:30: INFO: Renamed 'tf.make_template' to 'tf.compat.v1.make_template'
183:20: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
183:37: INFO: Added keywords to args of function 'tf.shape'
363:11: INFO: Added keywords to args of function 'tf.gradients'
368:19: INFO: Added keywords to args of function 'tf.norm'
370:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

370:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
371:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
371:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
372:8: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
372:8: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
373:8: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
373:8: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
374:8: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
374:8: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
376:10: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
376:10: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
377:10: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
377:10: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
400:16: INFO: Added keywords to args of function 'tf.convert_to_tensor'
403:22: INFO: Added keywords to args of function 'tf.reduce_sum'
522:30: INFO: tf.losses.huber_loss requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
522:30: INFO: Renamed 'tf.losses.huber_loss' to 'tf.compat.v1.losses.huber_loss'
563:18: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
564:22: INFO: Renamed 'tf.make_template' to 'tf.compat.v1.make_template'
566:23: INFO: Renamed 'tf.make_template' to 'tf.compat.v1.make_template'
568:24: INFO: Renamed 'tf.make_template' to 'tf.compat.v1.make_template'
570:29: INFO: Renamed 'tf.make_template' to 'tf.compat.v1.make_template'
572:30: INFO: Renamed 'tf.make_template' to 'tf.compat.v1.make_template'
574:31: INFO: Renamed 'tf.make_template' to 'tf.compat.v1.make_template'
668:8: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
668:25: INFO: Added keywords to args of function 'tf.shape'
718:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

718:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
719:4: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
719:4: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
720:4: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
720:4: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
721:4: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
721:4: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
722:4: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
722:4: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
723:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

723:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
724:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
724:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
724:32: INFO: Added keywords to args of function 'tf.reduce_mean'
725:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
725:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
725:31: INFO: Added keywords to args of function 'tf.reduce_max'
726:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
726:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
726:31: INFO: Added keywords to args of function 'tf.reduce_min'
727:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

727:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
728:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
728:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
728:32: INFO: Added keywords to args of function 'tf.reduce_mean'
729:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
729:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
729:31: INFO: Added keywords to args of function 'tf.reduce_max'
730:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
730:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
730:31: INFO: Added keywords to args of function 'tf.reduce_min'
731:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

731:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
732:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
732:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
732:32: INFO: Added keywords to args of function 'tf.reduce_mean'
733:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
733:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
733:31: INFO: Added keywords to args of function 'tf.reduce_max'
734:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
734:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
734:31: INFO: Added keywords to args of function 'tf.reduce_min'
735:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

735:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
736:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
736:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
736:32: INFO: Added keywords to args of function 'tf.reduce_mean'
737:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
737:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
737:31: INFO: Added keywords to args of function 'tf.reduce_max'
738:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
738:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
738:31: INFO: Added keywords to args of function 'tf.reduce_min'
739:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
739:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
739:36: INFO: Added keywords to args of function 'tf.reduce_mean'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/agents/ddpg_networks.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/efficient-hrl/agents/ddpg_networks.py'
--------------------------------------------------------------------------------

27:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
67:26: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

68:26: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

71:18: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
73:24: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
73:45: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
76:14: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
89:44: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
89:44: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
98:14: INFO: Added keywords to args of function 'tf.reduce_sum'
128:26: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

131:13: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
139:44: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
139:44: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/agents/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/efficient-hrl/agents/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/agents/circular_buffer.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/efficient-hrl/agents/circular_buffer.py'
--------------------------------------------------------------------------------

48:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
65:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
68:30: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
68:30: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
140:20: INFO: Renamed 'tf.mod' to 'tf.math.floormod'
144:12: INFO: Renamed 'tf.scatter_update' to 'tf.compat.v1.scatter_update'
147:11: ERROR: Using member tf.contrib.framework.smart_cond in deprecated module tf.contrib. tf.contrib.framework.smart_cond cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
177:16: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
206:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

206:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
209:14: INFO: Changed tf.to_int64 call to tf.cast(..., dtype=tf.int64).
209:26: INFO: Added keywords to args of function 'tf.reduce_max'
213:18: INFO: Added keywords to args of function 'tf.convert_to_tensor'
241:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

241:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
244:14: INFO: Changed tf.to_int64 call to tf.cast(..., dtype=tf.int64).
244:26: INFO: Added keywords to args of function 'tf.reduce_max'
249:22: INFO: Renamed 'tf.mod' to 'tf.math.floormod'
272:11: INFO: Added keywords to args of function 'tf.cond'
274:27: INFO: Renamed 'tf.mod' to 'tf.math.floormod'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/context/gin_imports.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/efficient-hrl/context/gin_imports.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/context/gin_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/efficient-hrl/context/gin_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/context/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/efficient-hrl/context/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/context/samplers.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/efficient-hrl/context/samplers.py'
--------------------------------------------------------------------------------

27:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
103:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
126:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
139:14: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
232:13: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
232:26: INFO: Renamed 'tf.mod' to 'tf.math.floormod'
290:14: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
342:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
400:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
413:14: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
433:11: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
433:28: INFO: Added keywords to args of function 'tf.shape'
434:11: INFO: Renamed 'tf.random_shuffle' to 'tf.random.shuffle'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/context/context.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/efficient-hrl/context/context.py'
--------------------------------------------------------------------------------

216:15: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
285:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
291:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

291:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
292:15: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
366:16: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
367:17: INFO: Renamed 'tf.assign_add' to 'tf.compat.v1.assign_add'
382:12: INFO: Added keywords to args of function 'tf.cond'
385:15: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
388:18: INFO: Renamed 'tf.assign_add' to 'tf.compat.v1.assign_add'
412:15: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
415:21: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
423:16: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
426:17: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/context/context_transition_functions.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/efficient-hrl/context/context_transition_functions.py'
--------------------------------------------------------------------------------

47:9: INFO: Added keywords to args of function 'tf.cond'
47:17: INFO: Renamed 'tf.mod' to 'tf.math.floormod'
83:11: INFO: Added keywords to args of function 'tf.cond'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/context/rewards_functions.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/efficient-hrl/context/rewards_functions.py'
--------------------------------------------------------------------------------

40:11: INFO: Added keywords to args of function 'tf.reduce_mean'
41:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
41:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
42:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
42:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
42:39: INFO: Added keywords to args of function 'tf.reduce_max'
43:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
43:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
43:39: INFO: Added keywords to args of function 'tf.reduce_min'
44:18: INFO: Added keywords to args of function 'tf.reduce_mean'
45:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
45:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
46:4: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
46:4: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
108:10: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
146:15: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
151:16: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
205:23: INFO: Added keywords to args of function 'tf.cond'
245:8: INFO: Added keywords to args of function 'tf.reduce_mean'
245:23: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
249:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

249:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
250:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
250:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
250:36: INFO: Added keywords to args of function 'tf.reduce_mean'
251:6: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
251:6: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
252:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
252:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
252:37: INFO: Added keywords to args of function 'tf.reduce_mean'
253:6: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
253:6: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
254:12: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
290:8: INFO: Added keywords to args of function 'tf.reduce_mean'
290:23: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
293:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

293:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
294:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
294:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
294:36: INFO: Added keywords to args of function 'tf.reduce_mean'
295:6: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
295:6: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
296:12: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
363:13: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
365:17: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
369:16: INFO: Added keywords to args of function 'tf.convert_to_tensor'
370:20: INFO: Added keywords to args of function 'tf.convert_to_tensor'
381:13: INFO: Added keywords to args of function 'tf.reduce_sum'
382:17: INFO: Added keywords to args of function 'tf.reduce_sum'
388:13: INFO: Added keywords to args of function 'tf.reduce_sum'
389:17: INFO: Added keywords to args of function 'tf.reduce_sum'
396:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

396:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
397:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
397:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
397:37: INFO: Added keywords to args of function 'tf.reduce_mean'
398:6: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
398:6: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
400:10: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
404:28: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
404:58: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
405:26: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
405:46: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
466:13: INFO: Added keywords to args of function 'tf.convert_to_tensor'
478:15: INFO: Added keywords to args of function 'tf.reduce_sum'
480:18: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
480:43: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
539:18: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
541:13: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
545:21: INFO: Added keywords to args of function 'tf.convert_to_tensor'
546:16: INFO: Added keywords to args of function 'tf.convert_to_tensor'
553:16: INFO: Added keywords to args of function 'tf.reduce_sum'
554:11: INFO: Added keywords to args of function 'tf.reduce_sum'
556:16: INFO: Added keywords to args of function 'tf.reduce_sum'
558:11: INFO: Added keywords to args of function 'tf.reduce_sum'
564:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

564:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
565:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
565:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
565:37: INFO: Added keywords to args of function 'tf.reduce_mean'
566:6: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
566:6: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
570:9: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
570:28: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
606:9: INFO: Added keywords to args of function 'tf.reduce_sum'
606:23: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
610:12: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
611:9: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
611:44: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
665:14: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
667:15: INFO: Added keywords to args of function 'tf.reduce_sum'
669:14: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
686:12: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
737:12: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
737:24: INFO: Added keywords to args of function 'tf.reduce_sum'
739:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

739:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/environments/create_maze_env.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/efficient-hrl/environments/create_maze_env.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/environments/maze_env.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/efficient-hrl/environments/maze_env.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/environments/point_maze_env.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/efficient-hrl/environments/point_maze_env.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/environments/ant_maze_env.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/efficient-hrl/environments/ant_maze_env.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/environments/ant.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/efficient-hrl/environments/ant.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/environments/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/efficient-hrl/environments/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/environments/point.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/efficient-hrl/environments/point.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/environments/maze_env_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/efficient-hrl/environments/maze_env_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/scripts/local_eval.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/efficient-hrl/scripts/local_eval.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/scripts/local_train.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/efficient-hrl/scripts/local_train.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/utils/eval_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/efficient-hrl/utils/eval_utils.py'
--------------------------------------------------------------------------------

42:25: INFO: Renamed 'tf.contrib.training.checkpoints_iterator' to 'tf.train.checkpoints_iterator'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/utils/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/efficient-hrl/utils/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/efficient-hrl/utils/utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/efficient-hrl/utils/utils.py'
--------------------------------------------------------------------------------

122:13: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
122:31: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
275:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
282:13: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
300:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
301:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
301:14: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
306:20: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
306:20: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
312:13: INFO: Added keywords to args of function 'tf.cond'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/train_supervised_active_vision.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_planning/train_supervised_active_vision.py'
--------------------------------------------------------------------------------

ERROR: Failed to parse.
Traceback (most recent call last):
  File "/home/arion/.local/lib/python3.10/site-packages/tensorflow/tools/compatibility/ast_edits.py", line 933, in update_string_pasta
    t = pasta.parse(text)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/__init__.py", line 23, in parse
    t = ast_utils.parse(src)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/base/ast_utils.py", line 56, in parse
    tree = ast.parse(sanitize_source(src))
  File "/usr/lib/python3.10/ast.py", line 50, in parse
    return compile(source, filename, mode, flags,
  File "<unknown>", line 185
    print inputs
    ^^^^^^^^^^^^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)?

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/tasks.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_planning/tasks.py'
--------------------------------------------------------------------------------

106:11: INFO: Changing labels arg of tf.nn.softmax_cross_entropy_with_logits to tf.stop_gradient(labels). Please check this transformation.

109:13: INFO: Added keywords to args of function 'tf.boolean_mask'
111:9: INFO: Added keywords to args of function 'tf.reduce_mean'
321:23: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
1310:21: INFO: Added keywords to args of function 'tf.boolean_mask'
1311:16: INFO: Added keywords to args of function 'tf.boolean_mask'
1313:11: INFO: tf.losses.mean_squared_error requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
1313:11: INFO: Renamed 'tf.losses.mean_squared_error' to 'tf.compat.v1.losses.mean_squared_error'
1500:21: INFO: Added keywords to args of function 'tf.boolean_mask'
1501:16: INFO: Added keywords to args of function 'tf.boolean_mask'
1503:11: INFO: tf.losses.mean_squared_error requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
1503:11: INFO: Renamed 'tf.losses.mean_squared_error' to 'tf.compat.v1.losses.mean_squared_error'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/standard_fields.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_planning/standard_fields.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_planning/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/string_int_label_map_pb2.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_planning/string_int_label_map_pb2.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/visualization_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_planning/visualization_utils.py'
--------------------------------------------------------------------------------

75:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
76:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
90:2: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
381:23: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
703:13: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
704:2: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
704:2: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
732:14: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
733:2: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
733:2: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/policies.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_planning/policies.py'
--------------------------------------------------------------------------------

24:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
149:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
150:18: INFO: Renamed 'tf.nn.rnn_cell.BasicLSTMCell' to 'tf.compat.v1.nn.rnn_cell.BasicLSTMCell'
158:24: INFO: Renamed 'tf.nn.rnn_cell.LSTMStateTuple' to 'tf.compat.v1.nn.rnn_cell.LSTMStateTuple'
161:33: INFO: Renamed 'tf.nn.dynamic_rnn' to 'tf.compat.v1.nn.dynamic_rnn'
225:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
229:30: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
229:30: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
230:30: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

236:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
247:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
356:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
368:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
382:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
415:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
448:19: INFO: Renamed 'tf.contrib.rnn.BasicLSTMCell' to 'tf.compat.v1.nn.rnn_cell.BasicLSTMCell'
449:19: INFO: Renamed 'tf.contrib.rnn.MultiRNNCell' to 'tf.compat.v1.nn.rnn_cell.MultiRNNCell'
463:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/viz_active_vision_dataset_main.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_planning/viz_active_vision_dataset_main.py'
--------------------------------------------------------------------------------

ERROR: Failed to parse.
Traceback (most recent call last):
  File "/home/arion/.local/lib/python3.10/site-packages/tensorflow/tools/compatibility/ast_edits.py", line 933, in update_string_pasta
    t = pasta.parse(text)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/__init__.py", line 23, in parse
    t = ast_utils.parse(src)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/base/ast_utils.py", line 56, in parse
    tree = ast.parse(sanitize_source(src))
  File "/usr/lib/python3.10/ast.py", line 50, in parse
    return compile(source, filename, mode, flags,
  File "<unknown>", line 98
    print world
    ^^^^^^^^^^^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)?

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/label_map_util.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_planning/label_map_util.py'
--------------------------------------------------------------------------------

131:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/embedders.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_planning/embedders.py'
--------------------------------------------------------------------------------

24:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
70:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
74:18: INFO: Renamed 'tf.nn.rnn_cell.BasicLSTMCell' to 'tf.compat.v1.nn.rnn_cell.BasicLSTMCell'
75:19: INFO: Added keywords to args of function 'tf.shape'
76:24: INFO: Renamed 'tf.nn.dynamic_rnn' to 'tf.compat.v1.nn.dynamic_rnn'
118:13: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
126:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
138:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
142:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
145:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
149:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
152:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
156:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
159:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
163:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
173:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
176:13: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
176:13: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
180:22: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
180:22: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
181:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
181:14: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
185:22: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
185:22: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
188:25: INFO: Added keywords to args of function 'tf.nn.moments'
190:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
190:22: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
194:24: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
194:24: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
196:26: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
196:26: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
200:24: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
200:24: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
208:15: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
208:15: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
212:24: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
212:24: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
214:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
214:19: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
218:24: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
218:24: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
220:8: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
220:8: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
221:8: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
221:8: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
236:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
241:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
246:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
249:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
254:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
256:17: INFO: Added keywords to args of function 'tf.nn.avg_pool'
256:17: INFO: Renamed keyword argument for tf.nn.avg_pool from value to input
256:17: INFO: Renamed 'tf.nn.avg_pool' to 'tf.nn.avg_pool2d'
257:17: INFO: Added keywords to args of function 'tf.pad'
289:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
294:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
299:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
302:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
308:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
313:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
322:15: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
330:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
332:15: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
332:15: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
335:22: INFO: tf.random_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
335:22: INFO: Renamed 'tf.random_normal_initializer' to 'tf.compat.v1.random_normal_initializer'
336:13: INFO: Added keywords to args of function 'tf.nn.conv2d'
336:13: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
339:11: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
343:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
343:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
346:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
346:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
347:41: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
347:41: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
348:11: INFO: Renamed 'tf.nn.xw_plus_b' to 'tf.compat.v1.nn.xw_plus_b'
352:11: INFO: Added keywords to args of function 'tf.reduce_mean'
379:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
389:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
389:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
391:20: INFO: tf.variance_scaling_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
391:20: INFO: Renamed 'tf.variance_scaling_initializer' to 'tf.compat.v1.variance_scaling_initializer'
392:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
392:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
393:41: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
393:41: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
394:11: INFO: Renamed 'tf.nn.xw_plus_b' to 'tf.compat.v1.nn.xw_plus_b'
397:11: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
461:28: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

462:27: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
462:27: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
467:25: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
527:12: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
527:12: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/envs/task_env.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_planning/envs/task_env.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/envs/util.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_planning/envs/util.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/envs/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_planning/envs/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/envs/active_vision_dataset_env.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_planning/envs/active_vision_dataset_env.py'
--------------------------------------------------------------------------------

ERROR: Failed to parse.
Traceback (most recent call last):
  File "/home/arion/.local/lib/python3.10/site-packages/tensorflow/tools/compatibility/ast_edits.py", line 933, in update_string_pasta
    t = pasta.parse(text)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/__init__.py", line 23, in parse
    t = ast_utils.parse(src)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/base/ast_utils.py", line 56, in parse
    tree = ast.parse(sanitize_source(src))
  File "/usr/lib/python3.10/ast.py", line 50, in parse
    return compile(source, filename, mode, flags,
  File "<unknown>", line 940
    print 'path not found, image_id = ', self._cur_world, self._cur_image_id
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)?

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/preprocessing/vgg_preprocessing.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_planning/preprocessing/vgg_preprocessing.py'
--------------------------------------------------------------------------------

37:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
67:19: INFO: Added keywords to args of function 'tf.shape'
81:12: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
126:18: INFO: Added keywords to args of function 'tf.shape'
141:14: INFO: Added keywords to args of function 'tf.shape'
164:18: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
166:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
187:19: INFO: Added keywords to args of function 'tf.shape'
188:18: INFO: Added keywords to args of function 'tf.shape'
247:18: INFO: Added keywords to args of function 'tf.convert_to_tensor'
249:11: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
250:10: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
251:18: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
253:10: INFO: Added keywords to args of function 'tf.cond'
256:15: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
256:27: INFO: Renamed 'tf.rint' to 'tf.math.rint'
257:14: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
257:26: INFO: Renamed 'tf.rint' to 'tf.math.rint'
272:18: INFO: Added keywords to args of function 'tf.convert_to_tensor'
274:10: INFO: Added keywords to args of function 'tf.shape'
279:18: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
279:18: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
308:16: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
314:10: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
334:10: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/preprocessing/preprocessing_factory.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_planning/preprocessing/preprocessing_factory.py'
--------------------------------------------------------------------------------

28:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/preprocessing/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_planning/preprocessing/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/preprocessing/inception_preprocessing.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_planning/preprocessing/inception_preprocessing.py'
--------------------------------------------------------------------------------

38:8: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
63:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

63:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
130:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

130:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
141:36: INFO: Added keywords to args of function 'tf.image.sample_distorted_bounding_box'
142:8: INFO: Added keywords to args of function 'tf.shape'
186:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

186:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
198:6: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
198:6: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
207:6: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
207:6: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
219:26: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
223:6: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
223:6: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
237:6: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
237:6: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
266:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

266:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
277:14: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
277:14: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/preprocessing/lenet_preprocessing.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_planning/preprocessing/lenet_preprocessing.py'
--------------------------------------------------------------------------------

23:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
39:10: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
40:10: INFO: Renamed 'tf.image.resize_image_with_crop_or_pad' to 'tf.image.resize_with_crop_or_pad'
43:10: INFO: Renamed 'tf.div' to 'tf.compat.v1.div'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cognitive_planning/preprocessing/cifarnet_preprocessing.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cognitive_planning/preprocessing/cifarnet_preprocessing.py'
--------------------------------------------------------------------------------

27:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
51:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
51:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
54:10: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
56:12: INFO: Added keywords to args of function 'tf.pad'
58:20: INFO: Renamed 'tf.random_crop' to 'tf.image.random_crop'
65:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
65:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
91:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
91:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
93:10: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
96:18: INFO: Renamed 'tf.image.resize_image_with_crop_or_pad' to 'tf.image.resize_with_crop_or_pad'
100:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
100:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/train.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/train.py'
--------------------------------------------------------------------------------

34:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
35:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
274:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
274:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
289:2: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
290:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
314:20: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
326:19: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
326:37: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
329:20: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
329:38: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
332:21: INFO: Renamed 'tf.model_variables' to 'tf.compat.v1.model_variables'
333:20: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
333:20: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
340:10: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
340:10: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
348:10: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
348:10: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
352:35: INFO: Added keywords to args of function 'tf.argmax'
356:10: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
356:10: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
360:16: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
360:34: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
361:20: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
361:20: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
377:20: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
377:20: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
380:20: INFO: Renamed 'tf.train.MomentumOptimizer' to 'tf.compat.v1.train.MomentumOptimizer'
382:20: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
398:19: INFO: Renamed 'tf.check_numerics' to 'tf.debugging.check_numerics'
399:20: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
399:20: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
421:8: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
421:26: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
424:17: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
424:17: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
427:21: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
433:6: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
464:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/model.py'
--------------------------------------------------------------------------------

124:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
124:27: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
133:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
133:29: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
135:12: INFO: Renamed 'tf.reverse_v2' to 'tf.reverse'
145:10: INFO: Added keywords to args of function 'tf.shape'
154:12: INFO: Renamed 'tf.reverse_v2' to 'tf.reverse'
155:12: INFO: Added keywords to args of function 'tf.shape'
163:18: INFO: Added keywords to args of function 'tf.reduce_mean'
164:37: INFO: Added keywords to args of function 'tf.argmax'
200:32: INFO: Added keywords to args of function 'tf.shape'
202:28: INFO: Added keywords to args of function 'tf.argmax'
205:23: INFO: Added keywords to args of function 'tf.argmax'
206:23: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
206:23: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
208:10: INFO: Added keywords to args of function 'tf.shape'
212:42: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
212:42: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
214:10: INFO: Added keywords to args of function 'tf.shape'
264:38: INFO: Added keywords to args of function 'tf.shape'
267:38: INFO: Added keywords to args of function 'tf.shape'
320:14: INFO: Renamed 'tf.AUTO_REUSE' to 'tf.compat.v1.AUTO_REUSE'
410:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
443:30: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

476:28: INFO: Added keywords to args of function 'tf.shape'
477:27: INFO: Added keywords to args of function 'tf.shape'
478:30: INFO: Added keywords to args of function 'tf.reduce_mean'
582:19: INFO: Added keywords to args of function 'tf.shape'
582:40: INFO: Added keywords to args of function 'tf.shape'
695:26: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

702:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
891:26: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

892:26: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
892:26: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
894:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/common.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/common.py'
--------------------------------------------------------------------------------

24:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
235:11: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/vis.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/vis.py'
--------------------------------------------------------------------------------

36:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
195:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
195:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
214:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
218:2: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
220:2: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
223:2: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
225:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
237:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
243:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
263:29: INFO: Added keywords to args of function 'tf.shape'
268:22: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
274:33: INFO: Removed argument align_corners for function tf.image.resize_images
271:10: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
276:4: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
283:27: INFO: Renamed 'contrib_training.checkpoints_iterator' to 'tf.train.checkpoints_iterator'
287:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
290:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
292:17: INFO: Renamed 'tf.train.Scaffold' to 'tf.compat.v1.train.Scaffold'
292:43: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
293:24: INFO: Renamed 'tf.train.ChiefSessionCreator' to 'tf.compat.v1.train.ChiefSessionCreator'
297:11: INFO: Renamed 'tf.train.MonitoredSession' to 'tf.compat.v1.train.MonitoredSession'
303:10: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
317:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
327:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/export_model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/export_model.py'
--------------------------------------------------------------------------------

27:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
28:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
91:16: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
92:24: INFO: Added keywords to args of function 'tf.shape'
107:23: INFO: Added keywords to args of function 'tf.shape'
117:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
117:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
118:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
130:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
136:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
166:10: INFO: Removed argument align_corners for function tf.image.resize_images
162:22: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
171:29: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
171:29: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
178:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
178:27: INFO: Renamed 'tf.all_variables' to 'tf.compat.v1.all_variables'
181:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
182:16: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
195:6: INFO: Renamed 'tf.train.write_graph' to 'tf.io.write_graph'
201:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/eval.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/eval.py'
--------------------------------------------------------------------------------

32:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
91:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
91:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
108:2: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
109:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
127:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
131:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
144:14: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
149:13: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
161:54: INFO: tf.metrics.mean_iou requires manual check. tf.metrics have been replaced with object oriented versions in TF 2.0 and after. The metric function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
161:54: INFO: Renamed 'tf.metrics.mean_iou' to 'tf.compat.v1.metrics.mean_iou'
171:18: INFO: tf.metrics.true_positives requires manual check. tf.metrics have been replaced with object oriented versions in TF 2.0 and after. The metric function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
171:18: INFO: Renamed 'tf.metrics.true_positives' to 'tf.compat.v1.metrics.true_positives'
174:18: INFO: tf.metrics.false_positives requires manual check. tf.metrics have been replaced with object oriented versions in TF 2.0 and after. The metric function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
174:18: INFO: Renamed 'tf.metrics.false_positives' to 'tf.compat.v1.metrics.false_positives'
177:18: INFO: tf.metrics.false_negatives requires manual check. tf.metrics have been replaced with object oriented versions in TF 2.0 and after. The metric function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
177:18: INFO: Renamed 'tf.metrics.false_negatives' to 'tf.compat.v1.metrics.false_negatives'
181:12: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
191:11: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
191:11: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
192:11: INFO: Renamed 'tf.Print' to 'tf.compat.v1.Print'
195:17: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
195:17: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
208:8: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
212:8: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
227:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/input_preprocess.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/input_preprocess.py'
--------------------------------------------------------------------------------

73:4: INFO: Renamed 'tf.logging.warning' to 'tf.compat.v1.logging.warning'
107:16: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/common_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/common_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/model_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/model_test.py'
--------------------------------------------------------------------------------

64:21: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
97:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
104:17: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
134:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/utils_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/core/utils_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/conv2d_ws.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/core/conv2d_ws.py'
--------------------------------------------------------------------------------

40:37: INFO: Renamed 'tf.layers.Layer' to 'tf.compat.v1.layers.Layer'
60:32: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
60:32: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
142:18: INFO: Added keywords to args of function 'tf.nn.moments'
142:56: INFO: Renamed keyword argument for tf.nn.moments from keep_dims to keepdims
175:31: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

177:30: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
177:30: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
261:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
264:13: INFO: Added keywords to args of function 'tf.convert_to_tensor'
360:13: INFO: Added keywords to args of function 'tf.pad'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/nas_network.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/core/nas_network.py'
--------------------------------------------------------------------------------

83:24: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

84:24: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

155:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
241:12: INFO: Added keywords to args of function 'tf.reduce_mean'
272:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
274:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
332:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
334:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/dense_prediction_cell.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/core/dense_prediction_cell.py'
--------------------------------------------------------------------------------

207:28: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

214:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
224:12: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
256:32: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
256:32: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/resnet_v1_beta_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/core/resnet_v1_beta_test.py'
--------------------------------------------------------------------------------

39:11: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
41:11: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
235:12: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
250:12: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
257:21: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
278:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
296:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
316:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
482:12: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
496:12: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
502:21: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
522:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
539:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
558:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/xception_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/core/xception_test.py'
--------------------------------------------------------------------------------

32:11: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
56:4: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
56:4: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
57:4: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
57:4: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
59:4: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
59:4: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
60:4: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
87:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
103:4: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
103:4: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
104:4: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
104:4: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
106:4: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
106:4: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
107:4: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
134:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
369:12: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
384:12: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
391:21: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
412:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
430:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
450:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
473:6: INFO: Renamed 'tf.reset_default_graph' to 'tf.compat.v1.reset_default_graph'
483:20: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/conv2d_ws_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/core/conv2d_ws_test.py'
--------------------------------------------------------------------------------

34:18: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
42:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
86:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
94:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
102:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
119:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
120:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
127:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
139:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
149:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
157:13: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
168:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
174:13: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
175:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

175:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
178:23: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
185:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
192:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
200:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
201:20: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

205:11: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
205:29: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
207:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
213:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
216:10: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
216:28: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
221:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
230:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
239:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
240:21: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

246:16: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
246:34: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
250:16: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
250:34: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
255:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
270:15: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
284:13: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
297:13: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
302:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
311:13: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
316:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
325:13: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
330:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
341:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
344:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
358:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
365:8: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
378:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
381:6: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
392:13: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
396:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
405:13: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
414:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/preprocess_utils_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/core/preprocess_utils_test.py'
--------------------------------------------------------------------------------

36:12: INFO: Added keywords to args of function 'tf.convert_to_tensor'
66:12: INFO: Added keywords to args of function 'tf.convert_to_tensor'
92:12: INFO: Added keywords to args of function 'tf.convert_to_tensor'
93:12: INFO: Added keywords to args of function 'tf.convert_to_tensor'
112:12: INFO: Added keywords to args of function 'tf.convert_to_tensor'
133:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
159:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
172:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
190:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
191:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
205:13: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
206:13: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
217:13: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
218:13: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
231:13: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
232:13: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
288:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
308:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
320:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/xception.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/core/xception.py'
--------------------------------------------------------------------------------

98:18: INFO: Added keywords to args of function 'tf.pad'
272:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
393:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
397:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
469:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
499:16: INFO: Added keywords to args of function 'tf.reduce_mean'
923:28: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

930:26: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
930:26: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
937:30: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/feature_extractor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/core/feature_extractor.py'
--------------------------------------------------------------------------------

75:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
124:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
271:26: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
271:26: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
288:41: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

452:17: INFO: Added keywords to args of function 'tf.shape'
461:40: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/core/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/resnet_v1_beta.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/core/resnet_v1_beta.py'
--------------------------------------------------------------------------------

76:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
131:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
241:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
264:16: INFO: Added keywords to args of function 'tf.reduce_mean'
814:42: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

815:42: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/core/utils.py'
--------------------------------------------------------------------------------

41:11: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
41:11: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
56:20: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
96:26: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
96:26: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
104:26: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
104:26: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
106:26: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

210:19: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
210:19: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/nas_cell.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/core/nas_cell.py'
--------------------------------------------------------------------------------

87:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
90:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
93:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
97:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
101:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
105:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
119:24: INFO: Added keywords to args of function 'tf.shape'
158:40: INFO: Added keywords to args of function 'tf.shape'
159:39: INFO: Added keywords to args of function 'tf.shape'
211:29: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
215:21: INFO: Added keywords to args of function 'tf.shape'
217:23: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/nas_genotypes.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/core/nas_genotypes.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/preprocess_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/core/preprocess_utils.py'
--------------------------------------------------------------------------------

49:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
56:21: INFO: Renamed 'tf.reverse_v2' to 'tf.reverse'
60:12: INFO: Added keywords to args of function 'tf.cond'
84:31: INFO: Added keywords to args of function 'tf.shape'
134:7: INFO: Using default_name as name in call to name_scope.

135:12: INFO: Added keywords to args of function 'tf.convert_to_tensor'
182:13: INFO: Added keywords to args of function 'tf.pad'
212:19: INFO: Added keywords to args of function 'tf.shape'
277:18: INFO: Added keywords to args of function 'tf.shape'
292:14: INFO: Added keywords to args of function 'tf.shape'
314:18: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
316:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
345:11: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
351:18: INFO: Renamed 'tf.lin_space' to 'tf.linspace'
352:27: INFO: Renamed 'tf.random_shuffle' to 'tf.random.shuffle'
370:16: INFO: Added keywords to args of function 'tf.shape'
377:21: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
377:21: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
382:12: WARNING: tf.image.resize called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize.
386:8: INFO: Removed argument align_corners for function tf.image.resize
405:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

405:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
412:22: INFO: Added keywords to args of function 'tf.shape'
469:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

469:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
500:17: INFO: Added keywords to args of function 'tf.cond'
501:18: INFO: Added keywords to args of function 'tf.reduce_max'
510:18: INFO: Added keywords to args of function 'tf.reduce_max'
510:43: INFO: Added keywords to args of function 'tf.reduce_max'
511:27: WARNING: tf.image.resize called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize.
512:40: INFO: Removed argument align_corners for function tf.image.resize
517:24: WARNING: tf.image.resize called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize.
521:12: INFO: Removed argument align_corners for function tf.image.resize
525:24: WARNING: tf.image.resize called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize.
529:12: INFO: Removed argument align_corners for function tf.image.resize
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/dense_prediction_cell_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/core/dense_prediction_cell_test.py'
--------------------------------------------------------------------------------

113:17: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
118:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
124:17: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
130:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/core/nas_network_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/core/nas_network_test.py'
--------------------------------------------------------------------------------

39:11: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
41:11: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
81:16: INFO: Renamed 'tf.AUTO_REUSE' to 'tf.compat.v1.AUTO_REUSE'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/deprecated/segmentation_dataset.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/deprecated/segmentation_dataset.py'
--------------------------------------------------------------------------------

159:23: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
161:24: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
163:22: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
165:22: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
167:21: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
169:42: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
171:41: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
193:13: INFO: Renamed 'tf.TFRecordReader' to 'tf.compat.v1.TFRecordReader'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/deprecated/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/deprecated/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/datasets/build_ade20k_data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/datasets/build_ade20k_data.py'
--------------------------------------------------------------------------------

30:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
32:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
36:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
41:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
46:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
51:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
70:14: INFO: Renamed 'tf.gfile.Glob' to 'tf.io.gfile.glob'
90:9: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
99:21: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
103:19: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
116:2: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
123:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/datasets/build_voc2012_data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/datasets/build_voc2012_data.py'
--------------------------------------------------------------------------------

64:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
66:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
70:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
75:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
80:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
111:9: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
121:21: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
127:19: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
140:19: INFO: Renamed 'tf.gfile.Glob' to 'tf.io.gfile.glob'
146:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/datasets/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/datasets/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/datasets/build_data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/datasets/build_data.py'
--------------------------------------------------------------------------------

36:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
38:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
41:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
63:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
65:22: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/datasets/data_generator.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/datasets/data_generator.py'
--------------------------------------------------------------------------------

173:6: INFO: Renamed 'tf.logging.warning' to 'tf.compat.v1.logging.warning'
214:13: INFO: Added keywords to args of function 'tf.cond'
221:12: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
223:12: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
225:12: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
227:12: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
229:12: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
231:12: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
233:12: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
236:22: INFO: Added keywords to args of function 'tf.parse_single_example'
236:22: INFO: Renamed 'tf.parse_single_example' to 'tf.io.parse_single_example'
339:11: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

350:11: INFO: Renamed 'tf.gfile.Glob' to 'tf.io.gfile.glob'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/datasets/remove_gt_colormap.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/datasets/remove_gt_colormap.py'
--------------------------------------------------------------------------------

63:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/datasets/data_generator_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/datasets/data_generator_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/datasets/build_cityscapes_data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/datasets/build_cityscapes_data.py'
--------------------------------------------------------------------------------

75:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
77:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
81:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
154:9: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
162:21: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
165:19: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
188:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/evaluation/streaming_metrics.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/evaluation/streaming_metrics.py'
--------------------------------------------------------------------------------

37:9: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
42:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
43:16: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
43:16: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
47:20: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
47:20: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
50:12: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
50:42: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
52:20: INFO: Renamed 'tf.assign_add' to 'tf.compat.v1.assign_add'
110:6: INFO: Added keywords to args of function 'tf.convert_to_tensor'
111:6: INFO: Added keywords to args of function 'tf.convert_to_tensor'
112:6: INFO: Added keywords to args of function 'tf.convert_to_tensor'
113:6: INFO: Added keywords to args of function 'tf.convert_to_tensor'
114:6: INFO: Added keywords to args of function 'tf.convert_to_tensor'
115:6: INFO: Added keywords to args of function 'tf.convert_to_tensor'
116:6: INFO: Added keywords to args of function 'tf.convert_to_tensor'
117:6: INFO: Added keywords to args of function 'tf.convert_to_tensor'
125:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
126:23: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
204:6: INFO: Added keywords to args of function 'tf.convert_to_tensor'
205:6: INFO: Added keywords to args of function 'tf.convert_to_tensor'
206:6: INFO: Added keywords to args of function 'tf.convert_to_tensor'
207:6: INFO: Added keywords to args of function 'tf.convert_to_tensor'
208:6: INFO: Added keywords to args of function 'tf.convert_to_tensor'
209:6: INFO: Added keywords to args of function 'tf.convert_to_tensor'
210:6: INFO: Added keywords to args of function 'tf.convert_to_tensor'
211:6: INFO: Added keywords to args of function 'tf.convert_to_tensor'
212:6: INFO: Added keywords to args of function 'tf.convert_to_tensor'
218:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
219:23: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/evaluation/base_metric.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/evaluation/base_metric.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/evaluation/panoptic_quality_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/evaluation/panoptic_quality_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/evaluation/parsing_covering.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/evaluation/parsing_covering.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/evaluation/streaming_metrics_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/evaluation/streaming_metrics_test.py'
--------------------------------------------------------------------------------

71:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
72:25: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
73:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
74:27: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
93:15: INFO: Renamed 'tf.local_variables_initializer' to 'tf.compat.v1.local_variables_initializer'
164:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
165:25: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
166:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
167:27: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
179:15: INFO: Renamed 'tf.local_variables_initializer' to 'tf.compat.v1.local_variables_initializer'
241:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
242:25: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
243:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
244:27: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
265:15: INFO: Renamed 'tf.local_variables_initializer' to 'tf.compat.v1.local_variables_initializer'
338:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
339:25: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
340:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
341:27: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
356:15: INFO: Renamed 'tf.local_variables_initializer' to 'tf.compat.v1.local_variables_initializer'
469:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
470:25: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
471:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
472:27: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
487:15: INFO: Renamed 'tf.local_variables_initializer' to 'tf.compat.v1.local_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/evaluation/eval_coco_format.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/evaluation/eval_coco_format.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/evaluation/eval_coco_format_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/evaluation/eval_coco_format_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/evaluation/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/evaluation/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/evaluation/test_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/evaluation/test_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/evaluation/test_utils_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/evaluation/test_utils_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/evaluation/parsing_covering_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/evaluation/parsing_covering_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/evaluation/panoptic_quality.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/evaluation/panoptic_quality.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/utils/train_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/utils/train_utils.py'
--------------------------------------------------------------------------------

28:9: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
89:15: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
89:15: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
103:8: INFO: Renamed 'tf.logging.warning' to 'tf.compat.v1.logging.warning'
106:22: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
106:22: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
144:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

144:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
147:21: INFO: Renamed 'tf.nn.softmax_cross_entropy_with_logits_v2' to 'tf.nn.softmax_cross_entropy_with_logits'
155:21: INFO: Added keywords to args of function 'tf.reduce_sum'
156:22: INFO: Added keywords to args of function 'tf.reduce_sum'
158:8: INFO: tf.losses.add_loss requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
158:8: INFO: Renamed 'tf.losses.add_loss' to 'tf.compat.v1.losses.add_loss'
160:21: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
160:33: INFO: Added keywords to args of function 'tf.shape'
164:25: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
167:24: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
167:36: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
169:25: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
175:21: INFO: Added keywords to args of function 'tf.reduce_sum'
176:22: INFO: Added keywords to args of function 'tf.reduce_sum'
177:12: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
179:8: INFO: tf.losses.add_loss requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
179:8: INFO: Renamed 'tf.losses.add_loss' to 'tf.compat.v1.losses.add_loss'
200:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
204:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
207:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
222:18: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
251:13: INFO: Renamed 'tf.model_variables' to 'tf.compat.v1.model_variables'
324:16: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
327:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
330:20: INFO: tf.train.exponential_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

330:20: INFO: Renamed 'tf.train.exponential_decay' to 'tf.compat.v1.train.exponential_decay'
337:20: INFO: tf.train.polynomial_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

337:20: INFO: Renamed 'tf.train.polynomial_decay' to 'tf.compat.v1.train.polynomial_decay'
344:20: INFO: tf.train.cosine_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

344:20: INFO: Renamed 'tf.train.cosine_decay' to 'tf.compat.v1.train.cosine_decay'
352:20: INFO: tf.train.piecewise_constant_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

352:20: INFO: Renamed 'tf.train.piecewise_constant_decay' to 'tf.compat.v1.train.piecewise_constant_decay'
366:8: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
371:9: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/utils/save_annotation.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/utils/save_annotation.py'
--------------------------------------------------------------------------------

65:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
66:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/utils/get_dataset_colormap.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/utils/get_dataset_colormap.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/utils/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/utils/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/deeplab/utils/get_dataset_colormap_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/deeplab/utils/get_dataset_colormap_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/vid2depth/project.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/vid2depth/project.py'
--------------------------------------------------------------------------------

43:9: INFO: Added keywords to args of function 'tf.shape'
64:24: INFO: Added keywords to args of function 'tf.transpose'
92:6: INFO: Added keywords to args of function 'tf.transpose'
122:15: INFO: Added keywords to args of function 'tf.shape'
176:32: INFO: Renamed keyword argument for tf.squeeze from squeeze_dims to axis
206:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
211:17: INFO: Added keywords to args of function 'tf.shape'
214:8: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
215:8: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
219:20: INFO: Added keywords to args of function 'tf.shape'
220:20: INFO: Added keywords to args of function 'tf.shape'
235:11: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
259:14: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
265:11: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
266:11: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
282:23: INFO: Added keywords to args of function 'tf.shape'
283:22: INFO: Added keywords to args of function 'tf.shape'
295:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

295:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
302:17: INFO: Added keywords to args of function 'tf.transpose'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/vid2depth/util.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/vid2depth/util.py'
--------------------------------------------------------------------------------

94:15: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
96:24: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
101:21: ERROR: Using member tf.contrib.framework.list_variables in deprecated module tf.contrib. tf.contrib.framework.list_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/vid2depth/train.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/vid2depth/train.py'
--------------------------------------------------------------------------------

81:2: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
114:24: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
116:10: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
118:7: INFO: Renamed 'tf.train.Supervisor' to 'tf.compat.v1.train.Supervisor'
120:11: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
164:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/vid2depth/model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/vid2depth/model.py'
--------------------------------------------------------------------------------

32:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
102:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

102:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
105:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
127:8: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
132:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

132:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
156:25: INFO: Changed tf.image.resize_area call to tf.image.resize(..., method=tf.image.ResizeMethod.AREA).
207:34: INFO: Added keywords to args of function 'tf.reduce_mean'
215:32: INFO: Added keywords to args of function 'tf.reduce_mean'
223:56: INFO: Added keywords to args of function 'tf.reduce_mean'
225:55: INFO: Added keywords to args of function 'tf.reduce_mean'
249:24: INFO: Added keywords to args of function 'tf.reduce_mean'
250:24: INFO: Added keywords to args of function 'tf.reduce_mean'
253:11: INFO: Added keywords to args of function 'tf.reduce_mean'
253:47: INFO: Added keywords to args of function 'tf.reduce_mean'
270:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

270:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
271:14: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
274:30: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
278:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
278:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
279:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
279:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
281:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
281:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
283:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
283:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
285:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
285:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
286:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
286:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
289:6: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
289:6: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
290:6: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
290:6: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
291:6: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
291:6: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
292:6: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
292:6: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
293:6: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
293:6: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
294:6: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
294:6: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
298:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
298:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
301:10: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
301:10: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
302:10: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
302:10: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
303:10: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
303:10: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
306:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
306:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
308:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
308:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
310:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
310:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
313:10: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
313:10: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
316:10: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
316:10: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
319:10: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
319:10: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
320:10: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
320:10: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
321:10: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
321:10: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
322:10: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
322:10: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
323:10: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
323:10: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
324:10: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
324:10: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
328:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

328:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
329:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
330:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
343:18: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
350:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

350:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
360:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

360:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/vid2depth/nets.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/vid2depth/nets.py'
--------------------------------------------------------------------------------

27:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
73:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

73:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
81:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
87:44: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

98:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
109:24: INFO: Added keywords to args of function 'tf.reduce_mean'
124:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
131:44: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

172:17: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
180:17: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
188:17: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
207:11: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/vid2depth/inference.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/vid2depth/inference.py'
--------------------------------------------------------------------------------

88:10: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
89:7: INFO: Renamed 'tf.train.Supervisor' to 'tf.compat.v1.train.Supervisor'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/vid2depth/reader.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/vid2depth/reader.py'
--------------------------------------------------------------------------------

48:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

48:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
49:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

49:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
52:28: INFO: Renamed 'tf.train.string_input_producer' to 'tf.compat.v1.train.string_input_producer'
54:26: INFO: Renamed 'tf.train.string_input_producer' to 'tf.compat.v1.train.string_input_producer'
56:21: INFO: Renamed 'tf.WholeFileReader' to 'tf.compat.v1.WholeFileReader'
60:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

60:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
61:21: INFO: Renamed 'tf.TextLineReader' to 'tf.compat.v1.TextLineReader'
66:22: INFO: Added keywords to args of function 'tf.decode_csv'
66:22: INFO: Renamed 'tf.decode_csv' to 'tf.io.decode_csv'
70:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

70:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
73:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

73:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
78:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

78:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
82:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

82:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
86:28: INFO: Renamed 'tf.matrix_inverse' to 'tf.linalg.inv'
89:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

89:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
91:12: INFO: Renamed 'tf.train.shuffle_batch' to 'tf.compat.v1.train.shuffle_batch'
101:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

101:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
121:19: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
124:24: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
127:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
128:21: INFO: Added keywords to args of function 'tf.shape'
128:45: INFO: Added keywords to args of function 'tf.shape'
142:16: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
149:11: INFO: Changed tf.image.resize_area call to tf.image.resize(..., method=tf.image.ResizeMethod.AREA).
162:33: INFO: Added keywords to args of function 'tf.shape'
163:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
164:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/vid2depth/ops/icp_train_demo.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/vid2depth/ops/icp_train_demo.py'
--------------------------------------------------------------------------------

111:23: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
112:23: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
137:17: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
137:17: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
138:11: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
140:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
141:23: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
141:23: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
161:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
161:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
162:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
162:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
163:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
163:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
164:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
164:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
165:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
165:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
166:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
166:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
167:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
167:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
169:19: INFO: Added keywords to args of function 'tf.norm'
170:27: INFO: Renamed keyword argument for tf.norm from keep_dims to keepdims
182:10: INFO: Added keywords to args of function 'tf.reduce_mean'
183:10: INFO: Added keywords to args of function 'tf.reduce_mean'
187:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
187:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
188:14: INFO: Renamed 'tf.train.GradientDescentOptimizer' to 'tf.compat.v1.train.GradientDescentOptimizer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/vid2depth/ops/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/vid2depth/ops/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/vid2depth/ops/icp_op.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/vid2depth/ops/icp_op.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/vid2depth/ops/icp_grad_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/vid2depth/ops/icp_grad_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/vid2depth/ops/icp_grad.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/vid2depth/ops/icp_grad.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/vid2depth/ops/icp_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/vid2depth/ops/icp_test.py'
--------------------------------------------------------------------------------

66:4: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
67:11: INFO: Renamed 'tf.truncated_normal' to 'tf.random.truncated_normal'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/vid2depth/ops/icp_util.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/vid2depth/ops/icp_util.py'
--------------------------------------------------------------------------------

115:16: INFO: Added keywords to args of function 'tf.transpose'
118:22: INFO: Added keywords to args of function 'tf.transpose'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/vid2depth/dataset/dataset_loader.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/vid2depth/dataset/dataset_loader.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/vid2depth/dataset/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/vid2depth/dataset/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/vid2depth/dataset/gen_data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/vid2depth/dataset/gen_data.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/cvt.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cvt_text/cvt.py'
--------------------------------------------------------------------------------

30:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
31:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
32:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
43:21: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
43:21: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
44:24: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
45:23: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
46:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
48:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cvt_text/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/preprocessing.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cvt_text/preprocessing.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/task_specific/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cvt_text/task_specific/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/task_specific/task_definitions.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cvt_text/task_specific/task_definitions.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/task_specific/word_level/tagging_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cvt_text/task_specific/word_level/tagging_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/task_specific/word_level/depparse_scorer.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cvt_text/task_specific/word_level/depparse_scorer.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/task_specific/word_level/tagging_scorers.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cvt_text/task_specific/word_level/tagging_scorers.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/task_specific/word_level/tagging_module.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cvt_text/task_specific/word_level/tagging_module.py'
--------------------------------------------------------------------------------

36:27: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
42:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
46:24: INFO: Renamed 'tf.layers.dense' to 'tf.compat.v1.layers.dense'
68:17: INFO: Added keywords to args of function 'tf.argmax'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/task_specific/word_level/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cvt_text/task_specific/word_level/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/task_specific/word_level/word_level_data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cvt_text/task_specific/word_level/word_level_data.py'
--------------------------------------------------------------------------------

52:8: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
60:11: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
66:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/task_specific/word_level/word_level_scorer.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cvt_text/task_specific/word_level/word_level_scorer.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/task_specific/word_level/depparse_module.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cvt_text/task_specific/word_level/depparse_module.py'
--------------------------------------------------------------------------------

36:27: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
42:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
50:28: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

51:27: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

54:21: INFO: Renamed 'tf.layers.dense' to 'tf.compat.v1.layers.dense'
56:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
56:14: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
59:15: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
59:15: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
65:18: INFO: Added keywords to args of function 'tf.shape'
73:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
73:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
79:24: INFO: Renamed 'tf.layers.dense' to 'tf.compat.v1.layers.dense'
84:23: INFO: Added keywords to args of function 'tf.shape'
116:17: INFO: Added keywords to args of function 'tf.argmax'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/base/configure.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cvt_text/base/configure.py'
--------------------------------------------------------------------------------

135:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/base/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cvt_text/base/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/base/embeddings.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cvt_text/base/embeddings.py'
--------------------------------------------------------------------------------

120:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/base/utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cvt_text/base/utils.py'
--------------------------------------------------------------------------------

43:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
53:2: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
54:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/corpus_processing/example.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cvt_text/corpus_processing/example.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/corpus_processing/scorer.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cvt_text/corpus_processing/scorer.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/corpus_processing/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cvt_text/corpus_processing/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/corpus_processing/minibatching.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cvt_text/corpus_processing/minibatching.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/corpus_processing/unlabeled_data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cvt_text/corpus_processing/unlabeled_data.py'
--------------------------------------------------------------------------------

63:10: INFO: Renamed 'tf.gfile.ListDirectory' to 'tf.io.gfile.listdir'
69:13: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/model/model_helpers.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cvt_text/model/model_helpers.py'
--------------------------------------------------------------------------------

26:19: INFO: Renamed 'tf.layers.dense' to 'tf.compat.v1.layers.dense'
31:9: WARNING: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
31:9: ERROR: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib. tf.contrib.rnn.DropoutWrapper cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
32:6: INFO: Renamed 'tf.contrib.rnn.LSTMCell' to 'tf.compat.v1.nn.rnn_cell.LSTMCell'
37:9: INFO: Renamed 'tf.contrib.rnn.MultiRNNCell' to 'tf.compat.v1.nn.rnn_cell.MultiRNNCell'
46:14: INFO: Renamed 'tf.nn.softmax_cross_entropy_with_logits_v2' to 'tf.nn.softmax_cross_entropy_with_logits'
48:9: INFO: Added keywords to args of function 'tf.reduce_sum'
48:36: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
48:48: INFO: Added keywords to args of function 'tf.reduce_sum'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/model/multitask_model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cvt_text/model/multitask_model.py'
--------------------------------------------------------------------------------

30:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
34:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
45:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
45:42: INFO: Renamed 'tf.AUTO_REUSE' to 'tf.compat.v1.AUTO_REUSE'
53:21: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
55:8: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
55:29: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
81:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
81:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
82:37: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
86:38: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
88:16: INFO: Renamed 'tf.train.MomentumOptimizer' to 'tf.compat.v1.train.MomentumOptimizer'
94:17: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
94:35: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/model/shared_inputs.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cvt_text/model/shared_inputs.py'
--------------------------------------------------------------------------------

28:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
29:27: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
30:19: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
31:16: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
32:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
33:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/model/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cvt_text/model/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/model/task_module.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cvt_text/model/task_module.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/model/encoder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cvt_text/model/encoder.py'
--------------------------------------------------------------------------------

39:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
40:30: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
40:30: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
42:24: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
42:24: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
44:24: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

45:25: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
45:25: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
50:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
51:30: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
51:30: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
54:24: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
54:24: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
56:14: INFO: Added keywords to args of function 'tf.shape'
62:15: INFO: Renamed 'tf.layers.conv1d' to 'tf.compat.v1.layers.conv1d'
65:15: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

65:29: INFO: Added keywords to args of function 'tf.reduce_max'
73:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
80:36: INFO: Renamed 'tf.nn.bidirectional_dynamic_rnn' to 'tf.compat.v1.nn.bidirectional_dynamic_rnn'
95:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
99:38: INFO: Renamed 'tf.nn.bidirectional_dynamic_rnn' to 'tf.compat.v1.nn.bidirectional_dynamic_rnn'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/training/trainer.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cvt_text/training/trainer.py'
--------------------------------------------------------------------------------

137:25: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
138:17: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/training/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cvt_text/training/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/cvt_text/training/training_progress.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/cvt_text/training/training_progress.py'
--------------------------------------------------------------------------------

38:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
39:31: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
56:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
78:10: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/show_and_tell_model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/im2txt/im2txt/show_and_tell_model.py'
--------------------------------------------------------------------------------

55:18: INFO: Renamed 'tf.TFRecordReader' to 'tf.compat.v1.TFRecordReader'
59:23: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
59:23: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
132:19: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
133:19: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
194:31: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
195:8: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
198:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
199:25: ERROR: Using member tf.contrib.layers.fully_connected in deprecated module tf.contrib. tf.contrib.layers.fully_connected cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
221:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
222:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
222:22: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
226:23: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
226:23: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
247:16: INFO: Renamed 'tf.contrib.rnn.BasicLSTMCell' to 'tf.compat.v1.nn.rnn_cell.BasicLSTMCell'
250:18: WARNING: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
250:18: ERROR: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib. tf.contrib.rnn.DropoutWrapper cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
255:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
270:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
284:26: INFO: Added keywords to args of function 'tf.reduce_sum'
285:26: INFO: Renamed 'tf.nn.dynamic_rnn' to 'tf.compat.v1.nn.dynamic_rnn'
295:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
296:15: ERROR: Using member tf.contrib.layers.fully_connected in deprecated module tf.contrib. tf.contrib.layers.fully_connected cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
307:16: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
312:19: INFO: Renamed 'tf.div' to 'tf.compat.v1.div'
312:26: INFO: Added keywords to args of function 'tf.reduce_sum'
313:26: INFO: Added keywords to args of function 'tf.reduce_sum'
315:6: INFO: tf.losses.add_loss requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
315:6: INFO: Renamed 'tf.losses.add_loss' to 'tf.compat.v1.losses.add_loss'
316:19: INFO: tf.losses.get_total_loss requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
316:19: INFO: Renamed 'tf.losses.get_total_loss' to 'tf.compat.v1.losses.get_total_loss'
319:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
319:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
320:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
320:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
321:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
322:8: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
322:8: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
332:14: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
335:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
347:21: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
347:47: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/train.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/im2txt/im2txt/train.py'
--------------------------------------------------------------------------------

27:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
29:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
31:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
33:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
35:0: ERROR: Using member tf.flags.DEFINE_boolean in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
37:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
38:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
41:0: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
41:25: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
55:9: INFO: Renamed 'tf.gfile.IsDirectory' to 'tf.io.gfile.isdir'
56:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
57:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
80:17: INFO: tf.train.exponential_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

80:17: INFO: Renamed 'tf.train.exponential_decay' to 'tf.compat.v1.train.exponential_decay'
90:15: ERROR: Using member tf.contrib.layers.optimize_loss in deprecated module tf.contrib. tf.contrib.layers.optimize_loss cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
99:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
102:2: ERROR: Using member tf.contrib.slim.learning.train in deprecated module tf.contrib. tf.contrib.slim.learning.train cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
114:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/run_inference.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/im2txt/im2txt/run_inference.py'
--------------------------------------------------------------------------------

32:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
34:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
37:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
38:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
42:0: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
42:25: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
59:21: INFO: Renamed 'tf.gfile.Glob' to 'tf.io.gfile.glob'
60:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
63:7: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
73:11: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
85:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/configuration.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/im2txt/im2txt/configuration.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/evaluate.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/im2txt/im2txt/evaluate.py'
--------------------------------------------------------------------------------

37:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
39:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
41:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
43:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
45:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
47:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
50:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
53:0: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
53:25: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
87:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
92:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
95:12: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
103:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
118:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
122:7: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
124:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
126:18: INFO: Renamed 'tf.train.global_step' to 'tf.compat.v1.train.global_step'
127:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
130:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
136:14: INFO: Renamed 'tf.train.start_queue_runners' to 'tf.compat.v1.train.start_queue_runners'
147:6: INFO: Renamed 'tf.logging.error' to 'tf.compat.v1.logging.error'
158:9: INFO: Renamed 'tf.gfile.IsDirectory' to 'tf.io.gfile.isdir'
159:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
160:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
171:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
174:17: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
174:17: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
175:21: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
175:21: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
182:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
198:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/inference_wrapper.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/im2txt/im2txt/inference_wrapper.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/show_and_tell_model_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/im2txt/im2txt/show_and_tell_model_test.py'
--------------------------------------------------------------------------------

39:20: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
44:24: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
49:25: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
66:13: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
101:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/ops/inputs.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/im2txt/im2txt/ops/inputs.py'
--------------------------------------------------------------------------------

40:22: INFO: Renamed 'tf.parse_single_sequence_example' to 'tf.io.parse_single_sequence_example'
43:25: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
46:27: INFO: Renamed 'tf.FixedLenSequenceFeature' to 'tf.io.FixedLenSequenceFeature'
89:22: INFO: Renamed 'tf.gfile.Glob' to 'tf.io.gfile.glob'
91:4: INFO: Renamed 'tf.logging.fatal' to 'tf.compat.v1.logging.fatal'
93:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
97:21: INFO: Renamed 'tf.train.string_input_producer' to 'tf.compat.v1.train.string_input_producer'
101:19: INFO: Renamed 'tf.RandomShuffleQueue' to 'tf.queue.RandomShuffleQueue'
107:21: INFO: Renamed 'tf.train.string_input_producer' to 'tf.compat.v1.train.string_input_producer'
110:19: INFO: Renamed 'tf.FIFOQueue' to 'tf.queue.FIFOQueue'
117:2: INFO: Renamed 'tf.train.queue_runner.add_queue_runner' to 'tf.compat.v1.train.queue_runner.add_queue_runner'
117:41: INFO: Renamed 'tf.train.queue_runner.QueueRunner' to 'tf.compat.v1.train.queue_runner.QueueRunner'
119:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
119:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
183:21: INFO: Added keywords to args of function 'tf.shape'
191:42: INFO: Renamed 'tf.train.batch_join' to 'tf.compat.v1.train.batch_join'
199:21: INFO: Added keywords to args of function 'tf.reduce_sum'
200:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
200:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
200:50: INFO: Added keywords to args of function 'tf.reduce_min'
201:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
201:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
201:50: INFO: Added keywords to args of function 'tf.reduce_max'
202:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
202:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
202:51: INFO: Added keywords to args of function 'tf.reduce_mean'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/ops/image_embedding_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/im2txt/im2txt/ops/image_embedding_test.py'
--------------------------------------------------------------------------------

37:19: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
44:13: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
77:22: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
88:36: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
89:36: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
90:36: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
91:35: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
92:34: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
93:35: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
101:36: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
102:36: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
103:34: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
104:35: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
105:34: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
106:35: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
114:36: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
115:34: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
116:34: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
117:34: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
118:34: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
119:35: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
127:36: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
128:34: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
129:34: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
130:34: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
131:34: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
132:35: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/ops/image_processing.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/im2txt/im2txt/ops/image_processing.py'
--------------------------------------------------------------------------------

39:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

39:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
44:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

44:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
95:6: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
95:6: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
98:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

98:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
111:12: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
117:12: INFO: Renamed 'tf.random_crop' to 'tf.image.random_crop'
120:12: INFO: Renamed 'tf.image.resize_image_with_crop_or_pad' to 'tf.image.resize_with_crop_or_pad'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/ops/image_embedding.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/im2txt/im2txt/ops/image_embedding.py'
--------------------------------------------------------------------------------

27:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
83:26: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

87:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
94:30: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
94:30: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
99:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
112:6: ERROR: Using member tf.contrib.layers.summaries.summarize_activation in deprecated module tf.contrib. tf.contrib.layers.summaries.summarize_activation cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/data/build_mscoco_data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/im2txt/im2txt/data/build_mscoco_data.py'
--------------------------------------------------------------------------------

103:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
105:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
108:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
110:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
113:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
115:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
117:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
119:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
122:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
124:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
126:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
128:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
131:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
134:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
137:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
169:17: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
172:25: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
214:7: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
272:13: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
370:7: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
408:7: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
454:9: INFO: Renamed 'tf.gfile.IsDirectory' to 'tf.io.gfile.isdir'
455:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
483:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/inference_utils/vocabulary.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/im2txt/im2txt/inference_utils/vocabulary.py'
--------------------------------------------------------------------------------

43:11: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
44:6: INFO: Renamed 'tf.logging.fatal' to 'tf.compat.v1.logging.fatal'
45:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
47:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
56:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/inference_utils/caption_generator_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/im2txt/im2txt/inference_utils/caption_generator_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/inference_utils/inference_wrapper_base.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/im2txt/im2txt/inference_utils/inference_wrapper_base.py'
--------------------------------------------------------------------------------

71:4: INFO: Renamed 'tf.logging.fatal' to 'tf.compat.v1.logging.fatal'
89:7: INFO: Renamed 'tf.gfile.IsDirectory' to 'tf.io.gfile.isdir'
95:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
97:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
114:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
116:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
135:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
136:16: INFO: Renamed 'tf.GraphDef' to 'tf.compat.v1.GraphDef'
137:9: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
142:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
143:16: INFO: Renamed 'tf.train.SaverDef' to 'tf.compat.v1.train.SaverDef'
144:9: INFO: Renamed 'tf.gfile.FastGFile' to 'tf.compat.v1.gfile.FastGFile'
146:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
162:4: INFO: Renamed 'tf.logging.fatal' to 'tf.compat.v1.logging.fatal'
179:4: INFO: Renamed 'tf.logging.fatal' to 'tf.compat.v1.logging.fatal'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/im2txt/im2txt/inference_utils/caption_generator.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/im2txt/im2txt/inference_utils/caption_generator.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/neural_gpu/data_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/neural_gpu/data_utils.py'
--------------------------------------------------------------------------------

29:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
65:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
68:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
71:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
76:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
85:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
385:11: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/neural_gpu/wmt_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/neural_gpu/wmt_utils.py'
--------------------------------------------------------------------------------

57:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
61:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
81:10: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
82:10: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
97:10: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
98:10: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
210:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
217:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
239:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
268:11: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
292:5: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
294:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
375:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
378:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
379:11: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/neural_gpu/program_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/neural_gpu/program_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/neural_gpu/neural_gpu_trainer.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/neural_gpu/neural_gpu_trainer.py'
--------------------------------------------------------------------------------

35:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
36:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
37:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
38:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
39:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
40:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
41:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
42:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
43:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
44:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
45:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
46:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
47:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
48:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
49:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
50:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
51:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
52:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
53:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
54:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
55:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
56:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
57:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
58:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
59:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
60:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
61:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
62:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
63:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
65:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
67:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
68:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
69:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
70:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
71:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
72:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
73:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
74:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
75:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
76:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
77:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
79:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
81:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
82:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
83:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
84:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
85:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
87:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
89:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
91:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
93:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
94:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
96:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
144:9: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
145:11: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
201:9: INFO: Renamed 'tf.gfile.IsDirectory' to 'tf.io.gfile.isdir'
203:4: INFO: Renamed 'tf.gfile.MkDir' to 'tf.io.gfile.mkdir'
217:4: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
243:9: INFO: Renamed 'tf.gfile.IsDirectory' to 'tf.io.gfile.isdir'
245:4: INFO: Renamed 'tf.gfile.MkDir' to 'tf.io.gfile.mkdir'
330:2: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
331:6: INFO: tf.orthogonal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
331:6: INFO: Renamed 'tf.orthogonal_initializer' to 'tf.compat.v1.orthogonal_initializer'
349:19: INFO: Renamed 'tf.train.replica_device_setter' to 'tf.compat.v1.train.replica_device_setter'
352:8: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
357:6: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
363:9: INFO: Renamed 'tf.train.Supervisor' to 'tf.compat.v1.train.Supervisor'
371:13: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
378:14: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
383:13: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
449:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
453:33: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
461:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
484:33: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
494:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
753:20: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
755:15: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
756:15: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
796:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
815:20: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
817:15: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
818:15: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
819:15: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
843:7: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
843:25: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
857:16: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
857:45: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
861:11: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
864:11: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
921:13: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
935:7: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
935:25: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
947:13: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
1027:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/neural_gpu/neural_gpu.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/neural_gpu/neural_gpu.py'
--------------------------------------------------------------------------------

27:12: ERROR: Using member tf.contrib.compiler.jit.experimental_jit_scope in deprecated module tf.contrib. tf.contrib.compiler.jit.experimental_jit_scope cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
34:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
36:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
36:10: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
41:10: INFO: Added keywords to args of function 'tf.nn.convolution'
41:10: INFO: Renamed keyword argument for tf.nn.convolution from filter to filters
41:36: INFO: Renamed keyword argument for tf.nn.convolution from dilation_rate to dilations
44:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
44:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
45:37: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
45:37: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
101:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
102:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
102:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
103:40: INFO: tf.ones_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
103:40: INFO: Renamed 'tf.ones_initializer' to 'tf.compat.v1.ones_initializer'
104:11: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
104:11: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
105:39: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
105:39: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
106:21: INFO: Added keywords to args of function 'tf.nn.moments'
106:43: INFO: Renamed keyword argument for tf.nn.moments from keep_dims to keepdims
157:9: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

160:8: INFO: Added keywords to args of function 'tf.cond'
160:24: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
176:7: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
183:18: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
191:12: INFO: Renamed 'tf.layers.dense' to 'tf.compat.v1.layers.dense'
192:10: INFO: Renamed 'tf.layers.dense' to 'tf.compat.v1.layers.dense'
193:10: INFO: Renamed 'tf.truncated_normal' to 'tf.random.truncated_normal'
193:30: INFO: Added keywords to args of function 'tf.shape'
197:12: INFO: Renamed 'tf.layers.dense' to 'tf.compat.v1.layers.dense'
198:27: INFO: Added keywords to args of function 'tf.shape'
221:14: INFO: Renamed 'tf.Print' to 'tf.compat.v1.Print'
225:28: INFO: Added keywords to args of function 'tf.transpose'
228:17: INFO: Renamed 'tf.Print' to 'tf.compat.v1.Print'
262:23: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
263:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
264:23: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
267:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
268:18: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
269:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
273:17: INFO: Added keywords to args of function 'tf.shape'
277:13: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
280:47: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
297:6: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
310:25: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
313:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
313:20: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
315:22: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
315:22: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
317:29: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
317:29: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
319:24: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
319:24: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
320:11: INFO: Renamed 'tf.scatter_update' to 'tf.compat.v1.scatter_update'
323:17: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
323:17: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
336:21: INFO: tf.train.exponential_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

336:21: INFO: Renamed 'tf.train.exponential_decay' to 'tf.compat.v1.train.exponential_decay'
339:23: INFO: Added keywords to args of function 'tf.cond'
343:14: INFO: Added keywords to args of function 'tf.cond'
343:30: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
348:14: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

350:15: INFO: Renamed 'tf.truncated_normal' to 'tf.random.truncated_normal'
350:35: INFO: Added keywords to args of function 'tf.shape'
352:20: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
370:14: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

372:15: INFO: Renamed 'tf.truncated_normal' to 'tf.random.truncated_normal'
372:35: INFO: Added keywords to args of function 'tf.shape'
374:20: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
409:14: INFO: Added keywords to args of function 'tf.multinomial'
409:14: INFO: Renamed 'tf.multinomial' to 'tf.random.categorical'
410:14: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
416:17: INFO: Added keywords to args of function 'tf.cond'
416:33: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
439:8: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
443:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

443:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
450:22: INFO: Added keywords to args of function 'tf.shape'
451:20: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
461:36: INFO: Added keywords to args of function 'tf.transpose'
466:16: INFO: Added keywords to args of function 'tf.transpose'
483:19: INFO: Renamed 'tf.contrib.rnn.BasicLSTMCell' to 'tf.compat.v1.nn.rnn_cell.BasicLSTMCell'
484:17: INFO: Renamed 'tf.contrib.rnn.MultiRNNCell' to 'tf.compat.v1.nn.rnn_cell.MultiRNNCell'
486:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
487:45: INFO: Renamed 'tf.nn.dynamic_rnn' to 'tf.compat.v1.nn.dynamic_rnn'
492:17: INFO: Renamed 'tf.layers.dense' to 'tf.compat.v1.layers.dense'
499:19: INFO: Added keywords to args of function 'tf.reduce_sum'
501:19: INFO: Added keywords to args of function 'tf.reduce_sum'
503:15: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
508:23: INFO: Renamed 'tf.layers.dense' to 'tf.compat.v1.layers.dense'
510:49: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
510:49: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
512:30: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
512:30: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
515:25: INFO: Renamed 'tf.layers.dense' to 'tf.compat.v1.layers.dense'
526:25: INFO: Renamed 'tf.layers.dense' to 'tf.compat.v1.layers.dense'
532:28: INFO: Added keywords to args of function 'tf.transpose'
537:36: INFO: Renamed 'tf.layers.dense' to 'tf.compat.v1.layers.dense'
539:36: INFO: Added keywords to args of function 'tf.transpose'
546:21: INFO: Added keywords to args of function 'tf.reduce_mean'
547:20: INFO: Renamed 'tf.layers.dense' to 'tf.compat.v1.layers.dense'
551:29: INFO: Added keywords to args of function 'tf.argmax'
560:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
560:35: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
563:20: INFO: Added keywords to args of function 'tf.while_loop'
588:12: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
591:19: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
591:37: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
597:64: INFO: Added keywords to args of function 'tf.while_loop'
608:22: INFO: Added keywords to args of function 'tf.transpose'
609:31: INFO: Added keywords to args of function 'tf.argmax'
623:17: INFO: Added keywords to args of function 'tf.transpose'
624:31: INFO: Changing labels arg of tf.nn.softmax_cross_entropy_with_logits to tf.stop_gradient(labels). Please check this transformation.

627:31: INFO: Changing labels arg of tf.nn.softmax_cross_entropy_with_logits to tf.stop_gradient(labels). Please check this transformation.

631:23: INFO: Renamed 'tf.log' to 'tf.math.log'
631:65: INFO: Renamed 'tf.log' to 'tf.math.log'
632:21: INFO: Added keywords to args of function 'tf.reduce_sum'
633:20: INFO: Added keywords to args of function 'tf.reduce_sum'
634:20: INFO: Added keywords to args of function 'tf.reduce_sum'
637:25: INFO: Added keywords to args of function 'tf.reduce_mean'
644:18: INFO: tf.gradients called with colocate_gradients_with_ops argument, requires manual check: tf.gradients no longer takes 'colocate_gradients_with_ops' argument, it behaves as if it was set to True.
644:18: INFO: Added keywords to args of function 'tf.gradients'
646:14: INFO: Removed argument colocate_gradients_with_ops for function tf.gradients
645:26: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
649:27: INFO: Added keywords to args of function 'tf.convert_to_tensor'
654:19: INFO: Renamed 'tf.truncated_normal' to 'tf.random.truncated_normal'
654:39: INFO: Added keywords to args of function 'tf.shape'
664:6: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
665:6: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
681:19: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
681:34: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_logit_pairing/train.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/adversarial_logit_pairing/train.py'
--------------------------------------------------------------------------------

101:5: INFO: Renamed 'tf.gfile.IsDirectory' to 'tf.io.gfile.isdir'
107:4: INFO: Renamed 'tf.logging.warning' to 'tf.compat.v1.logging.warning'
111:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
122:17: ERROR: Using member tf.contrib.framework.get_model_variables in deprecated module tf.contrib. tf.contrib.framework.get_model_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
130:14: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
137:14: ERROR: Using member tf.contrib.framework.assign_from_checkpoint_fn in deprecated module tf.contrib. tf.contrib.framework.assign_from_checkpoint_fn cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
148:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
149:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
152:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
153:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
157:19: INFO: Renamed 'tf.train.replica_device_setter' to 'tf.compat.v1.train.replica_device_setter'
166:25: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

171:20: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
189:19: INFO: tf.losses.softmax_cross_entropy requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
189:19: INFO: Renamed 'tf.losses.softmax_cross_entropy' to 'tf.compat.v1.losses.softmax_cross_entropy'
193:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
193:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
197:18: INFO: tf.losses.mean_squared_error requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
197:18: INFO: Renamed 'tf.losses.mean_squared_error' to 'tf.compat.v1.losses.mean_squared_error'
199:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
199:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
205:50: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
207:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
207:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
212:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

212:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
213:37: ERROR: Using member tf.contrib.framework.get_model_variables in deprecated module tf.contrib. tf.contrib.framework.get_model_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
226:18: INFO: Renamed 'tf.train.SyncReplicasOptimizer' to 'tf.compat.v1.train.SyncReplicasOptimizer'
233:17: ERROR: Using member tf.contrib.training.create_train_op in deprecated module tf.contrib. tf.contrib.training.create_train_op cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
235:21: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
235:39: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
237:6: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
237:6: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
239:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
239:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
240:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
240:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
241:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
241:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
242:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
242:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
243:24: INFO: Changed tf.to_double call to tf.cast(..., dtype=tf.float64).
248:17: INFO: Renamed 'tf.train.Scaffold' to 'tf.compat.v1.train.Scaffold'
251:10: INFO: Renamed 'tf.train.LoggingTensorHook' to 'tf.estimator.LoggingTensorHook'
254:10: INFO: Renamed 'tf.train.NanTensorHook' to 'tf.estimator.NanTensorHook'
257:10: INFO: Renamed 'tf.train.SummarySaverHook' to 'tf.estimator.SummarySaverHook'
261:10: INFO: Renamed 'tf.train.CheckpointSaverHook' to 'tf.estimator.CheckpointSaverHook'
268:12: INFO: Renamed 'tf.train.StopAtStepHook' to 'tf.estimator.StopAtStepHook'
273:11: INFO: Renamed 'tf.train.MonitoredTrainingSession' to 'tf.compat.v1.train.MonitoredTrainingSession'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_logit_pairing/adversarial_attack.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/adversarial_logit_pairing/adversarial_attack.py'
--------------------------------------------------------------------------------

76:16: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
76:34: INFO: Added keywords to args of function 'tf.shape'
87:11: INFO: Added keywords to args of function 'tf.reduce_sum'
88:8: INFO: Renamed 'tf.nn.softmax_cross_entropy_with_logits_v2' to 'tf.nn.softmax_cross_entropy_with_logits'
91:39: INFO: Added keywords to args of function 'tf.gradients'
97:16: INFO: Added keywords to args of function 'tf.while_loop'
119:16: INFO: Added keywords to args of function 'tf.shape'
120:30: INFO: Added keywords to args of function 'tf.argmin'
140:15: INFO: Added keywords to args of function 'tf.shape'
141:16: INFO: Added keywords to args of function 'tf.shape'
142:18: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
166:16: INFO: Added keywords to args of function 'tf.shape'
167:30: INFO: Added keywords to args of function 'tf.argmax'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_logit_pairing/model_lib.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/adversarial_logit_pairing/model_lib.py'
--------------------------------------------------------------------------------

31:9: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
77:16: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
84:20: INFO: tf.train.exponential_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

84:20: INFO: Renamed 'tf.train.exponential_decay' to 'tf.compat.v1.train.exponential_decay'
93:20: INFO: Renamed 'tf.train.piecewise_constant' to 'tf.compat.v1.train.piecewise_constant'
120:16: INFO: Renamed 'tf.train.RMSPropOptimizer' to 'tf.compat.v1.train.RMSPropOptimizer'
125:16: INFO: Renamed 'tf.train.MomentumOptimizer' to 'tf.compat.v1.train.MomentumOptimizer'
128:16: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
151:48: INFO: Renamed 'tf.AUTO_REUSE' to 'tf.compat.v1.AUTO_REUSE'
152:11: ERROR: Using member tf.contrib.framework.arg_scope in deprecated module tf.contrib. tf.contrib.framework.arg_scope cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
182:25: INFO: Renamed 'tf.get_collection_ref' to 'tf.compat.v1.get_collection_ref'
183:6: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_logit_pairing/eval.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/adversarial_logit_pairing/eval.py'
--------------------------------------------------------------------------------

91:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
92:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
103:23: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

109:18: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
127:10: ERROR: Using member tf.contrib.framework.get_model_variables in deprecated module tf.contrib. tf.contrib.framework.get_model_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
130:29: ERROR: Using member tf.contrib.framework.get_variables_to_restore in deprecated module tf.contrib. tf.contrib.framework.get_variables_to_restore cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
133:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

133:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
135:10: ERROR: Using member tf.contrib.metrics.aggregate_metric_map in deprecated module tf.contrib. tf.contrib.metrics.aggregate_metric_map cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
136:26: INFO: tf.metrics.accuracy requires manual check. tf.metrics have been replaced with object oriented versions in TF 2.0 and after. The metric function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
136:26: INFO: Renamed 'tf.metrics.accuracy' to 'tf.compat.v1.metrics.accuracy'
136:54: INFO: Added keywords to args of function 'tf.argmax'
137:22: INFO: tf.metrics.recall_at_k requires manual check. tf.metrics have been replaced with object oriented versions in TF 2.0 and after. The metric function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
137:22: INFO: Renamed 'tf.metrics.recall_at_k' to 'tf.compat.v1.metrics.recall_at_k'
137:45: INFO: Changed tf.to_int64 call to tf.cast(..., dtype=tf.int64).
141:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
141:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
147:13: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
148:8: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
149:6: ERROR: Using member tf.contrib.training.evaluate_repeatedly in deprecated module tf.contrib. tf.contrib.training.evaluate_repeatedly cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
152:19: INFO: Renamed 'tf.train.Scaffold' to 'tf.compat.v1.train.Scaffold'
153:20: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
157:14: ERROR: Using member tf.contrib.training.StopAfterNEvalsHook in deprecated module tf.contrib. tf.contrib.training.StopAfterNEvalsHook cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
158:14: ERROR: Using member tf.contrib.training.SummaryAtEndHook in deprecated module tf.contrib. tf.contrib.training.SummaryAtEndHook cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
159:14: INFO: Renamed 'tf.train.LoggingTensorHook' to 'tf.estimator.LoggingTensorHook'
163:15: ERROR: Using member tf.contrib.training.evaluate_once in deprecated module tf.contrib. tf.contrib.training.evaluate_once cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
166:19: INFO: Renamed 'tf.train.Scaffold' to 'tf.compat.v1.train.Scaffold'
167:20: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
171:14: ERROR: Using member tf.contrib.training.StopAfterNEvalsHook in deprecated module tf.contrib. tf.contrib.training.StopAfterNEvalsHook cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
172:14: INFO: Renamed 'tf.train.LoggingTensorHook' to 'tf.estimator.LoggingTensorHook'
175:13: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_logit_pairing/tiny_imagenet_converter/converter.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/adversarial_logit_pairing/tiny_imagenet_converter/converter.py'
--------------------------------------------------------------------------------

73:9: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
99:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
123:13: INFO: Renamed 'tf.gfile.ListDirectory' to 'tf.io.gfile.listdir'
138:10: INFO: Renamed 'tf.gfile.ListDirectory' to 'tf.io.gfile.listdir'
165:9: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
167:13: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
228:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
231:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
234:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
237:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_logit_pairing/datasets/tiny_imagenet_input.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/adversarial_logit_pairing/datasets/tiny_imagenet_input.py'
--------------------------------------------------------------------------------

47:23: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
48:29: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
51:11: INFO: Added keywords to args of function 'tf.parse_single_example'
51:11: INFO: Renamed 'tf.parse_single_example' to 'tf.io.parse_single_example'
60:31: INFO: Added keywords to args of function 'tf.image.sample_distorted_bounding_box'
61:8: INFO: Added keywords to args of function 'tf.shape'
73:10: INFO: Changed tf.image.resize_bicubic call to tf.image.resize(..., method=tf.image.ResizeMethod.BICUBIC).
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_logit_pairing/datasets/dataset_factory.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/adversarial_logit_pairing/datasets/dataset_factory.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_logit_pairing/datasets/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/adversarial_logit_pairing/datasets/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/adversarial_logit_pairing/datasets/imagenet_input.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/adversarial_logit_pairing/datasets/imagenet_input.py'
--------------------------------------------------------------------------------

35:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

35:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
37:36: INFO: Added keywords to args of function 'tf.image.sample_distorted_bounding_box'
55:12: INFO: Changed tf.image.resize_bicubic call to tf.image.resize(..., method=tf.image.ResizeMethod.BICUBIC).
79:10: INFO: Changed tf.image.resize_bicubic call to tf.image.resize(..., method=tf.image.ResizeMethod.BICUBIC).
128:10: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
130:10: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
132:10: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
134:10: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
136:10: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
138:10: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
140:10: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
142:10: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
144:10: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
147:11: INFO: Added keywords to args of function 'tf.parse_single_example'
147:11: INFO: Renamed 'tf.parse_single_example' to 'tf.io.parse_single_example'
160:9: INFO: Added keywords to args of function 'tf.transpose'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/train.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/feelvos/train.py'
--------------------------------------------------------------------------------

31:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
33:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
254:6: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
254:6: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
273:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
273:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
420:17: INFO: Renamed 'tf.log' to 'tf.math.log'
421:30: INFO: Added keywords to args of function 'tf.multinomial'
421:56: INFO: Renamed keyword argument for tf.multinomial from output_dtype to dtype
421:30: INFO: Renamed 'tf.multinomial' to 'tf.random.categorical'
445:20: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
460:19: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
460:37: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
463:20: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
463:38: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
466:21: ERROR: Using member tf.contrib.framework.get_model_variables in deprecated module tf.contrib. tf.contrib.framework.get_model_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
467:20: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
467:20: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
470:16: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
470:34: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
471:20: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
471:20: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
484:18: INFO: Renamed 'tf.train.MomentumOptimizer' to 'tf.compat.v1.train.MomentumOptimizer'
485:20: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
485:20: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
492:19: INFO: Renamed 'tf.check_numerics' to 'tf.debugging.check_numerics'
493:20: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
493:20: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
504:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

504:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
523:21: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
523:39: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
527:17: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
527:17: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
530:21: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
593:2: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
594:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
629:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
629:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
630:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/feelvos/model.py'
--------------------------------------------------------------------------------

63:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
218:13: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
218:13: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
218:55: INFO: Added keywords to args of function 'tf.shape'
222:28: INFO: Added keywords to args of function 'tf.argmax'
229:10: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
229:10: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
236:40: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
236:40: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
237:21: INFO: Added keywords to args of function 'tf.shape'
356:38: INFO: Added keywords to args of function 'tf.shape'
359:38: INFO: Added keywords to args of function 'tf.shape'
384:22: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
384:22: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
386:32: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
386:32: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
403:14: INFO: Renamed 'tf.AUTO_REUSE' to 'tf.compat.v1.AUTO_REUSE'
438:37: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
438:37: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
442:36: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
442:36: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/feelvos/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/common.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/feelvos/common.py'
--------------------------------------------------------------------------------

24:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/vis_video.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/feelvos/vis_video.py'
--------------------------------------------------------------------------------

34:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
35:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
110:2: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
112:2: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
133:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
213:31: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
218:19: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
228:21: INFO: Added keywords to args of function 'tf.shape'
229:20: INFO: Added keywords to args of function 'tf.shape'
388:2: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
390:2: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
392:2: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
398:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
435:4: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
436:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
437:9: INFO: Renamed 'tf.train.Supervisor' to 'tf.compat.v1.train.Supervisor'
439:37: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
453:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
456:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
468:10: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
470:10: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
481:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
482:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
486:6: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
487:11: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
499:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
499:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
500:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/input_preprocess.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/feelvos/input_preprocess.py'
--------------------------------------------------------------------------------

76:4: INFO: Renamed 'tf.logging.warning' to 'tf.compat.v1.logging.warning'
111:18: INFO: Added keywords to args of function 'tf.shape'
195:4: INFO: Renamed 'tf.logging.warning' to 'tf.compat.v1.logging.warning'
237:18: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/datasets/build_davis2017_data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/feelvos/datasets/build_davis2017_data.py'
--------------------------------------------------------------------------------

27:8: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
29:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
32:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
35:0: INFO: Renamed 'tf.app.flags' to 'tf.compat.v1.app.flags'
67:2: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
85:23: INFO: Renamed 'tf.gfile.ListDirectory' to 'tf.io.gfile.listdir'
86:22: INFO: Renamed 'tf.gfile.ListDirectory' to 'tf.io.gfile.listdir'
140:9: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
163:2: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/datasets/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/feelvos/datasets/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/datasets/video_dataset.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/feelvos/datasets/video_dataset.py'
--------------------------------------------------------------------------------

37:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
134:24: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
135:24: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
136:23: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
137:38: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
139:20: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
143:25: INFO: Renamed 'tf.FixedLenSequenceFeature' to 'tf.io.FixedLenSequenceFeature'
145:12: INFO: Renamed 'tf.FixedLenSequenceFeature' to 'tf.io.FixedLenSequenceFeature'
147:12: INFO: Renamed 'tf.FixedLenSequenceFeature' to 'tf.io.FixedLenSequenceFeature'
188:13: INFO: Renamed 'tf.TFRecordReader' to 'tf.compat.v1.TFRecordReader'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/datasets/tfsequence_example_decoder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/feelvos/datasets/tfsequence_example_decoder.py'
--------------------------------------------------------------------------------

24:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
97:28: INFO: Renamed 'tf.parse_single_sequence_example' to 'tf.io.parse_single_sequence_example'
104:23: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/utils/eval_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/feelvos/utils/eval_utils.py'
--------------------------------------------------------------------------------

66:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
67:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
71:7: INFO: Renamed 'tf.gfile.GFile' to 'tf.io.gfile.GFile'
72:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
133:9: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/utils/train_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/feelvos/utils/train_utils.py'
--------------------------------------------------------------------------------

26:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
59:20: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
59:20: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
64:8: INFO: Added keywords to args of function 'tf.shape'
65:8: INFO: Added keywords to args of function 'tf.shape'
72:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

72:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
79:33: INFO: Renamed 'tf.random_shuffle' to 'tf.random.shuffle'
96:24: INFO: Added keywords to args of function 'tf.reduce_min'
97:24: INFO: Added keywords to args of function 'tf.reduce_min'
101:18: INFO: Added keywords to args of function 'tf.reduce_any'
104:15: INFO: Added keywords to args of function 'tf.reduce_mean'
109:6: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
109:27: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
157:16: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
157:16: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
165:22: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
165:22: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
178:24: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
180:22: INFO: Added keywords to args of function 'tf.shape'
185:8: INFO: tf.losses.softmax_cross_entropy requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
185:8: INFO: Renamed 'tf.losses.softmax_cross_entropy' to 'tf.compat.v1.losses.softmax_cross_entropy'
194:21: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
194:33: INFO: Added keywords to args of function 'tf.shape'
195:23: INFO: tf.losses.softmax_cross_entropy requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
195:23: INFO: Renamed 'tf.losses.softmax_cross_entropy' to 'tf.compat.v1.losses.softmax_cross_entropy'
201:22: INFO: Renamed 'tf.losses.Reduction' to 'tf.compat.v1.losses.Reduction'
205:25: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
208:24: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
208:36: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
210:25: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
217:8: INFO: tf.losses.softmax_cross_entropy requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
217:8: INFO: Renamed 'tf.losses.softmax_cross_entropy' to 'tf.compat.v1.losses.softmax_cross_entropy'
223:15: INFO: Added keywords to args of function 'tf.argmax'
227:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
227:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
248:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
252:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
255:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/utils/mask_damaging.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/feelvos/utils/mask_damaging.py'
--------------------------------------------------------------------------------

40:18: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/utils/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/feelvos/utils/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/utils/video_input_generator.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/feelvos/utils/video_input_generator.py'
--------------------------------------------------------------------------------

24:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
120:6: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
120:6: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
129:13: INFO: Added keywords to args of function 'tf.reduce_sum'
130:13: INFO: Added keywords to args of function 'tf.reduce_sum'
154:6: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
154:6: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
160:13: INFO: Added keywords to args of function 'tf.reduce_sum'
161:13: INFO: Added keywords to args of function 'tf.reduce_sum'
188:6: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
188:6: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
192:33: INFO: Added keywords to args of function 'tf.reduce_all'
291:4: INFO: Renamed 'tf.logging.warning' to 'tf.compat.v1.logging.warning'
305:23: INFO: Added keywords to args of function 'tf.shape'
321:40: INFO: tf.assert_equal requires manual check. tf.assert_equal has been changed to return None, the data argument has been removed, and arguments have been reordered.
The calls have been converted to compat.v1 for safety (even though  they may already have been correct).
321:40: INFO: Renamed 'tf.assert_equal' to 'tf.compat.v1.assert_equal'
326:24: INFO: Renamed 'tf.random_shuffle' to 'tf.random.shuffle'
337:18: INFO: Renamed 'tf.random_shuffle' to 'tf.random.shuffle'
341:17: INFO: Renamed 'tf.random_shuffle' to 'tf.random.shuffle'
343:26: INFO: Added keywords to args of function 'tf.cond'
351:22: INFO: Added keywords to args of function 'tf.cond'
356:22: INFO: Renamed 'tf.random_shuffle' to 'tf.random.shuffle'
455:10: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
455:10: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
462:28: INFO: Renamed 'tf.contrib.framework.sort' to 'tf.sort'
467:19: INFO: Added keywords to args of function 'tf.argmax'
470:20: INFO: Added keywords to args of function 'tf.reduce_any'
496:21: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
498:15: INFO: Added keywords to args of function 'tf.shape'
499:14: INFO: Added keywords to args of function 'tf.shape'
532:14: INFO: Renamed 'tf.train.maybe_batch' to 'tf.compat.v1.train.maybe_batch'
539:14: INFO: Renamed 'tf.train.batch' to 'tf.compat.v1.train.batch'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/utils/embedding_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/feelvos/utils/embedding_utils.py'
--------------------------------------------------------------------------------

24:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
48:7: INFO: Added keywords to args of function 'tf.reduce_sum'
49:7: INFO: Added keywords to args of function 'tf.reduce_sum'
67:9: INFO: Added keywords to args of function 'tf.reduce_sum'
67:23: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
86:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

86:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
114:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

114:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
118:9: INFO: Added keywords to args of function 'tf.reduce_sum'
119:9: INFO: Added keywords to args of function 'tf.reduce_sum'
126:8: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
126:35: INFO: Added keywords to args of function 'tf.shape'
147:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

147:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
149:15: INFO: Added keywords to args of function 'tf.pad'
160:15: INFO: Added keywords to args of function 'tf.reduce_sum'
160:29: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
179:14: INFO: Added keywords to args of function 'tf.reduce_max'
181:11: INFO: Added keywords to args of function 'tf.reduce_sum'
182:13: INFO: Added keywords to args of function 'tf.argmax'
210:17: INFO: Added keywords to args of function 'tf.argmin'
219:11: INFO: Added keywords to args of function 'tf.shape'
220:10: INFO: Added keywords to args of function 'tf.shape'
278:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

278:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
282:20: INFO: Renamed 'tf.contrib.framework.sort' to 'tf.sort'
300:60: INFO: Added keywords to args of function 'tf.size'
328:23: INFO: Renamed 'tf.ceil' to 'tf.math.ceil'
328:39: INFO: Added keywords to args of function 'tf.shape'
380:15: INFO: Added keywords to args of function 'tf.reduce_min'
389:23: INFO: Added keywords to args of function 'tf.reduce_max'
391:12: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
393:15: INFO: Added keywords to args of function 'tf.reduce_mean'
418:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
447:2: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
447:2: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
448:2: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
448:2: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
450:6: INFO: Added keywords to args of function 'tf.argmax'
452:2: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
452:2: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
455:2: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
455:2: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
458:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
458:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
460:2: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
460:2: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
463:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
463:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
487:15: INFO: Added keywords to args of function 'tf.shape'
488:14: INFO: Added keywords to args of function 'tf.shape'
500:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
599:15: INFO: Added keywords to args of function 'tf.shape'
600:14: INFO: Added keywords to args of function 'tf.shape'
617:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
621:28: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
621:28: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
627:27: INFO: Added keywords to args of function 'tf.size'
680:23: INFO: Added keywords to args of function 'tf.transpose'
681:13: INFO: Added keywords to args of function 'tf.shape'
692:6: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
692:6: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
705:21: INFO: Added keywords to args of function 'tf.transpose'
753:38: INFO: Added keywords to args of function 'tf.transpose'
773:26: INFO: Added keywords to args of function 'tf.transpose'
773:39: INFO: Added keywords to args of function 'tf.argmax'
781:24: INFO: Added keywords to args of function 'tf.transpose'
827:17: INFO: Added keywords to args of function 'tf.size'
838:19: INFO: Added keywords to args of function 'tf.boolean_mask'
857:23: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
858:21: INFO: Renamed 'tf.random_shuffle' to 'tf.random.shuffle'
860:37: INFO: Added keywords to args of function 'tf.size'
916:47: INFO: Renamed 'tf.truncated_normal' to 'tf.random.truncated_normal'
961:26: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

986:8: INFO: Added keywords to args of function 'tf.shape'
987:8: INFO: Added keywords to args of function 'tf.shape'
990:25: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
990:25: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
992:35: WARNING: tf.image.resize_nearest_neighbor called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_nearest_neighbor.
992:35: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
996:12: INFO: Added keywords to args of function 'tf.size'
998:12: INFO: Added keywords to args of function 'tf.reduce_max'
999:22: INFO: tf.assert_less requires manual check. tf.assert_less has been changed to return None, the data argument has been removed, and arguments have been reordered.
The calls have been converted to compat.v1 for safety (even though  they may already have been correct).
999:22: INFO: Renamed 'tf.assert_less' to 'tf.compat.v1.assert_less'
999:37: INFO: Added keywords to args of function 'tf.reduce_max'
1028:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

1028:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1031:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
1036:6: INFO: Renamed 'tf.logging.warn' to 'tf.compat.v1.logging.warn'
1041:13: INFO: Added keywords to args of function 'tf.shape'
1042:12: INFO: Added keywords to args of function 'tf.shape'
1063:21: INFO: Added keywords to args of function 'tf.pad'
1077:63: INFO: Added keywords to args of function 'tf.size'
1078:62: INFO: Added keywords to args of function 'tf.size'
1079:15: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
1080:12: INFO: Added keywords to args of function 'tf.reduce_min'
1081:49: INFO: Added keywords to args of function 'tf.size'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/research/feelvos/utils/embedding_utils_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/research/feelvos/utils/embedding_utils_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/mnist/mnist.py'
--------------------------------------------------------------------------------

117:19: INFO: Added keywords to args of function 'tf.argmax'
133:35: INFO: Added keywords to args of function 'tf.argmax'
141:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
141:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
151:11: INFO: tf.losses.sparse_softmax_cross_entropy requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
151:11: INFO: Renamed 'tf.losses.sparse_softmax_cross_entropy' to 'tf.compat.v1.losses.sparse_softmax_cross_entropy'
157:16: INFO: tf.metrics.accuracy requires manual check. tf.metrics have been replaced with object oriented versions in TF 2.0 and after. The metric function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
157:16: INFO: Renamed 'tf.metrics.accuracy' to 'tf.compat.v1.metrics.accuracy'
158:47: INFO: Added keywords to args of function 'tf.argmax'
212:11: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

236:4: ERROR: *.export_savedmodel requires manual check. (Manual edit required) Please rename the method export_savedmodel() to export_saved_model(). Two things to note:
	(1) The argument strip_default_attributes has been removed. The function will always strip the default attributes from ops. If this breaks your code, please switch to tf.compat.v1.estimator.Estimator.
	(2) This change only effects core estimator. If you are using tf.contrib.learn.Estimator, please switch to using core estimator.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist_eager_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/mnist/mnist_eager_test.py'
--------------------------------------------------------------------------------

40:11: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
41:11: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
49:14: INFO: Renamed 'tf.train.GradientDescentOptimizer' to 'tf.compat.v1.train.GradientDescentOptimizer'
53:35: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/mnist/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist_eager.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/mnist/mnist_eager.py'
--------------------------------------------------------------------------------

46:9: INFO: Added keywords to args of function 'tf.reduce_mean'
52:16: INFO: Added keywords to args of function 'tf.argmax'
55:9: INFO: Added keywords to args of function 'tf.reduce_sum'
65:9: ERROR: contrib_summary.record_summaries_every_n_global_steps requires manual check. (Manual edit required) tf.contrib.summary.record_summaries_every_n_global_steps(n, step) should be replaced by a call to tf.compat.v2.summary.record_if() with the argument `lambda: tf.math.equal(0, global_step % n)` (or in graph mode, the lambda body can be used directly). If no global step was passed, instead use tf.compat.v1.train.get_or_create_global_step().
73:8: WARNING: Summary API writing function contrib_summary.scalar now requires a 'step' argument; inserting default of tf.compat.v1.train.get_or_create_global_step().
73:8: WARNING: contrib_summary.scalar requires manual check. tf.contrib.summary.* functions have been migrated best-effort to tf.compat.v2.summary.* equivalents where possible, but the resulting code is not guaranteed to work, so please check carefully. For more information about the new summary API, see the Effective TF 2.0 migration document or check the updated TensorBoard tutorials.
73:8: INFO: Renamed 'contrib_summary.scalar' to 'tf.compat.v2.summary.scalar'
74:8: WARNING: Summary API writing function contrib_summary.scalar now requires a 'step' argument; inserting default of tf.compat.v1.train.get_or_create_global_step().
74:8: WARNING: contrib_summary.scalar requires manual check. tf.contrib.summary.* functions have been migrated best-effort to tf.compat.v2.summary.* equivalents where possible, but the resulting code is not guaranteed to work, so please check carefully. For more information about the new summary API, see the Effective TF 2.0 migration document or check the updated TensorBoard tutorials.
74:8: INFO: Renamed 'contrib_summary.scalar' to 'tf.compat.v2.summary.scalar'
95:8: INFO: Added keywords to args of function 'tf.argmax'
99:7: INFO: Adding `True` argument to contrib_summary.always_record_summaries in anticipation of it being renamed to tf.compat.v2.summary.record_if()
99:7: INFO: Renamed 'contrib_summary.always_record_summaries' to 'tf.compat.v2.summary.record_if'
100:4: WARNING: Summary API writing function contrib_summary.scalar now requires a 'step' argument; inserting default of tf.compat.v1.train.get_or_create_global_step().
100:4: WARNING: contrib_summary.scalar requires manual check. tf.contrib.summary.* functions have been migrated best-effort to tf.compat.v2.summary.* equivalents where possible, but the resulting code is not guaranteed to work, so please check carefully. For more information about the new summary API, see the Effective TF 2.0 migration document or check the updated TensorBoard tutorials.
100:4: INFO: Renamed 'contrib_summary.scalar' to 'tf.compat.v2.summary.scalar'
101:4: WARNING: Summary API writing function contrib_summary.scalar now requires a 'step' argument; inserting default of tf.compat.v1.train.get_or_create_global_step().
101:4: WARNING: contrib_summary.scalar requires manual check. tf.contrib.summary.* functions have been migrated best-effort to tf.compat.v2.summary.* equivalents where possible, but the resulting code is not guaranteed to work, so please check carefully. For more information about the new summary API, see the Effective TF 2.0 migration document or check the updated TensorBoard tutorials.
101:4: INFO: Renamed 'contrib_summary.scalar' to 'tf.compat.v2.summary.scalar'
110:2: INFO: Renamed 'tf.enable_eager_execution' to 'tf.compat.v1.enable_eager_execution'
130:14: INFO: Renamed 'tf.train.MomentumOptimizer' to 'tf.compat.v1.train.MomentumOptimizer'
139:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
150:17: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
170:6: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/dataset.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/mnist/dataset.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist_tpu.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/mnist/mnist_tpu.py'
--------------------------------------------------------------------------------

31:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
41:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
46:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
51:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
58:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
60:0: ERROR: Using member tf.flags.DEFINE_string in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
61:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
64:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
65:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
68:0: ERROR: Using member tf.flags.DEFINE_float in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
70:0: ERROR: Using member tf.flags.DEFINE_bool in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
71:0: ERROR: Using member tf.flags.DEFINE_bool in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
72:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
74:0: ERROR: Using member tf.flags.DEFINE_integer in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
76:8: ERROR: Using member tf.flags.FLAGS in deprecated module tf.flags. tf.flags and tf.app.flags have been removed, please use the argparse or absl modules if you need command line parsing.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/mnist/mnist_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/mnist/mnist_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/transformer/schedule_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/transformer/schedule_test.py'
--------------------------------------------------------------------------------

17:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/transformer/attention_layer.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/transformer/attention_layer.py'
--------------------------------------------------------------------------------

21:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/transformer/transformer_main.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/transformer/transformer_main.py'
--------------------------------------------------------------------------------

32:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
198:16: INFO: optimizer.compute_gradients called with colocate_gradients_with_ops argument, requires manual check: Optimizer.compute_gradients no longer takes 'colocate_gradients_with_ops' argument, it behaves as if it was set to True.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/transformer/transformer.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/transformer/transformer.py'
--------------------------------------------------------------------------------

25:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/transformer/embedding_layer.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/transformer/embedding_layer.py'
--------------------------------------------------------------------------------

21:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/transformer/ffn_layer.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/transformer/ffn_layer.py'
--------------------------------------------------------------------------------

21:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/transformer/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/transformer/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/transformer/translate.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/transformer/translate.py'
--------------------------------------------------------------------------------

26:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/transformer/dataset.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/transformer/dataset.py'
--------------------------------------------------------------------------------

57:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/transformer/schedule.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/transformer/schedule.py'
--------------------------------------------------------------------------------

23:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/resnet/cifar10_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/resnet/cifar10_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/resnet/imagenet_main.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/resnet/imagenet_main.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/resnet/resnet_run_loop.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/resnet/resnet_run_loop.py'
--------------------------------------------------------------------------------

318:16: INFO: tf.train.polynomial_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

318:16: INFO: Renamed 'tf.train.polynomial_decay' to 'tf.compat.v1.train.polynomial_decay'
323:11: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
409:20: INFO: tf.losses.softmax_cross_entropy requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
409:20: INFO: Renamed 'tf.losses.softmax_cross_entropy' to 'tf.compat.v1.losses.softmax_cross_entropy'
711:4: ERROR: *.export_savedmodel requires manual check. (Manual edit required) Please rename the method export_savedmodel() to export_saved_model(). Two things to note:
	(1) The argument strip_default_attributes has been removed. The function will always strip the default attributes from ops. If this breaks your code, please switch to tf.compat.v1.estimator.Estimator.
	(2) This change only effects core estimator. If you are using tf.contrib.learn.Estimator, please switch to using core estimator.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/resnet/cifar10_download_and_extract.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/resnet/cifar10_download_and_extract.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/resnet/resnet_model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/resnet/resnet_model.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/resnet/estimator_benchmark.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/resnet/estimator_benchmark.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/resnet/cifar10_main.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/resnet/cifar10_main.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/resnet/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/resnet/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/resnet/imagenet_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/resnet/imagenet_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/resnet/imagenet_preprocessing.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/resnet/imagenet_preprocessing.py'
--------------------------------------------------------------------------------

76:34: INFO: Added keywords to args of function 'tf.image.sample_distorted_bounding_box'
153:33: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/boosted_trees/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/boosted_trees/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/boosted_trees/train_higgs.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/boosted_trees/train_higgs.py'
--------------------------------------------------------------------------------

78:9: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
184:10: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
185:38: INFO: Added keywords to args of function 'tf.decode_csv'
185:38: INFO: Renamed 'tf.decode_csv' to 'tf.io.decode_csv'
199:5: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
200:4: INFO: Renamed 'tf.gfile.DeleteRecursively' to 'tf.io.gfile.rmtree'
201:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
205:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
212:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
248:4: ERROR: *.export_savedmodel requires manual check. (Manual edit required) Please rename the method export_savedmodel() to export_saved_model(). Two things to note:
	(1) The argument strip_default_attributes has been removed. The function will always strip the default attributes from ops. If this breaks your code, please switch to tf.compat.v1.estimator.Estimator.
	(2) This change only effects core estimator. If you are using tf.contrib.learn.Estimator, please switch to using core estimator.
295:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
295:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/boosted_trees/data_download.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/boosted_trees/data_download.py'
--------------------------------------------------------------------------------

52:5: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
55:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
56:4: INFO: Renamed 'tf.gfile.MkDir' to 'tf.io.gfile.mkdir'
59:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
62:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
70:4: INFO: Renamed 'tf.gfile.Remove' to 'tf.io.gfile.remove'
75:2: INFO: Renamed 'tf.gfile.Copy' to 'tf.io.gfile.copy'
76:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
80:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
81:4: INFO: Renamed 'tf.gfile.MkDir' to 'tf.io.gfile.mkdir'
94:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
94:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/utils/tpu.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/utils/tpu.py'
--------------------------------------------------------------------------------

101:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

101:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
112:14: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/utils/tpu_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/utils/tpu_test.py'
--------------------------------------------------------------------------------

62:19: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/utils/export.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/utils/export.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/utils/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/utils/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/utils/export_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/utils/export_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/utils/data/file_io.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/utils/data/file_io.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/utils/data/file_io_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/utils/data/file_io_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/utils/data/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/utils/data/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/wide_deep/wide_deep_run_loop.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/wide_deep/wide_deep_run_loop.py'
--------------------------------------------------------------------------------

78:2: ERROR: *.export_savedmodel requires manual check. (Manual edit required) Please rename the method export_savedmodel() to export_saved_model(). Two things to note:
	(1) The argument strip_default_attributes has been removed. The function will always strip the default attributes from ops. If this breaks your code, please switch to tf.compat.v1.estimator.Estimator.
	(2) This change only effects core estimator. If you are using tf.contrib.learn.Estimator, please switch to using core estimator.
116:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
119:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
122:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/wide_deep/census_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/wide_deep/census_test.py'
--------------------------------------------------------------------------------

79:23: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/wide_deep/census_dataset.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/wide_deep/census_dataset.py'
--------------------------------------------------------------------------------

63:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
64:9: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
74:2: INFO: Renamed 'tf.gfile.Remove' to 'tf.io.gfile.remove'
79:2: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
82:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
86:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
163:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
168:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
169:14: INFO: Added keywords to args of function 'tf.decode_csv'
169:14: INFO: Renamed 'tf.decode_csv' to 'tf.io.decode_csv'
203:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
203:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/wide_deep/movielens_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/wide_deep/movielens_test.py'
--------------------------------------------------------------------------------

94:23: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/wide_deep/census_main.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/wide_deep/census_main.py'
--------------------------------------------------------------------------------

49:21: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
54:11: INFO: tf.estimator.LinearClassifier: Default value of loss_reduction has been changed to SUM_OVER_BATCH_SIZE; inserting old default value tf.keras.losses.Reduction.SUM.

59:11: INFO: tf.estimator.DNNClassifier: Default value of loss_reduction has been changed to SUM_OVER_BATCH_SIZE; inserting old default value tf.keras.losses.Reduction.SUM.

65:11: INFO: tf.estimator.DNNLinearCombinedClassifier: Default value of loss_reduction has been changed to SUM_OVER_BATCH_SIZE; inserting old default value tf.keras.losses.Reduction.SUM.

114:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
114:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/wide_deep/movielens_dataset.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/wide_deep/movielens_dataset.py'
--------------------------------------------------------------------------------

79:13: INFO: Added keywords to args of function 'tf.parse_example'
79:13: INFO: Renamed 'tf.parse_example' to 'tf.io.parse_example'
117:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
117:44: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
121:6: INFO: Renamed 'tf.gfile.Stat' to 'tf.io.gfile.stat'
123:6: INFO: Renamed 'tf.gfile.Stat' to 'tf.io.gfile.stat'
161:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
161:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/wide_deep/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/wide_deep/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/r1/wide_deep/movielens_main.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/r1/wide_deep/movielens_main.py'
--------------------------------------------------------------------------------

65:21: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
68:9: INFO: Renaming tf.estimator.DNNRegressor to tf.compat.v1.estimator.DNNRegressor because argument optimizer is present. tf.estimator.DNNRegressor no longer takes `input_layer_partitioner` arg, and it supports tf.keras.optimizers.* only, so the call was converted to compat.v1. Please note that tf.train.Optimizers have one-to-one correspondents in tf.keras.optimizers, so you may be able to convert to the new optimizers directly (See https://www.tensorflow.org/api_docs/python/tf/keras/optimizers). Checkpoint compatibility is not guaranteed, but there is a checkpoint converter tool that you can use.
75:21: INFO: Renamed 'tf.losses.Reduction.MEAN' to 'tf.compat.v1.losses.Reduction.MEAN'
113:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
113:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/modeling/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/modeling/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/modeling/tf_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/modeling/tf_utils.py'
--------------------------------------------------------------------------------

146:14: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/modeling/performance.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/modeling/performance.py'
--------------------------------------------------------------------------------

38:16: INFO: Renamed 'tf.train.experimental.enable_mixed_precision_graph_rewrite' to 'tf.compat.v1.train.experimental.enable_mixed_precision_graph_rewrite'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/modeling/hyperparams/params_dict_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/modeling/hyperparams/params_dict_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/modeling/hyperparams/base_config.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/modeling/hyperparams/base_config.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/modeling/hyperparams/base_config_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/modeling/hyperparams/base_config_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/modeling/hyperparams/params_dict.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/modeling/hyperparams/params_dict.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/modeling/hyperparams/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/modeling/hyperparams/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/modeling/activations/swish_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/modeling/activations/swish_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/modeling/activations/gelu_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/modeling/activations/gelu_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/modeling/activations/gelu.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/modeling/activations/gelu.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/modeling/activations/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/modeling/activations/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/modeling/activations/swish.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/modeling/activations/swish.py'
--------------------------------------------------------------------------------

41:13: INFO: Added keywords to args of function 'tf.convert_to_tensor'
58:13: INFO: Added keywords to args of function 'tf.convert_to_tensor'
74:13: INFO: Added keywords to args of function 'tf.convert_to_tensor'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/modeling/training/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/modeling/training/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/modeling/training/distributed_executor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/modeling/training/distributed_executor.py'
--------------------------------------------------------------------------------

47:15: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
92:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
92:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
196:15: INFO: Added keywords to args of function 'tf.reduce_mean'
424:30: INFO: Added keywords to args of function 'tf.convert_to_tensor'
553:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/pip_package/setup.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/pip_package/setup.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/benchmark/resnet_ctl_imagenet_benchmark.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/benchmark/resnet_ctl_imagenet_benchmark.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/benchmark/benchmark_uploader.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/benchmark/benchmark_uploader.py'
--------------------------------------------------------------------------------

134:6: INFO: Renamed 'tf.logging.error' to 'tf.compat.v1.logging.error'
146:6: INFO: Renamed 'tf.logging.error' to 'tf.compat.v1.logging.error'
157:6: INFO: Renamed 'tf.logging.error' to 'tf.compat.v1.logging.error'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/benchmark/benchmark_uploader_main.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/benchmark/benchmark_uploader_main.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/benchmark/bert_squad_benchmark.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/benchmark/bert_squad_benchmark.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/benchmark/squad_evaluate_v1_1.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/benchmark/squad_evaluate_v1_1.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/benchmark/transformer_benchmark.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/benchmark/transformer_benchmark.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/benchmark/keras_imagenet_benchmark.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/benchmark/keras_imagenet_benchmark.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/benchmark/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/benchmark/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/benchmark/retinanet_benchmark.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/benchmark/retinanet_benchmark.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/benchmark/bert_benchmark.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/benchmark/bert_benchmark.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/benchmark/tfhub_memory_usage_benchmark.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/benchmark/tfhub_memory_usage_benchmark.py'
--------------------------------------------------------------------------------

23:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/benchmark/benchmark_uploader_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/benchmark/benchmark_uploader_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/benchmark/bert_benchmark_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/benchmark/bert_benchmark_utils.py'
--------------------------------------------------------------------------------

26:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/benchmark/xlnet_benchmark.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/benchmark/xlnet_benchmark.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/benchmark/ncf_keras_benchmark.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/benchmark/ncf_keras_benchmark.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/benchmark/keras_benchmark.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/benchmark/keras_benchmark.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/benchmark/keras_cifar_benchmark.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/benchmark/keras_cifar_benchmark.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/benchmark/models/resnet_cifar_main.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/benchmark/models/resnet_cifar_main.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/benchmark/models/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/benchmark/models/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/benchmark/models/resnet_cifar_model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/benchmark/models/resnet_cifar_model.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/benchmark/models/resnet_cifar_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/benchmark/models/resnet_cifar_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/staging/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/staging/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/staging/shakespeare/shakespeare_main.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/staging/shakespeare/shakespeare_main.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/staging/shakespeare/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/staging/shakespeare/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/staging/shakespeare/shakespeare_benchmark.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/staging/shakespeare/shakespeare_benchmark.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/staging/training/runnable.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/staging/training/runnable.py'
--------------------------------------------------------------------------------

24:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/staging/training/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/staging/training/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/staging/training/controller_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/staging/training/controller_test.py'
--------------------------------------------------------------------------------

104:15: INFO: Added keywords to args of function 'tf.math.reduce_sum'
129:13: INFO: Added keywords to args of function 'tf.math.reduce_sum'
279:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/staging/training/utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/staging/training/utils.py'
--------------------------------------------------------------------------------

26:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/staging/training/controller.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/staging/training/controller.py'
--------------------------------------------------------------------------------

26:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/staging/training/grad_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/staging/training/grad_utils.py'
--------------------------------------------------------------------------------

24:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/staging/training/standard_runnable.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/staging/training/standard_runnable.py'
--------------------------------------------------------------------------------

24:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/optimization.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/optimization.py'
--------------------------------------------------------------------------------

44:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

44:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
53:13: INFO: Added keywords to args of function 'tf.cond'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/models/bert_classifier.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/models/bert_classifier.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/models/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/models/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/models/bert_span_labeler.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/models/bert_span_labeler.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/models/bert_pretrainer_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/models/bert_pretrainer_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/models/bert_pretrainer.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/models/bert_pretrainer.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/models/bert_span_labeler_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/models/bert_span_labeler_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/models/bert_classifier_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/models/bert_classifier_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/losses/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/losses/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/losses/weighted_sparse_categorical_crossentropy.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/losses/weighted_sparse_categorical_crossentropy.py'
--------------------------------------------------------------------------------

68:27: INFO: Added keywords to args of function 'tf.reduce_sum'
101:11: INFO: Added keywords to args of function 'tf.reduce_mean'
103:16: INFO: Added keywords to args of function 'tf.reduce_sum'
105:18: INFO: Added keywords to args of function 'tf.reduce_sum'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/losses/weighted_sparse_categorical_crossentropy_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/losses/weighted_sparse_categorical_crossentropy_test.py'
--------------------------------------------------------------------------------

313:18: INFO: Added keywords to args of function 'tf.convert_to_tensor'
315:13: INFO: Added keywords to args of function 'tf.convert_to_tensor'
316:14: INFO: Added keywords to args of function 'tf.convert_to_tensor'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/layers/position_embedding_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/layers/position_embedding_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/layers/masked_softmax_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/layers/masked_softmax_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/layers/position_embedding.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/layers/position_embedding.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/layers/self_attention_mask.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/layers/self_attention_mask.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/layers/util.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/layers/util.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/layers/attention_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/layers/attention_test.py'
--------------------------------------------------------------------------------

84:27: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/layers/transformer.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/layers/transformer.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/layers/transformer_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/layers/transformer_test.py'
--------------------------------------------------------------------------------

160:27: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
174:27: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/layers/masked_softmax.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/layers/masked_softmax.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/layers/on_device_embedding_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/layers/on_device_embedding_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/layers/dense_einsum_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/layers/dense_einsum_test.py'
--------------------------------------------------------------------------------

114:27: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/layers/transformer_scaffold.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/layers/transformer_scaffold.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/layers/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/layers/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/layers/attention.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/layers/attention.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/layers/on_device_embedding.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/layers/on_device_embedding.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/layers/transformer_scaffold_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/layers/transformer_scaffold_test.py'
--------------------------------------------------------------------------------

273:27: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/layers/dense_einsum.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/layers/dense_einsum.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/networks/transformer_encoder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/networks/transformer_encoder.py'
--------------------------------------------------------------------------------

78:27: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/networks/encoder_scaffold.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/networks/encoder_scaffold.py'
--------------------------------------------------------------------------------

94:39: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/networks/span_labeling.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/networks/span_labeling.py'
--------------------------------------------------------------------------------

87:24: INFO: Added keywords to args of function 'tf.transpose'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/networks/classification.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/networks/classification.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/networks/encoder_scaffold_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/networks/encoder_scaffold_test.py'
--------------------------------------------------------------------------------

70:23: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
87:12: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
95:41: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
130:23: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
145:12: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
151:41: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
182:23: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
197:12: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
205:41: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
237:23: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
252:12: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
258:41: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
276:23: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
291:12: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
297:41: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
332:20: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
349:12: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
356:41: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
399:20: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
416:12: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
423:41: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
484:23: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
501:12: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
513:41: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
554:23: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
571:12: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
583:41: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/networks/albert_transformer_encoder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/networks/albert_transformer_encoder.py'
--------------------------------------------------------------------------------

83:27: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/networks/masked_lm.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/networks/masked_lm.py'
--------------------------------------------------------------------------------

80:20: INFO: tf.keras.initializers.Zeros requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
80:20: INFO: Renamed 'tf.keras.initializers.Zeros' to 'tf.compat.v1.keras.initializers.Zeros'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/networks/classification_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/networks/classification_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/networks/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/networks/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/networks/masked_lm_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/networks/masked_lm_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/networks/transformer_encoder_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/networks/transformer_encoder_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/networks/albert_transformer_encoder_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/networks/albert_transformer_encoder_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/modeling/networks/span_labeling_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/modeling/networks/span_labeling_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/xlnet/run_pretrain.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/xlnet/run_pretrain.py'
--------------------------------------------------------------------------------

80:15: WARNING: tf.distribute.MirroredStrategy requires manual check. (Manual edit may be required) tf.distribute.MirroredStrategy API has changed. If you're using the strategy with a custom training loop, note the following changes in methods: make_dataset_iterator->experimental_distribute_dataset, experimental_make_numpy_iterator->experimental_make_numpy_dataset, extended.call_for_each_replica->run, reduce requires an axis argument, unwrap->experimental_local_results experimental_initialize and experimental_finalize no longer needed 
149:15: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/xlnet/training_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/xlnet/training_utils.py'
--------------------------------------------------------------------------------

42:15: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
258:34: INFO: Added keywords to args of function 'tf.convert_to_tensor'
270:10: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
270:10: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
274:10: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
274:10: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
277:12: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
277:12: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/xlnet/data_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/xlnet/data_utils.py'
--------------------------------------------------------------------------------

68:14: INFO: Added keywords to args of function 'tf.io.parse_single_example'
266:16: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
279:16: INFO: Added keywords to args of function 'tf.reduce_sum'
318:31: INFO: Added keywords to args of function 'tf.shape'
320:16: INFO: Added keywords to args of function 'tf.boolean_mask'
321:16: INFO: Added keywords to args of function 'tf.boolean_mask'
327:22: INFO: Added keywords to args of function 'tf.shape'
370:16: INFO: Added keywords to args of function 'tf.boolean_mask'
371:16: INFO: Added keywords to args of function 'tf.boolean_mask'
374:22: INFO: Added keywords to args of function 'tf.shape'
400:21: INFO: Added keywords to args of function 'tf.boolean_mask'
404:16: INFO: Renamed 'tf.sparse_to_dense' to 'tf.compat.v1.sparse_to_dense'
520:16: INFO: Added keywords to args of function 'tf.boolean_mask'
523:27: INFO: Added keywords to args of function 'tf.shape'
534:15: INFO: Added keywords to args of function 'tf.boolean_mask'
788:10: INFO: Added keywords to args of function 'tf.transpose'
790:21: INFO: Added keywords to args of function 'tf.transpose'
809:13: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
810:15: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/xlnet/xlnet_modeling.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/xlnet/xlnet_modeling.py'
--------------------------------------------------------------------------------

47:11: INFO: Added keywords to args of function 'tf.shape'
60:18: INFO: Renamed 'tf.keras.initializers.RandomUniform' to 'tf.compat.v1.keras.initializers.RandomUniform'
63:18: INFO: Renamed 'tf.keras.initializers.RandomNormal' to 'tf.compat.v1.keras.initializers.RandomNormal'
154:28: INFO: Added keywords to args of function 'tf.shape'
161:18: INFO: Added keywords to args of function 'tf.shape'
162:11: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
251:11: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
251:11: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
558:10: INFO: Added keywords to args of function 'tf.shape'
589:28: INFO: Added keywords to args of function 'tf.shape'
614:30: INFO: Added keywords to args of function 'tf.shape'
783:16: INFO: Added keywords to args of function 'tf.transpose'
784:12: INFO: Added keywords to args of function 'tf.transpose'
786:14: INFO: Added keywords to args of function 'tf.transpose'
788:16: INFO: Added keywords to args of function 'tf.transpose'
790:21: INFO: Added keywords to args of function 'tf.transpose'
793:13: INFO: Added keywords to args of function 'tf.transpose'
796:15: INFO: Added keywords to args of function 'tf.transpose'
868:19: INFO: Added keywords to args of function 'tf.shape'
870:16: INFO: Added keywords to args of function 'tf.transpose'
871:14: INFO: Added keywords to args of function 'tf.transpose'
872:17: INFO: Added keywords to args of function 'tf.transpose'
940:50: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
940:50: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
955:14: INFO: Added keywords to args of function 'tf.reduce_sum'
960:17: INFO: Added keywords to args of function 'tf.reduce_sum'
960:53: INFO: Added keywords to args of function 'tf.reduce_sum'
1055:12: INFO: Added keywords to args of function 'tf.reduce_sum'
1106:16: INFO: Added keywords to args of function 'tf.transpose'
1107:14: INFO: Added keywords to args of function 'tf.transpose'
1108:17: INFO: Added keywords to args of function 'tf.transpose'
1188:14: INFO: Added keywords to args of function 'tf.shape'
1191:19: INFO: Added keywords to args of function 'tf.transpose'
1209:19: INFO: Added keywords to args of function 'tf.transpose'
1232:19: INFO: Added keywords to args of function 'tf.transpose'
1274:14: INFO: Added keywords to args of function 'tf.reduce_sum'
1275:13: INFO: Added keywords to args of function 'tf.reduce_mean'
1286:22: INFO: Added keywords to args of function 'tf.reduce_mean'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/xlnet/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/xlnet/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/xlnet/common_flags.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/xlnet/common_flags.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/xlnet/classifier_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/xlnet/classifier_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/xlnet/preprocess_classification_data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/xlnet/preprocess_classification_data.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/xlnet/squad_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/xlnet/squad_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/xlnet/run_squad.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/xlnet/run_squad.py'
--------------------------------------------------------------------------------

201:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
201:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
202:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
202:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
220:15: WARNING: tf.distribute.MirroredStrategy requires manual check. (Manual edit may be required) tf.distribute.MirroredStrategy API has changed. If you're using the strategy with a custom training loop, note the following changes in methods: make_dataset_iterator->experimental_distribute_dataset, experimental_make_numpy_iterator->experimental_make_numpy_dataset, extended.call_for_each_replica->run, reduce requires an axis argument, unwrap->experimental_local_results experimental_initialize and experimental_finalize no longer needed 
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/xlnet/preprocess_squad_data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/xlnet/preprocess_squad_data.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/xlnet/run_classifier.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/xlnet/run_classifier.py'
--------------------------------------------------------------------------------

124:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
124:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
138:15: WARNING: tf.distribute.MirroredStrategy requires manual check. (Manual edit may be required) tf.distribute.MirroredStrategy API has changed. If you're using the strategy with a custom training loop, note the following changes in methods: make_dataset_iterator->experimental_distribute_dataset, experimental_make_numpy_iterator->experimental_make_numpy_dataset, extended.call_for_each_replica->run, reduce requires an axis argument, unwrap->experimental_local_results experimental_initialize and experimental_finalize no longer needed 
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/xlnet/preprocess_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/xlnet/preprocess_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/xlnet/optimization.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/xlnet/optimization.py'
--------------------------------------------------------------------------------

43:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

43:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
52:13: INFO: Added keywords to args of function 'tf.cond'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/xlnet/xlnet_modeling_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/xlnet/xlnet_modeling_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/xlnet/xlnet_config.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/xlnet/xlnet_config.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/xlnet/preprocess_pretrain_data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/xlnet/preprocess_pretrain_data.py'
--------------------------------------------------------------------------------

104:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
105:16: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
107:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
128:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
138:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
148:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
197:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
198:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
201:9: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
202:4: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
222:9: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
226:22: INFO: Renamed 'tf.gfile.Glob' to 'tf.io.gfile.glob'
227:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
228:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
232:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
235:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
254:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
276:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
327:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
502:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
517:18: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
518:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
533:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
548:8: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
606:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
638:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
679:10: INFO: Added keywords to args of function 'tf.transpose'
680:10: INFO: Renamed 'tf.random_shuffle' to 'tf.random.shuffle'
681:21: INFO: Added keywords to args of function 'tf.transpose'
697:14: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
707:19: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
744:17: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
745:18: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
746:18: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
747:17: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
748:21: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
752:14: INFO: Renamed 'tf.parse_single_example' to 'tf.io.parse_single_example'
790:16: INFO: Added keywords to args of function 'tf.boolean_mask'
793:27: INFO: Added keywords to args of function 'tf.shape'
804:15: INFO: Added keywords to args of function 'tf.boolean_mask'
827:6: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
878:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
882:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
884:26: INFO: Renamed 'tf.gfile.Glob' to 'tf.io.gfile.glob'
885:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
896:10: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
899:11: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
918:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
920:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
922:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
928:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
930:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
932:2: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
997:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
997:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/bert/configs.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/bert/configs.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/bert/model_training_utils_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/bert/model_training_utils_test.py'
--------------------------------------------------------------------------------

106:8: INFO: Added keywords to args of function 'tf.reduce_mean'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/bert/export_tfhub.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/bert/export_tfhub.py'
--------------------------------------------------------------------------------

76:2: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/bert/squad_evaluate_v2_0.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/bert/squad_evaluate_v2_0.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/bert/squad_evaluate_v1_1.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/bert/squad_evaluate_v1_1.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/bert/bert_models.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/bert/bert_models.py'
--------------------------------------------------------------------------------

49:16: INFO: Added keywords to args of function 'tf.reduce_sum'
50:18: INFO: Added keywords to args of function 'tf.reduce_sum'
79:27: INFO: Added keywords to args of function 'tf.shape'
112:20: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
141:18: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
189:18: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
239:18: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
295:18: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/bert/tf1_checkpoint_converter_lib.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/bert/tf1_checkpoint_converter_lib.py'
--------------------------------------------------------------------------------

21:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/bert/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/bert/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/bert/common_flags.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/bert/common_flags.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/bert/model_training_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/bert/model_training_utils.py'
--------------------------------------------------------------------------------

47:17: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
55:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
373:10: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
373:10: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
426:20: INFO: Added keywords to args of function 'tf.convert_to_tensor'
437:10: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
437:10: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
442:12: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
442:12: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/bert/run_squad.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/bert/run_squad.py'
--------------------------------------------------------------------------------

141:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
141:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/bert/run_classifier.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/bert/run_classifier.py'
--------------------------------------------------------------------------------

72:24: INFO: Added keywords to args of function 'tf.reduce_sum'
74:11: INFO: Added keywords to args of function 'tf.reduce_mean'
277:21: INFO: Added keywords to args of function 'tf.math.argmax'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/bert/tf2_encoder_checkpoint_converter.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/bert/tf2_encoder_checkpoint_converter.py'
--------------------------------------------------------------------------------

66:18: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/bert/export_tfhub_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/bert/export_tfhub_test.py'
--------------------------------------------------------------------------------

45:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/bert/input_pipeline.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/bert/input_pipeline.py'
--------------------------------------------------------------------------------

26:12: INFO: Added keywords to args of function 'tf.io.parse_single_example'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/bert/run_pretraining.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/bert/run_pretraining.py'
--------------------------------------------------------------------------------

80:11: INFO: Added keywords to args of function 'tf.reduce_mean'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/bert/run_squad_helper.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/bert/run_squad_helper.py'
--------------------------------------------------------------------------------

106:16: INFO: Added keywords to args of function 'tf.reduce_mean'
106:45: INFO: Added keywords to args of function 'tf.reduce_mean'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/bert/tokenization_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/bert/tokenization_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/bert/tokenization.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/bert/tokenization.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/bert/model_saving_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/bert/model_saving_utils.py'
--------------------------------------------------------------------------------

77:2: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
100:17: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/model_params.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/transformer/model_params.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/compute_bleu.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/transformer/compute_bleu.py'
--------------------------------------------------------------------------------

112:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
116:4: INFO: Renamed 'tf.logging.info' to 'tf.compat.v1.logging.info'
145:2: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
145:27: INFO: Renamed 'tf.logging.INFO' to 'tf.compat.v1.logging.INFO'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/attention_layer.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/transformer/attention_layer.py'
--------------------------------------------------------------------------------

144:16: ERROR: tf.nn.dropout called without arguments, so automatic fix was disabled. tf.nn.dropout has changed the semantics of the second argument.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/data_pipeline.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/transformer/data_pipeline.py'
--------------------------------------------------------------------------------

84:11: INFO: Added keywords to args of function 'tf.io.parse_single_example'
92:24: INFO: Added keywords to args of function 'tf.size'
93:24: INFO: Added keywords to args of function 'tf.size'
98:22: INFO: Added keywords to args of function 'tf.shape'
98:47: INFO: Added keywords to args of function 'tf.shape'
172:16: INFO: Added keywords to args of function 'tf.reduce_min'
172:30: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/transformer_main.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/transformer/transformer_main.py'
--------------------------------------------------------------------------------

316:14: INFO: Added keywords to args of function 'tf.convert_to_tensor'
337:28: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
398:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

398:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/compute_bleu_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/transformer/compute_bleu_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/beam_search_v1_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/transformer/beam_search_v1_test.py'
--------------------------------------------------------------------------------

17:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/beam_search.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/transformer/beam_search.py'
--------------------------------------------------------------------------------

34:8: INFO: Added keywords to args of function 'tf.while_loop'
48:20: INFO: Added keywords to args of function 'tf.reduce_any'
104:6: INFO: Added keywords to args of function 'tf.shape'
134:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

134:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/transformer.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/transformer/transformer.py'
--------------------------------------------------------------------------------

41:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

41:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
137:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

137:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
164:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

164:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
172:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

172:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
173:17: INFO: Added keywords to args of function 'tf.shape'
180:25: ERROR: tf.nn.dropout called without arguments, so automatic fix was disabled. tf.nn.dropout has changed the semantics of the second argument.
200:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

200:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
206:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

206:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
208:25: INFO: Added keywords to args of function 'tf.pad'
210:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

210:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
211:17: INFO: Added keywords to args of function 'tf.shape'
217:25: ERROR: tf.nn.dropout called without arguments, so automatic fix was disabled. tf.nn.dropout has changed the semantics of the second argument.
299:19: INFO: Added keywords to args of function 'tf.shape'
300:21: INFO: Added keywords to args of function 'tf.shape'
389:10: ERROR: tf.nn.dropout called without arguments, so automatic fix was disabled. tf.nn.dropout has changed the semantics of the second argument.
453:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

453:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
454:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

454:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
457:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

457:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
548:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

548:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
549:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

549:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
556:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

556:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
562:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

562:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/transformer_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/transformer/transformer_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/embedding_layer.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/transformer/embedding_layer.py'
--------------------------------------------------------------------------------

40:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

40:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
46:22: INFO: tf.random_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
46:22: INFO: Renamed 'tf.random_normal_initializer' to 'tf.compat.v1.random_normal_initializer'
78:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

78:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
96:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

96:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
97:19: INFO: Added keywords to args of function 'tf.shape'
98:15: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/model_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/transformer/model_utils.py'
--------------------------------------------------------------------------------

79:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

79:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
99:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

99:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
118:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

118:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/beam_search_v1.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/transformer/beam_search_v1.py'
--------------------------------------------------------------------------------

22:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/transformer_main_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/transformer/transformer_main_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/metrics.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/transformer/metrics.py'
--------------------------------------------------------------------------------

36:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

36:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
37:15: INFO: Added keywords to args of function 'tf.shape'
38:15: INFO: Added keywords to args of function 'tf.shape'
42:8: INFO: Added keywords to args of function 'tf.pad'
43:8: INFO: Added keywords to args of function 'tf.pad'
60:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

60:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
64:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

64:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
72:17: INFO: Changing labels arg of tf.nn.softmax_cross_entropy_with_logits to tf.stop_gradient(labels). Please check this transformation.

89:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

89:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
92:22: INFO: Added keywords to args of function 'tf.argmax'
99:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

99:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
102:32: INFO: Added keywords to args of function 'tf.shape'
109:16: INFO: Added keywords to args of function 'tf.reduce_sum'
119:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

119:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
122:22: INFO: Added keywords to args of function 'tf.argmax'
127:40: INFO: Added keywords to args of function 'tf.reduce_sum'
183:9: INFO: Added keywords to args of function 'tf.reduce_sum'
183:35: INFO: Added keywords to args of function 'tf.reduce_sum'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/ffn_layer.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/transformer/ffn_layer.py'
--------------------------------------------------------------------------------

69:17: INFO: Added keywords to args of function 'tf.shape'
70:13: INFO: Added keywords to args of function 'tf.shape'
74:15: ERROR: tf.nn.dropout called without arguments, so automatic fix was disabled. tf.nn.dropout has changed the semantics of the second argument.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/transformer/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/transformer_layers_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/transformer/transformer_layers_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/translate.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/transformer/translate.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/misc.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/transformer/misc.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/optimizer.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/transformer/optimizer.py'
--------------------------------------------------------------------------------

52:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

52:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/model_utils_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/transformer/model_utils_test.py'
--------------------------------------------------------------------------------

40:17: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/data_download.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/transformer/data_download.py'
--------------------------------------------------------------------------------

33:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/utils/tokenizer_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/transformer/utils/tokenizer_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/utils/metrics.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/transformer/utils/metrics.py'
--------------------------------------------------------------------------------

36:0: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/utils/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/transformer/utils/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/transformer/utils/tokenizer.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/transformer/utils/tokenizer.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/albert/configs.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/albert/configs.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/albert/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/albert/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/albert/export_albert_tfhub_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/albert/export_albert_tfhub_test.py'
--------------------------------------------------------------------------------

46:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/albert/run_squad.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/albert/run_squad.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/albert/run_classifier.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/albert/run_classifier.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/albert/tf2_albert_encoder_checkpoint_converter.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/albert/tf2_albert_encoder_checkpoint_converter.py'
--------------------------------------------------------------------------------

91:18: INFO: Renamed 'tf.keras.initializers.TruncatedNormal' to 'tf.compat.v1.keras.initializers.TruncatedNormal'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/albert/export_albert_tfhub.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/albert/export_albert_tfhub.py'
--------------------------------------------------------------------------------

77:2: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/data/squad_lib.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/data/squad_lib.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/data/squad_lib_sp.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/data/squad_lib_sp.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/data/create_pretraining_data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/data/create_pretraining_data.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/data/create_finetuning_data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/data/create_finetuning_data.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/data/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/data/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/nlp/data/classifier_data_lib.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/nlp/data/classifier_data_lib.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/main.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/main.py'
--------------------------------------------------------------------------------

28:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/modeling/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/modeling/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/modeling/maskrcnn_model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/modeling/maskrcnn_model.py'
--------------------------------------------------------------------------------

21:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/modeling/retinanet_model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/modeling/retinanet_model.py'
--------------------------------------------------------------------------------

24:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/modeling/checkpoint_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/modeling/checkpoint_utils.py'
--------------------------------------------------------------------------------

27:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/modeling/learning_rates.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/modeling/learning_rates.py'
--------------------------------------------------------------------------------

24:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/modeling/base_model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/modeling/base_model.py'
--------------------------------------------------------------------------------

24:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/modeling/factory.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/modeling/factory.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/modeling/losses.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/modeling/losses.py'
--------------------------------------------------------------------------------

22:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/modeling/architecture/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/modeling/architecture/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/modeling/architecture/heads.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/modeling/architecture/heads.py'
--------------------------------------------------------------------------------

26:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/modeling/architecture/resnet.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/modeling/architecture/resnet.py'
--------------------------------------------------------------------------------

27:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/modeling/architecture/nn_ops.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/modeling/architecture/nn_ops.py'
--------------------------------------------------------------------------------

22:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/modeling/architecture/fpn.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/modeling/architecture/fpn.py'
--------------------------------------------------------------------------------

29:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/modeling/architecture/factory.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/modeling/architecture/factory.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/modeling/architecture/identity.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/modeling/architecture/identity.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/configs/base_config.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/configs/base_config.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/configs/retinanet_config.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/configs/retinanet_config.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/configs/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/configs/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/configs/maskrcnn_config.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/configs/maskrcnn_config.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/configs/factory.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/configs/factory.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/dataloader/maskrcnn_parser.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/dataloader/maskrcnn_parser.py'
--------------------------------------------------------------------------------

17:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/dataloader/tf_example_decoder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/dataloader/tf_example_decoder.py'
--------------------------------------------------------------------------------

21:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/dataloader/shapemask_parser.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/dataloader/shapemask_parser.py'
--------------------------------------------------------------------------------

25:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/dataloader/input_reader.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/dataloader/input_reader.py'
--------------------------------------------------------------------------------

22:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/dataloader/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/dataloader/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/dataloader/mode_keys.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/dataloader/mode_keys.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/dataloader/retinanet_parser.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/dataloader/retinanet_parser.py'
--------------------------------------------------------------------------------

24:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/dataloader/anchor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/dataloader/anchor.py'
--------------------------------------------------------------------------------

22:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/dataloader/factory.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/dataloader/factory.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/ops/spatial_transform_ops.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/ops/spatial_transform_ops.py'
--------------------------------------------------------------------------------

21:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/ops/roi_ops.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/ops/roi_ops.py'
--------------------------------------------------------------------------------

21:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/ops/postprocess_ops.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/ops/postprocess_ops.py'
--------------------------------------------------------------------------------

22:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/ops/sampling_ops.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/ops/sampling_ops.py'
--------------------------------------------------------------------------------

21:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/ops/nms.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/ops/nms.py'
--------------------------------------------------------------------------------

21:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/executor/detection_executor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/executor/detection_executor.py'
--------------------------------------------------------------------------------

24:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/executor/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/executor/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/evaluation/coco_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/evaluation/coco_utils.py'
--------------------------------------------------------------------------------

30:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/evaluation/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/evaluation/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/evaluation/coco_evaluator.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/evaluation/coco_evaluator.py'
--------------------------------------------------------------------------------

39:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/evaluation/factory.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/evaluation/factory.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/utils/mask_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/utils/mask_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/utils/input_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/utils/input_utils.py'
--------------------------------------------------------------------------------

18:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/utils/autoaugment_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/utils/autoaugment_utils.py'
--------------------------------------------------------------------------------

21:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/utils/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/utils/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/utils/dataloader_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/utils/dataloader_utils.py'
--------------------------------------------------------------------------------

17:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/utils/class_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/utils/class_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/utils/box_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/utils/box_utils.py'
--------------------------------------------------------------------------------

23:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/utils/object_detection/faster_rcnn_box_coder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/utils/object_detection/faster_rcnn_box_coder.py'
--------------------------------------------------------------------------------

31:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/utils/object_detection/box_coder.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/utils/object_detection/box_coder.py'
--------------------------------------------------------------------------------

33:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/utils/object_detection/balanced_positive_negative_sampler.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/utils/object_detection/balanced_positive_negative_sampler.py'
--------------------------------------------------------------------------------

35:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/utils/object_detection/minibatch_sampler.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/utils/object_detection/minibatch_sampler.py'
--------------------------------------------------------------------------------

36:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/utils/object_detection/target_assigner.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/utils/object_detection/target_assigner.py'
--------------------------------------------------------------------------------

34:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/utils/object_detection/preprocessor.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/utils/object_detection/preprocessor.py'
--------------------------------------------------------------------------------

42:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/utils/object_detection/box_list.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/utils/object_detection/box_list.py'
--------------------------------------------------------------------------------

37:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/utils/object_detection/region_similarity_calculator.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/utils/object_detection/region_similarity_calculator.py'
--------------------------------------------------------------------------------

24:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/utils/object_detection/matcher.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/utils/object_detection/matcher.py'
--------------------------------------------------------------------------------

37:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/utils/object_detection/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/utils/object_detection/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/utils/object_detection/argmax_matcher.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/utils/object_detection/argmax_matcher.py'
--------------------------------------------------------------------------------

29:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/utils/object_detection/ops.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/utils/object_detection/ops.py'
--------------------------------------------------------------------------------

21:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/utils/object_detection/visualization_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/utils/object_detection/visualization_utils.py'
--------------------------------------------------------------------------------

34:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/utils/object_detection/shape_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/utils/object_detection/shape_utils.py'
--------------------------------------------------------------------------------

18:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/detection/utils/object_detection/box_list_ops.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/detection/utils/object_detection/box_list_ops.py'
--------------------------------------------------------------------------------

31:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/classifier_trainer_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/image_classification/classifier_trainer_test.py'
--------------------------------------------------------------------------------

33:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/mnist_main.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/image_classification/mnist_main.py'
--------------------------------------------------------------------------------

138:2: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/dataset_factory.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/image_classification/dataset_factory.py'
--------------------------------------------------------------------------------

26:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/optimizer_factory_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/image_classification/optimizer_factory_test.py'
--------------------------------------------------------------------------------

22:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/augment.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/image_classification/augment.py'
--------------------------------------------------------------------------------

27:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/image_classification/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/augment_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/image_classification/augment_test.py'
--------------------------------------------------------------------------------

24:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/optimizer_factory.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/image_classification/optimizer_factory.py'
--------------------------------------------------------------------------------

22:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/callbacks.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/image_classification/callbacks.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/learning_rate.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/image_classification/learning_rate.py'
--------------------------------------------------------------------------------

23:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/test_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/image_classification/test_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/classifier_trainer.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/image_classification/classifier_trainer.py'
--------------------------------------------------------------------------------

30:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/learning_rate_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/image_classification/learning_rate_test.py'
--------------------------------------------------------------------------------

21:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/preprocessing.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/image_classification/preprocessing.py'
--------------------------------------------------------------------------------

22:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/mnist_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/image_classification/mnist_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/configs/configs.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/image_classification/configs/configs.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/configs/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/image_classification/configs/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/configs/base_configs.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/image_classification/configs/base_configs.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/resnet/resnet_model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/image_classification/resnet/resnet_model.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/resnet/resnet_config.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/image_classification/resnet/resnet_config.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/resnet/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/image_classification/resnet/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/resnet/resnet_runnable.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/image_classification/resnet/resnet_runnable.py'
--------------------------------------------------------------------------------

21:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/resnet/common.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/image_classification/resnet/common.py'
--------------------------------------------------------------------------------

89:13: INFO: Added keywords to args of function 'tf.cond'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/resnet/resnet_imagenet_main.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/image_classification/resnet/resnet_imagenet_main.py'
--------------------------------------------------------------------------------

177:18: INFO: Renamed 'tf.train.experimental.enable_mixed_precision_graph_rewrite' to 'tf.compat.v1.train.experimental.enable_mixed_precision_graph_rewrite'
278:6: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/resnet/tfhub_export.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/image_classification/resnet/tfhub_export.py'
--------------------------------------------------------------------------------

27:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/resnet/resnet_ctl_imagenet_main.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/image_classification/resnet/resnet_ctl_imagenet_main.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/resnet/cifar_preprocessing.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/image_classification/resnet/cifar_preprocessing.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/resnet/imagenet_preprocessing.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/image_classification/resnet/imagenet_preprocessing.py'
--------------------------------------------------------------------------------

269:16: INFO: Added keywords to args of function 'tf.transpose'
375:34: INFO: Added keywords to args of function 'tf.image.sample_distorted_bounding_box'
452:33: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/efficientnet/efficientnet_model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/image_classification/efficientnet/efficientnet_model.py'
--------------------------------------------------------------------------------

33:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/efficientnet/efficientnet_config.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/image_classification/efficientnet/efficientnet_config.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/efficientnet/common_modules.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/image_classification/efficientnet/common_modules.py'
--------------------------------------------------------------------------------

24:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/vision/image_classification/efficientnet/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/vision/image_classification/efficientnet/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/recommendation/data_pipeline.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/recommendation/data_pipeline.py'
--------------------------------------------------------------------------------

165:15: INFO: Added keywords to args of function 'tf.io.parse_single_example'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/recommendation/ncf_common.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/recommendation/ncf_common.py'
--------------------------------------------------------------------------------

123:4: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/recommendation/create_ncf_data.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/recommendation/create_ncf_data.py'
--------------------------------------------------------------------------------

26:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/recommendation/data_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/recommendation/data_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/recommendation/data_preprocessing.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/recommendation/data_preprocessing.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/recommendation/ncf_estimator_main.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/recommendation/ncf_estimator_main.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/recommendation/ncf_input_pipeline.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/recommendation/ncf_input_pipeline.py'
--------------------------------------------------------------------------------

24:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/recommendation/constants.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/recommendation/constants.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/recommendation/movielens.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/recommendation/movielens.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/recommendation/stat_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/recommendation/stat_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/recommendation/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/recommendation/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/recommendation/ncf_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/recommendation/ncf_test.py'
--------------------------------------------------------------------------------

73:15: INFO: Added keywords to args of function 'tf.convert_to_tensor'
77:23: INFO: Added keywords to args of function 'tf.convert_to_tensor'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/recommendation/neumf_model.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/recommendation/neumf_model.py'
--------------------------------------------------------------------------------

70:11: INFO: Added keywords to args of function 'tf.convert_to_tensor'
76:4: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
134:16: INFO: optimizer.compute_gradients called with colocate_gradients_with_ops argument, requires manual check: Optimizer.compute_gradients no longer takes 'colocate_gradients_with_ops' argument, it behaves as if it was set to True.
135:21: INFO: Removed argument colocate_gradients_with_ops for function optimizer.compute_gradients
275:11: INFO: Renamed 'tf.estimator.tpu.TPUEstimatorSpec' to 'tf.compat.v1.estimator.tpu.TPUEstimatorSpec'
446:20: INFO: Added keywords to args of function 'tf.reduce_sum'
454:32: INFO: Added keywords to args of function 'tf.reduce_sum'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/recommendation/popen_helper.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/recommendation/popen_helper.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/recommendation/ncf_keras_main.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/recommendation/ncf_keras_main.py'
--------------------------------------------------------------------------------

76:15: INFO: Added keywords to args of function 'tf.reduce_sum'
77:17: INFO: Added keywords to args of function 'tf.reduce_sum'
423:15: INFO: Added keywords to args of function 'tf.reduce_sum'
424:17: INFO: Added keywords to args of function 'tf.reduce_sum'
478:10: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
478:10: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
501:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
501:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
514:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/hyperparams_flags.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/hyperparams_flags.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/misc/model_helpers_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/misc/model_helpers_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/misc/distribution_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/misc/distribution_utils.py'
--------------------------------------------------------------------------------

27:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/misc/model_helpers.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/misc/model_helpers.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/misc/callstack_sampler.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/misc/callstack_sampler.py'
--------------------------------------------------------------------------------

61:2: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/misc/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/misc/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/misc/distribution_utils_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/misc/distribution_utils_test.py'
--------------------------------------------------------------------------------

21:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/misc/keras_utils.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/misc/keras_utils.py'
--------------------------------------------------------------------------------

26:0: INFO: Not upgrading symbols because `tensorflow.compat.v2` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/misc/tpu_lib.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/misc/tpu_lib.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/testing/integration.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/testing/integration.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/testing/perfzero_benchmark.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/testing/perfzero_benchmark.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/testing/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/testing/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/testing/mock_lib.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/testing/mock_lib.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/testing/benchmark_wrappers.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/testing/benchmark_wrappers.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/logs/mlperf_helper.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/logs/mlperf_helper.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/logs/hooks_helper_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/logs/hooks_helper_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/logs/logger_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/logs/logger_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/logs/hooks.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/logs/hooks.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/logs/logger.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/logs/logger.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/logs/hooks_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/logs/hooks_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/logs/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/logs/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/logs/cloud_lib_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/logs/cloud_lib_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/logs/cloud_lib.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/logs/cloud_lib.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/logs/metric_hook_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/logs/metric_hook_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/logs/metric_hook.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/logs/metric_hook.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/logs/hooks_helper.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/logs/hooks_helper.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/flags/_benchmark.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/flags/_benchmark.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/flags/_misc.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/flags/_misc.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/flags/core.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/flags/core.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/flags/_performance.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/flags/_performance.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/flags/__init__.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/flags/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/flags/_device.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/flags/_device.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/flags/_base.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/flags/_base.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/flags/_distribution.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/flags/_distribution.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/flags/flags_test.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/flags/flags_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tensorflow_models/official/utils/flags/_conventions.py'
 outputting to 'pyslam/thirdparty/tensorflow_models/official/utils/flags/_conventions.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet2/generate_sh.py'
 outputting to 'pyslam/thirdparty/lfnet2/generate_sh.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet2/spatial_transformer.py'
 outputting to 'pyslam/thirdparty/lfnet2/spatial_transformer.py'
--------------------------------------------------------------------------------

12:24: INFO: Added keywords to args of function 'tf.transpose'
39:20: INFO: Added keywords to args of function 'tf.shape'
40:17: INFO: Added keywords to args of function 'tf.shape'
41:16: INFO: Added keywords to args of function 'tf.shape'
42:12: INFO: Added keywords to args of function 'tf.shape'
43:17: INFO: Added keywords to args of function 'tf.shape'
45:24: INFO: Added keywords to args of function 'tf.shape'
46:24: INFO: Added keywords to args of function 'tf.shape'
196:18: INFO: Added keywords to args of function 'tf.transpose'
205:24: INFO: Added keywords to args of function 'tf.shape'
206:21: INFO: Added keywords to args of function 'tf.shape'
207:20: INFO: Added keywords to args of function 'tf.shape'
208:23: INFO: Added keywords to args of function 'tf.shape'
217:28: INFO: Added keywords to args of function 'tf.shape'
218:28: INFO: Added keywords to args of function 'tf.shape'
280:28: INFO: Added keywords to args of function 'tf.transpose'
293:24: INFO: Added keywords to args of function 'tf.shape'
294:21: INFO: Added keywords to args of function 'tf.shape'
295:20: INFO: Added keywords to args of function 'tf.shape'
296:27: INFO: Added keywords to args of function 'tf.shape'
455:12: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet2/det_tools.py'
 outputting to 'pyslam/thirdparty/lfnet2/det_tools.py'
--------------------------------------------------------------------------------

39:22: INFO: Added keywords to args of function 'tf.transpose'
83:21: INFO: Added keywords to args of function 'tf.shape'
84:18: INFO: Added keywords to args of function 'tf.shape'
85:17: INFO: Added keywords to args of function 'tf.shape'
114:24: INFO: Added keywords to args of function 'tf.transpose'
127:16: INFO: Added keywords to args of function 'tf.transpose'
181:16: INFO: Added keywords to args of function 'tf.pad'
278:12: INFO: Added keywords to args of function 'tf.shape'
285:19: INFO: Added keywords to args of function 'tf.transpose'
288:35: INFO: Added keywords to args of function 'tf.transpose'
292:19: INFO: Added keywords to args of function 'tf.transpose'
298:16: INFO: Added keywords to args of function 'tf.shape'
308:20: INFO: Added keywords to args of function 'tf.transpose'
325:17: INFO: Added keywords to args of function 'tf.shape'
326:16: INFO: Added keywords to args of function 'tf.shape'
343:8: INFO: Added keywords to args of function 'tf.shape'
350:16: INFO: Added keywords to args of function 'tf.reduce_sum'
353:15: INFO: Added keywords to args of function 'tf.reduce_min'
354:14: INFO: Added keywords to args of function 'tf.argmin'
386:8: INFO: Added keywords to args of function 'tf.shape'
395:28: INFO: Added keywords to args of function 'tf.size'
396:20: INFO: Added keywords to args of function 'tf.cond'
398:12: INFO: Added keywords to args of function 'tf.shape'
403:20: INFO: Added keywords to args of function 'tf.reduce_sum'
406:19: INFO: Added keywords to args of function 'tf.reduce_min'
407:18: INFO: Added keywords to args of function 'tf.argmin'
412:18: INFO: Added keywords to args of function 'tf.cond'
413:18: INFO: Added keywords to args of function 'tf.cond'
433:8: INFO: Added keywords to args of function 'tf.shape'
441:28: INFO: Added keywords to args of function 'tf.size'
442:20: INFO: Added keywords to args of function 'tf.cond'
446:12: INFO: Added keywords to args of function 'tf.shape'
451:21: INFO: Added keywords to args of function 'tf.reduce_sum'
456:21: INFO: Added keywords to args of function 'tf.reduce_sum'
472:18: INFO: Added keywords to args of function 'tf.cond'
491:8: INFO: Added keywords to args of function 'tf.shape'
500:28: INFO: Added keywords to args of function 'tf.size'
501:20: INFO: Added keywords to args of function 'tf.cond'
505:12: INFO: Added keywords to args of function 'tf.shape'
510:21: INFO: Added keywords to args of function 'tf.reduce_sum'
515:21: INFO: Added keywords to args of function 'tf.reduce_sum'
518:19: INFO: Added keywords to args of function 'tf.reduce_min'
519:18: INFO: Added keywords to args of function 'tf.argmin'
524:18: INFO: Added keywords to args of function 'tf.cond'
525:18: INFO: Added keywords to args of function 'tf.cond'
543:8: INFO: Added keywords to args of function 'tf.shape'
552:28: INFO: Added keywords to args of function 'tf.size'
553:20: INFO: Added keywords to args of function 'tf.cond'
556:12: INFO: Added keywords to args of function 'tf.shape'
561:21: INFO: Added keywords to args of function 'tf.reduce_sum'
566:21: INFO: Added keywords to args of function 'tf.reduce_sum'
569:19: INFO: Added keywords to args of function 'tf.reduce_min'
570:18: INFO: Added keywords to args of function 'tf.argmin'
575:18: INFO: Added keywords to args of function 'tf.cond'
576:18: INFO: Added keywords to args of function 'tf.cond'
592:8: INFO: Added keywords to args of function 'tf.shape'
600:28: INFO: Added keywords to args of function 'tf.size'
601:20: INFO: Added keywords to args of function 'tf.cond'
603:12: INFO: Added keywords to args of function 'tf.shape'
611:18: INFO: Added keywords to args of function 'tf.cond'
658:8: INFO: Added keywords to args of function 'tf.shape'
659:8: INFO: Added keywords to args of function 'tf.shape'
666:16: INFO: Added keywords to args of function 'tf.reduce_sum'
667:16: INFO: Added keywords to args of function 'tf.reduce_min'
668:15: INFO: Added keywords to args of function 'tf.argmin'
669:16: INFO: Added keywords to args of function 'tf.reduce_min'
670:15: INFO: Added keywords to args of function 'tf.argmin'
702:15: INFO: Added keywords to args of function 'tf.reduce_sum'
727:25: INFO: Added keywords to args of function 'tf.shape'
728:24: INFO: Added keywords to args of function 'tf.shape'
787:13: INFO: Added keywords to args of function 'tf.nn.conv2d'
796:21: INFO: Added keywords to args of function 'tf.transpose'
798:15: INFO: Added keywords to args of function 'tf.transpose'
800:17: INFO: Added keywords to args of function 'tf.transpose'
803:13: INFO: Added keywords to args of function 'tf.transpose'
820:21: INFO: Added keywords to args of function 'tf.nn.moments'
828:16: INFO: Added keywords to args of function 'tf.shape'
829:17: INFO: Added keywords to args of function 'tf.shape'
830:16: INFO: Added keywords to args of function 'tf.shape'
831:18: INFO: Added keywords to args of function 'tf.shape'
835:20: INFO: Added keywords to args of function 'tf.pad'
868:17: INFO: Added keywords to args of function 'tf.shape'
869:13: INFO: Added keywords to args of function 'tf.shape'
870:12: INFO: Added keywords to args of function 'tf.shape'
872:13: INFO: Added keywords to args of function 'tf.shape'
900:14: INFO: Added keywords to args of function 'tf.reduce_max'
903:12: INFO: Added keywords to args of function 'tf.reduce_sum'
905:8: INFO: Added keywords to args of function 'tf.reduce_sum'
909:8: INFO: Added keywords to args of function 'tf.reduce_sum'
923:13: INFO: Added keywords to args of function 'tf.shape'
924:12: INFO: Added keywords to args of function 'tf.shape'
930:14: INFO: Added keywords to args of function 'tf.reduce_max'
933:12: INFO: Added keywords to args of function 'tf.reduce_sum'
935:8: INFO: Added keywords to args of function 'tf.reduce_sum'
939:8: INFO: Added keywords to args of function 'tf.reduce_sum'
966:18: INFO: Added keywords to args of function 'tf.transpose'
1015:12: INFO: Added keywords to args of function 'tf.shape'
1016:13: INFO: Added keywords to args of function 'tf.shape'
1017:12: INFO: Added keywords to args of function 'tf.shape'
1041:12: INFO: Added keywords to args of function 'tf.shape'
1042:13: INFO: Added keywords to args of function 'tf.shape'
1043:12: INFO: Added keywords to args of function 'tf.shape'
1055:19: INFO: Added keywords to args of function 'tf.transpose'
1056:11: INFO: Added keywords to args of function 'tf.transpose'
1076:13: INFO: Added keywords to args of function 'tf.shape'
1077:12: INFO: Added keywords to args of function 'tf.shape'
1103:14: INFO: Added keywords to args of function 'tf.transpose'
1113:19: INFO: Added keywords to args of function 'tf.shape'
1115:23: INFO: Added keywords to args of function 'tf.shape'
1118:21: INFO: Added keywords to args of function 'tf.shape'
1139:24: INFO: Added keywords to args of function 'tf.shape'
1140:24: INFO: Added keywords to args of function 'tf.shape'
1218:15: INFO: Added keywords to args of function 'tf.shape'
1219:17: INFO: Added keywords to args of function 'tf.shape'
1234:17: INFO: Added keywords to args of function 'tf.pad'
1297:16: INFO: Added keywords to args of function 'tf.shape'
1298:17: INFO: Added keywords to args of function 'tf.shape'
1299:16: INFO: Added keywords to args of function 'tf.shape'
1332:12: INFO: Added keywords to args of function 'tf.shape'
1333:14: INFO: Added keywords to args of function 'tf.shape'
1334:13: INFO: Added keywords to args of function 'tf.shape'
1338:23: INFO: Added keywords to args of function 'tf.argmax'
1376:16: INFO: Added keywords to args of function 'tf.shape'
1377:17: INFO: Added keywords to args of function 'tf.shape'
1378:16: INFO: Added keywords to args of function 'tf.shape'
1380:18: INFO: Added keywords to args of function 'tf.shape'
1381:17: INFO: Added keywords to args of function 'tf.shape'
1610:17: INFO: Added keywords to args of function 'tf.shape'
1611:16: INFO: Added keywords to args of function 'tf.shape'
1614:21: INFO: Added keywords to args of function 'tf.pad'
1629:18: INFO: Added keywords to args of function 'tf.nn.space_to_depth'
1677:18: INFO: Added keywords to args of function 'tf.reduce_mean'
1683:18: INFO: Added keywords to args of function 'tf.shape'
1684:17: INFO: Added keywords to args of function 'tf.shape'
1687:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1687:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
1698:27: INFO: Added keywords to args of function 'tf.nn.space_to_depth'
1699:20: INFO: Added keywords to args of function 'tf.reduce_sum'
1707:35: INFO: Added keywords to args of function 'tf.reduce_sum'
1708:39: INFO: Added keywords to args of function 'tf.reduce_sum'
1722:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1722:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1729:49: INFO: Added keywords to args of function 'tf.reduce_max'
1730:37: INFO: Added keywords to args of function 'tf.reduce_sum'
1732:49: INFO: Added keywords to args of function 'tf.reduce_max'
1733:37: INFO: Added keywords to args of function 'tf.reduce_sum'
1735:17: INFO: Added keywords to args of function 'tf.reduce_sum'
1742:18: INFO: Added keywords to args of function 'tf.reduce_sum'
1754:20: INFO: Added keywords to args of function 'tf.transpose'
1762:53: INFO: Added keywords to args of function 'tf.reduce_max'
1765:12: INFO: Added keywords to args of function 'tf.reduce_sum'
1767:11: INFO: Added keywords to args of function 'tf.reduce_sum'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet2/__init__.py'
 outputting to 'pyslam/thirdparty/lfnet2/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet2/inference.py'
 outputting to 'pyslam/thirdparty/lfnet2/inference.py'
--------------------------------------------------------------------------------

9:21: INFO: Added keywords to args of function 'tf.shape'
10:17: INFO: Added keywords to args of function 'tf.shape'
11:16: INFO: Added keywords to args of function 'tf.shape'
65:21: INFO: Added keywords to args of function 'tf.shape'
66:17: INFO: Added keywords to args of function 'tf.shape'
67:16: INFO: Added keywords to args of function 'tf.shape'
100:12: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
100:12: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
102:27: INFO: Added keywords to args of function 'tf.reduce_max'
103:29: INFO: Added keywords to args of function 'tf.argmax'
133:12: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
133:12: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
151:47: INFO: Added keywords to args of function 'tf.reduce_max'
152:25: INFO: Added keywords to args of function 'tf.argmax'
162:21: INFO: Added keywords to args of function 'tf.shape'
163:17: INFO: Added keywords to args of function 'tf.shape'
164:16: INFO: Added keywords to args of function 'tf.shape'
195:12: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
195:12: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
197:27: INFO: Added keywords to args of function 'tf.reduce_max'
198:29: INFO: Added keywords to args of function 'tf.argmax'
228:12: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
228:12: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
285:36: INFO: Added keywords to args of function 'tf.reduce_sum'
289:25: INFO: Added keywords to args of function 'tf.reduce_sum'
290:18: INFO: Added keywords to args of function 'tf.reduce_sum'
291:17: INFO: Added keywords to args of function 'tf.reduce_sum'
291:67: INFO: Added keywords to args of function 'tf.reduce_sum'
300:21: INFO: Added keywords to args of function 'tf.reduce_sum'
316:13: INFO: Added keywords to args of function 'tf.shape'
323:40: INFO: Added keywords to args of function 'tf.reduce_sum'
327:29: INFO: Added keywords to args of function 'tf.reduce_sum'
328:22: INFO: Added keywords to args of function 'tf.reduce_sum'
329:21: INFO: Added keywords to args of function 'tf.reduce_sum'
329:71: INFO: Added keywords to args of function 'tf.reduce_sum'
345:25: INFO: Added keywords to args of function 'tf.reduce_sum'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet2/run_lfnet.py'
 outputting to 'pyslam/thirdparty/lfnet2/run_lfnet.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet2/utils.py'
 outputting to 'pyslam/thirdparty/lfnet2/utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet2/eval_tools.py'
 outputting to 'pyslam/thirdparty/lfnet2/eval_tools.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet2/train_lfnet.py'
 outputting to 'pyslam/thirdparty/lfnet2/train_lfnet.py'
--------------------------------------------------------------------------------

232:17: INFO: Added keywords to args of function 'tf.shape'
254:17: INFO: Added keywords to args of function 'tf.shape'
284:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
284:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
285:4: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
285:4: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
323:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
323:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
329:19: INFO: Added keywords to args of function 'tf.nn.conv2d'
331:19: INFO: Added keywords to args of function 'tf.nn.conv2d'
334:23: INFO: Added keywords to args of function 'tf.reduce_sum'
335:23: INFO: Added keywords to args of function 'tf.reduce_sum'
339:16: INFO: Added keywords to args of function 'tf.reduce_mean'
339:32: INFO: Added keywords to args of function 'tf.reduce_sum'
342:16: INFO: Added keywords to args of function 'tf.reduce_mean'
342:32: INFO: Added keywords to args of function 'tf.reduce_sum'
348:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
348:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
369:19: INFO: Added keywords to args of function 'tf.reduce_sum'
374:19: INFO: Added keywords to args of function 'tf.reduce_sum'
386:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
386:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
390:20: INFO: Added keywords to args of function 'tf.reduce_mean'
390:36: INFO: Added keywords to args of function 'tf.reduce_sum'
392:20: INFO: Added keywords to args of function 'tf.reduce_mean'
392:36: INFO: Added keywords to args of function 'tf.reduce_sum'
395:20: INFO: Added keywords to args of function 'tf.reduce_sum'
396:20: INFO: Added keywords to args of function 'tf.reduce_mean'
396:36: INFO: Added keywords to args of function 'tf.reduce_sum'
397:20: INFO: Added keywords to args of function 'tf.reduce_mean'
398:20: INFO: Added keywords to args of function 'tf.reduce_mean'
398:36: INFO: Added keywords to args of function 'tf.reduce_sum'
403:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
403:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
429:22: INFO: Added keywords to args of function 'tf.reduce_max'
430:18: INFO: Added keywords to args of function 'tf.reduce_mean'
430:33: INFO: Added keywords to args of function 'tf.reduce_sum'
432:22: INFO: Added keywords to args of function 'tf.reduce_max'
433:18: INFO: Added keywords to args of function 'tf.reduce_mean'
433:33: INFO: Added keywords to args of function 'tf.reduce_sum'
435:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
435:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
439:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
439:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
477:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
477:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
505:22: INFO: Added keywords to args of function 'tf.reduce_max'
506:26: INFO: Added keywords to args of function 'tf.reduce_max'
507:29: INFO: Added keywords to args of function 'tf.reduce_max'
512:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
512:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
524:4: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
524:4: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
571:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
571:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
582:16: INFO: Added keywords to args of function 'tf.reduce_sum'
583:16: INFO: Added keywords to args of function 'tf.reduce_sum'
587:20: INFO: Added keywords to args of function 'tf.reduce_mean'
588:25: INFO: Added keywords to args of function 'tf.reduce_mean'
589:24: INFO: Added keywords to args of function 'tf.reduce_mean'
590:24: INFO: Added keywords to args of function 'tf.reduce_mean'
591:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
591:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
592:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
592:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
593:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
593:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
594:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
594:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
598:22: INFO: Added keywords to args of function 'tf.reduce_max'
599:26: INFO: Added keywords to args of function 'tf.reduce_max'
600:26: INFO: Added keywords to args of function 'tf.reduce_max'
605:4: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
605:4: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
633:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
633:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
634:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
634:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
917:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
943:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet2/models/resnet_detector.py'
 outputting to 'pyslam/thirdparty/lfnet2/models/resnet_detector.py'
--------------------------------------------------------------------------------

107:47: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet2/models/__init__.py'
 outputting to 'pyslam/thirdparty/lfnet2/models/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet2/models/mso_resnet_detector.py'
 outputting to 'pyslam/thirdparty/lfnet2/models/mso_resnet_detector.py'
--------------------------------------------------------------------------------

126:32: INFO: Added keywords to args of function 'tf.shape'
127:31: INFO: Added keywords to args of function 'tf.shape'
159:20: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
159:20: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet2/models/simple_desc.py'
 outputting to 'pyslam/thirdparty/lfnet2/models/simple_desc.py'
--------------------------------------------------------------------------------

42:18: INFO: Renamed 'tf.layers.flatten' to 'tf.compat.v1.layers.flatten'
66:21: INFO: Added keywords to args of function 'tf.norm'
74:21: INFO: Added keywords to args of function 'tf.norm'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet2/common/argparse_utils.py'
 outputting to 'pyslam/thirdparty/lfnet2/common/argparse_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet2/common/jupyter_utils.py'
 outputting to 'pyslam/thirdparty/lfnet2/common/jupyter_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet2/common/tf_layer_utils.py'
 outputting to 'pyslam/thirdparty/lfnet2/common/tf_layer_utils.py'
--------------------------------------------------------------------------------

71:12: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
71:12: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
73:12: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
73:12: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
106:32: INFO: Added keywords to args of function 'tf.nn.moments'
110:23: INFO: Added keywords to args of function 'tf.cond'
120:20: INFO: Added keywords to args of function 'tf.cond'
125:12: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
125:12: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
126:12: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
126:12: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
127:12: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
127:12: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
128:12: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
128:12: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
223:18: INFO: Added keywords to args of function 'tf.cond'
224:32: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

276:18: INFO: Added keywords to args of function 'tf.nn.conv2d'
305:24: INFO: Added keywords to args of function 'tf.pad'
308:24: INFO: Added keywords to args of function 'tf.pad'
394:18: INFO: Added keywords to args of function 'tf.nn.conv2d'
549:15: INFO: Added keywords to args of function 'tf.reduce_mean'
551:15: INFO: Added keywords to args of function 'tf.reduce_mean'
558:15: INFO: Added keywords to args of function 'tf.reduce_max'
560:15: INFO: Added keywords to args of function 'tf.reduce_max'
566:15: INFO: Added keywords to args of function 'tf.shape'
567:15: INFO: Added keywords to args of function 'tf.shape'
616:8: INFO: Added keywords to args of function 'tf.reduce_max'
631:8: INFO: Added keywords to args of function 'tf.reduce_sum'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet2/common/__init__.py'
 outputting to 'pyslam/thirdparty/lfnet2/common/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet2/common/tfvisualizer.py'
 outputting to 'pyslam/thirdparty/lfnet2/common/tfvisualizer.py'
--------------------------------------------------------------------------------

75:12: INFO: Added keywords to args of function 'tf.shape'
78:18: INFO: Added keywords to args of function 'tf.pad'
79:15: INFO: Added keywords to args of function 'tf.shape'
84:18: INFO: Added keywords to args of function 'tf.transpose'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet2/common/io_utils.py'
 outputting to 'pyslam/thirdparty/lfnet2/common/io_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet2/common/tf_train_utils.py'
 outputting to 'pyslam/thirdparty/lfnet2/common/tf_train_utils.py'
--------------------------------------------------------------------------------

38:20: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
38:20: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
39:20: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
39:20: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
52:20: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
52:20: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
53:20: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
53:20: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
115:20: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
115:20: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
116:20: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
116:20: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
136:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
136:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet2/mydatasets/se3dataset.py'
 outputting to 'pyslam/thirdparty/lfnet2/mydatasets/se3dataset.py'
--------------------------------------------------------------------------------

74:20: INFO: Added keywords to args of function 'tf.convert_to_tensor'
76:32: INFO: Added keywords to args of function 'tf.convert_to_tensor'
78:32: INFO: Added keywords to args of function 'tf.convert_to_tensor'
80:34: INFO: Added keywords to args of function 'tf.convert_to_tensor'
82:27: INFO: Added keywords to args of function 'tf.convert_to_tensor'
108:31: INFO: Added keywords to args of function 'tf.convert_to_tensor'
109:31: INFO: Added keywords to args of function 'tf.convert_to_tensor'
110:27: INFO: Added keywords to args of function 'tf.convert_to_tensor'
120:36: INFO: Added keywords to args of function 'tf.convert_to_tensor'
121:38: INFO: Added keywords to args of function 'tf.convert_to_tensor'
361:20: INFO: Added keywords to args of function 'tf.convert_to_tensor'
363:32: INFO: Added keywords to args of function 'tf.convert_to_tensor'
365:32: INFO: Added keywords to args of function 'tf.convert_to_tensor'
367:34: INFO: Added keywords to args of function 'tf.convert_to_tensor'
369:27: INFO: Added keywords to args of function 'tf.convert_to_tensor'
376:31: INFO: Added keywords to args of function 'tf.convert_to_tensor'
377:31: INFO: Added keywords to args of function 'tf.convert_to_tensor'
378:27: INFO: Added keywords to args of function 'tf.convert_to_tensor'
446:20: INFO: Added keywords to args of function 'tf.convert_to_tensor'
448:32: INFO: Added keywords to args of function 'tf.convert_to_tensor'
450:32: INFO: Added keywords to args of function 'tf.convert_to_tensor'
452:34: INFO: Added keywords to args of function 'tf.convert_to_tensor'
454:27: INFO: Added keywords to args of function 'tf.convert_to_tensor'
461:31: INFO: Added keywords to args of function 'tf.convert_to_tensor'
462:31: INFO: Added keywords to args of function 'tf.convert_to_tensor'
463:27: INFO: Added keywords to args of function 'tf.convert_to_tensor'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet2/mydatasets/sfmdataset.py'
 outputting to 'pyslam/thirdparty/lfnet2/mydatasets/sfmdataset.py'
--------------------------------------------------------------------------------

30:24: INFO: Added keywords to args of function 'tf.convert_to_tensor'
34:26: INFO: Added keywords to args of function 'tf.convert_to_tensor'
86:22: INFO: Added keywords to args of function 'tf.io.parse_single_example'
179:17: INFO: Added keywords to args of function 'tf.shape'
180:16: INFO: Added keywords to args of function 'tf.shape'
183:31: INFO: Added keywords to args of function 'tf.cond'
217:24: INFO: Added keywords to args of function 'tf.convert_to_tensor'
221:26: INFO: Added keywords to args of function 'tf.convert_to_tensor'
273:22: INFO: Added keywords to args of function 'tf.io.parse_single_example'
363:17: INFO: Added keywords to args of function 'tf.shape'
364:16: INFO: Added keywords to args of function 'tf.shape'
367:31: INFO: Added keywords to args of function 'tf.cond'
410:24: INFO: Added keywords to args of function 'tf.convert_to_tensor'
414:26: INFO: Added keywords to args of function 'tf.convert_to_tensor'
466:22: INFO: Added keywords to args of function 'tf.io.parse_single_example'
499:22: INFO: Added keywords to args of function 'tf.cond'
547:52: INFO: Added keywords to args of function 'tf.shape'
548:52: INFO: Added keywords to args of function 'tf.shape'
549:52: INFO: Added keywords to args of function 'tf.shape'
550:52: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet2/mydatasets/__init__.py'
 outputting to 'pyslam/thirdparty/lfnet2/mydatasets/__init__.py'
--------------------------------------------------------------------------------

8:17: INFO: Added keywords to args of function 'tf.shape'
52:17: INFO: Added keywords to args of function 'tf.shape'
66:8: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
66:8: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
70:8: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
70:8: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
82:15: INFO: Added keywords to args of function 'tf.cond'
86:15: INFO: Added keywords to args of function 'tf.cond'
101:10: INFO: Added keywords to args of function 'tf.cond'
105:10: INFO: Added keywords to args of function 'tf.cond'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/lfnet2/mydatasets/dataset_tools.py'
 outputting to 'pyslam/thirdparty/lfnet2/mydatasets/dataset_tools.py'
--------------------------------------------------------------------------------

102:36: INFO: Added keywords to args of function 'tf.convert_to_tensor'
103:38: INFO: Added keywords to args of function 'tf.convert_to_tensor'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tfeat/phototour.py'
 outputting to 'pyslam/thirdparty/tfeat/phototour.py'
--------------------------------------------------------------------------------

245:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tfeat/tfeat_utils.py'
 outputting to 'pyslam/thirdparty/tfeat/tfeat_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tfeat/tfeat_model.py'
 outputting to 'pyslam/thirdparty/tfeat/tfeat_model.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tfeat/hpatches.py'
 outputting to 'pyslam/thirdparty/tfeat/hpatches.py'
--------------------------------------------------------------------------------

209:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tfeat/old-code/tfeat_demo.py'
 outputting to 'pyslam/thirdparty/tfeat/old-code/tfeat_demo.py'
--------------------------------------------------------------------------------

ERROR: Failed to parse.
Traceback (most recent call last):
  File "/home/arion/.local/lib/python3.10/site-packages/tensorflow/tools/compatibility/ast_edits.py", line 933, in update_string_pasta
    t = pasta.parse(text)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/__init__.py", line 23, in parse
    t = ast_utils.parse(src)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/base/ast_utils.py", line 56, in parse
    tree = ast.parse(sanitize_source(src))
  File "/usr/lib/python3.10/ast.py", line 50, in parse
    return compile(source, filename, mode, flags,
  File "<unknown>", line 220
    print "Not enough matches are found with TFEAT - %d/%d" % (len(good1), MIN_MATCH_COUNT)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)?

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tfeat/old-code/extract_desciptors_from_hpatch_file.py'
 outputting to 'pyslam/thirdparty/tfeat/old-code/extract_desciptors_from_hpatch_file.py'
--------------------------------------------------------------------------------

ERROR: Failed to parse.
Traceback (most recent call last):
  File "/home/arion/.local/lib/python3.10/site-packages/tensorflow/tools/compatibility/ast_edits.py", line 933, in update_string_pasta
    t = pasta.parse(text)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/__init__.py", line 23, in parse
    t = ast_utils.parse(src)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/base/ast_utils.py", line 56, in parse
    tree = ast.parse(sanitize_source(src))
  File "/usr/lib/python3.10/ast.py", line 50, in parse
    return compile(source, filename, mode, flags,
  File "<unknown>", line 25
    print "Please, ensure that there is nets/stats.liberty.t7 file"
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)?

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tfeat/old-code/tensorflow/__init__.py'
 outputting to 'pyslam/thirdparty/tfeat/old-code/tensorflow/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tfeat/old-code/tensorflow/models/__init__.py'
 outputting to 'pyslam/thirdparty/tfeat/old-code/tensorflow/models/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tfeat/old-code/tensorflow/models/tfeat.py'
 outputting to 'pyslam/thirdparty/tfeat/old-code/tensorflow/models/tfeat.py'
--------------------------------------------------------------------------------

8:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
13:16: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

16:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
21:16: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

24:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
29:16: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

42:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
42:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
64:12: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

68:12: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
78:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
79:19: INFO: Added keywords to args of function 'tf.nn.conv2d'
79:19: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
80:32: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
80:32: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
84:51: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
84:51: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
88:15: INFO: Added keywords to args of function 'tf.nn.max_pool'
88:15: INFO: Renamed keyword argument for tf.nn.max_pool from value to input
88:15: INFO: Renamed 'tf.nn.max_pool' to 'tf.nn.max_pool2d'
93:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
94:19: INFO: Added keywords to args of function 'tf.nn.conv2d'
94:19: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
95:32: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
95:32: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
99:51: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
99:51: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
108:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
109:40: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
109:40: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
110:41: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
110:41: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tfeat/old-code/tensorflow/train/__init__.py'
 outputting to 'pyslam/thirdparty/tfeat/old-code/tensorflow/train/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tfeat/old-code/tensorflow/train/tfeat/train_tfeat.py'
 outputting to 'pyslam/thirdparty/tfeat/old-code/tensorflow/train/tfeat/train_tfeat.py'
--------------------------------------------------------------------------------

ERROR: Failed to parse.
Traceback (most recent call last):
  File "/home/arion/.local/lib/python3.10/site-packages/tensorflow/tools/compatibility/ast_edits.py", line 933, in update_string_pasta
    t = pasta.parse(text)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/__init__.py", line 23, in parse
    t = ast_utils.parse(src)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/base/ast_utils.py", line 56, in parse
    tree = ast.parse(sanitize_source(src))
  File "/usr/lib/python3.10/ast.py", line 50, in parse
    return compile(source, filename, mode, flags,
  File "<unknown>", line 239
    print 'FRP95: %s' % fpr95
    ^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)?

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tfeat/old-code/tensorflow/train/tfeat/__init__.py'
 outputting to 'pyslam/thirdparty/tfeat/old-code/tensorflow/train/tfeat/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tfeat/old-code/tensorflow/train/tfeat/loss.py'
 outputting to 'pyslam/thirdparty/tfeat/old-code/tensorflow/train/tfeat/loss.py'
--------------------------------------------------------------------------------

9:16: INFO: Added keywords to args of function 'tf.reduce_sum'
29:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

29:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
30:22: INFO: Added keywords to args of function 'tf.reduce_sum'
31:22: INFO: Added keywords to args of function 'tf.reduce_sum'
35:15: INFO: Added keywords to args of function 'tf.reduce_mean'
35:37: INFO: Added keywords to args of function 'tf.reduce_mean'
35:66: INFO: Added keywords to args of function 'tf.reduce_mean'
38:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

38:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
39:22: INFO: Added keywords to args of function 'tf.reduce_sum'
40:22: INFO: Added keywords to args of function 'tf.reduce_sum'
41:22: INFO: Added keywords to args of function 'tf.reduce_sum'
46:15: INFO: Added keywords to args of function 'tf.reduce_mean'
46:37: INFO: Added keywords to args of function 'tf.reduce_mean'
46:66: INFO: Added keywords to args of function 'tf.reduce_mean'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tfeat/old-code/tensorflow/scripts/eval_metrics.py'
 outputting to 'pyslam/thirdparty/tfeat/old-code/tensorflow/scripts/eval_metrics.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tfeat/old-code/tensorflow/scripts/test_model.py'
 outputting to 'pyslam/thirdparty/tfeat/old-code/tensorflow/scripts/test_model.py'
--------------------------------------------------------------------------------

ERROR: Failed to parse.
Traceback (most recent call last):
  File "/home/arion/.local/lib/python3.10/site-packages/tensorflow/tools/compatibility/ast_edits.py", line 933, in update_string_pasta
    t = pasta.parse(text)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/__init__.py", line 23, in parse
    t = ast_utils.parse(src)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/base/ast_utils.py", line 56, in parse
    tree = ast.parse(sanitize_source(src))
  File "/usr/lib/python3.10/ast.py", line 50, in parse
    return compile(source, filename, mode, flags,
  File "<unknown>", line 107
    print 'FRP95: %s' % fpr95
    ^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)?

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tfeat/old-code/tensorflow/scripts/generate_stats.py'
 outputting to 'pyslam/thirdparty/tfeat/old-code/tensorflow/scripts/generate_stats.py'
--------------------------------------------------------------------------------

ERROR: Failed to parse.
Traceback (most recent call last):
  File "/home/arion/.local/lib/python3.10/site-packages/tensorflow/tools/compatibility/ast_edits.py", line 933, in update_string_pasta
    t = pasta.parse(text)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/__init__.py", line 23, in parse
    t = ast_utils.parse(src)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/base/ast_utils.py", line 56, in parse
    tree = ast.parse(sanitize_source(src))
  File "/usr/lib/python3.10/ast.py", line 50, in parse
    return compile(source, filename, mode, flags,
  File "<unknown>", line 9
    print '[ERROR] Not enough parameters'
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)?

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tfeat/old-code/tensorflow/scripts/__init__.py'
 outputting to 'pyslam/thirdparty/tfeat/old-code/tensorflow/scripts/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tfeat/old-code/tensorflow/scripts/preprocess.py'
 outputting to 'pyslam/thirdparty/tfeat/old-code/tensorflow/scripts/preprocess.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tfeat/old-code/tensorflow/datasets/ubc.py'
 outputting to 'pyslam/thirdparty/tfeat/old-code/tensorflow/datasets/ubc.py'
--------------------------------------------------------------------------------

ERROR: Failed to parse.
Traceback (most recent call last):
  File "/home/arion/.local/lib/python3.10/site-packages/tensorflow/tools/compatibility/ast_edits.py", line 933, in update_string_pasta
    t = pasta.parse(text)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/__init__.py", line 23, in parse
    t = ast_utils.parse(src)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/base/ast_utils.py", line 56, in parse
    tree = ast.parse(sanitize_source(src))
  File "/usr/lib/python3.10/ast.py", line 50, in parse
    return compile(source, filename, mode, flags,
  File "<unknown>", line 60
    print '[INFO] Dataset is cached: %s' % name
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)?

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tfeat/old-code/tensorflow/datasets/__init__.py'
 outputting to 'pyslam/thirdparty/tfeat/old-code/tensorflow/datasets/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/tfeat/old-code/caffe/extract_descriptors_from_hpatches_caffe.py'
 outputting to 'pyslam/thirdparty/tfeat/old-code/caffe/extract_descriptors_from_hpatches_caffe.py'
--------------------------------------------------------------------------------

ERROR: Failed to parse.
Traceback (most recent call last):
  File "/home/arion/.local/lib/python3.10/site-packages/tensorflow/tools/compatibility/ast_edits.py", line 933, in update_string_pasta
    t = pasta.parse(text)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/__init__.py", line 23, in parse
    t = ast_utils.parse(src)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/base/ast_utils.py", line 56, in parse
    tree = ast.parse(sanitize_source(src))
  File "/usr/lib/python3.10/ast.py", line 50, in parse
    return compile(source, filename, mode, flags,
  File "<unknown>", line 61
    print 'Initialization and preprocessing time', time.time() - t
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)?

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/d2net/train.py'
 outputting to 'pyslam/thirdparty/d2net/train.py'
--------------------------------------------------------------------------------

266:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/d2net/extract_features.py'
 outputting to 'pyslam/thirdparty/d2net/extract_features.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/d2net/lib/model.py'
 outputting to 'pyslam/thirdparty/d2net/lib/model.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/d2net/lib/loss.py'
 outputting to 'pyslam/thirdparty/d2net/lib/loss.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/d2net/lib/pyramid.py'
 outputting to 'pyslam/thirdparty/d2net/lib/pyramid.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/d2net/lib/exceptions.py'
 outputting to 'pyslam/thirdparty/d2net/lib/exceptions.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/d2net/lib/dataset.py'
 outputting to 'pyslam/thirdparty/d2net/lib/dataset.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/d2net/lib/utils.py'
 outputting to 'pyslam/thirdparty/d2net/lib/utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/d2net/lib/model_test.py'
 outputting to 'pyslam/thirdparty/d2net/lib/model_test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/d2net/megadepth_utils/preprocess_scene.py'
 outputting to 'pyslam/thirdparty/d2net/megadepth_utils/preprocess_scene.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/d2net/megadepth_utils/undistort_reconstructions.py'
 outputting to 'pyslam/thirdparty/d2net/megadepth_utils/undistort_reconstructions.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/hardnet/examples/extract_DenseHardNet.py'
 outputting to 'pyslam/thirdparty/hardnet/examples/extract_DenseHardNet.py'
--------------------------------------------------------------------------------

124:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/hardnet/examples/extract_hardnet_desc_from_hpatches_file.py'
 outputting to 'pyslam/thirdparty/hardnet/examples/extract_hardnet_desc_from_hpatches_file.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/hardnet/examples/caffe/extract_hardnetCaffe_desc_from_hpatches_file.py'
 outputting to 'pyslam/thirdparty/hardnet/examples/caffe/extract_hardnetCaffe_desc_from_hpatches_file.py'
--------------------------------------------------------------------------------

ERROR: Failed to parse.
Traceback (most recent call last):
  File "/home/arion/.local/lib/python3.10/site-packages/tensorflow/tools/compatibility/ast_edits.py", line 933, in update_string_pasta
    t = pasta.parse(text)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/__init__.py", line 23, in parse
    t = ast_utils.parse(src)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/base/ast_utils.py", line 56, in parse
    tree = ast.parse(sanitize_source(src))
  File "/usr/lib/python3.10/ast.py", line 50, in parse
    return compile(source, filename, mode, flags,
  File "<unknown>", line 66
    print 'Initialization and preprocessing time', time.time() - t
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)?

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/hardnet/examples/caffe/convert_weights_to_caffe.py'
 outputting to 'pyslam/thirdparty/hardnet/examples/caffe/convert_weights_to_caffe.py'
--------------------------------------------------------------------------------

ERROR: Failed to parse.
Traceback (most recent call last):
  File "/home/arion/.local/lib/python3.10/site-packages/tensorflow/tools/compatibility/ast_edits.py", line 933, in update_string_pasta
    t = pasta.parse(text)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/__init__.py", line 23, in parse
    t = ast_utils.parse(src)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/base/ast_utils.py", line 56, in parse
    tree = ast.parse(sanitize_source(src))
  File "/usr/lib/python3.10/ast.py", line 50, in parse
    return compile(source, filename, mode, flags,
  File "<unknown>", line 97
    print l_name,  m.weight.data.cpu().numpy().shape;
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)?

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/hardnet/code/HardNetHPatchesSplits.py'
 outputting to 'pyslam/thirdparty/hardnet/code/HardNetHPatchesSplits.py'
--------------------------------------------------------------------------------

549:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/hardnet/code/HardNet.py'
 outputting to 'pyslam/thirdparty/hardnet/code/HardNet.py'
--------------------------------------------------------------------------------

451:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/hardnet/code/W1BS.py'
 outputting to 'pyslam/thirdparty/hardnet/code/W1BS.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/hardnet/code/Losses.py'
 outputting to 'pyslam/thirdparty/hardnet/code/Losses.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/hardnet/code/check_gor_triplet.py'
 outputting to 'pyslam/thirdparty/hardnet/code/check_gor_triplet.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/hardnet/code/HardNetClassicalHardNegMiningSiftInit.py'
 outputting to 'pyslam/thirdparty/hardnet/code/HardNetClassicalHardNegMiningSiftInit.py'
--------------------------------------------------------------------------------

485:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
596:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
600:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
609:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
613:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/hardnet/code/EvalMetrics.py'
 outputting to 'pyslam/thirdparty/hardnet/code/EvalMetrics.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/hardnet/code/HardNetMultipleDatasets.py'
 outputting to 'pyslam/thirdparty/hardnet/code/HardNetMultipleDatasets.py'
--------------------------------------------------------------------------------

546:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/hardnet/code/check_gor_HardNet.py'
 outputting to 'pyslam/thirdparty/hardnet/code/check_gor_HardNet.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/hardnet/code/dataset.py'
 outputting to 'pyslam/thirdparty/hardnet/code/dataset.py'
--------------------------------------------------------------------------------

191:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/hardnet/code/Loggers.py'
 outputting to 'pyslam/thirdparty/hardnet/code/Loggers.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/hardnet/code/Utils.py'
 outputting to 'pyslam/thirdparty/hardnet/code/Utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/hardnet/code/HardNetClassicalHardNegMining.py'
 outputting to 'pyslam/thirdparty/hardnet/code/HardNetClassicalHardNegMining.py'
--------------------------------------------------------------------------------

ERROR: Failed to parse.
Traceback (most recent call last):
  File "/home/arion/.local/lib/python3.10/site-packages/tensorflow/tools/compatibility/ast_edits.py", line 933, in update_string_pasta
    t = pasta.parse(text)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/__init__.py", line 23, in parse
    t = ast_utils.parse(src)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/base/ast_utils.py", line 56, in parse
    tree = ast.parse(sanitize_source(src))
  File "/usr/lib/python3.10/ast.py", line 50, in parse
    return compile(source, filename, mode, flags,
  File "<unknown>", line 1
    ﻿#!/usr/bin/python2 -utt
    ^
SyntaxError: invalid non-printable character U+FEFF

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/hardnet/code/download_all_datasets.py'
 outputting to 'pyslam/thirdparty/hardnet/code/download_all_datasets.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/hardnet/code/dataloaders/TotalDataLoader.py'
 outputting to 'pyslam/thirdparty/hardnet/code/dataloaders/TotalDataLoader.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/hardnet/code/dataloaders/HPatchesDatasetCreator.py'
 outputting to 'pyslam/thirdparty/hardnet/code/dataloaders/HPatchesDatasetCreator.py'
--------------------------------------------------------------------------------

ERROR: Failed to parse.
Traceback (most recent call last):
  File "/home/arion/.local/lib/python3.10/site-packages/tensorflow/tools/compatibility/ast_edits.py", line 933, in update_string_pasta
    t = pasta.parse(text)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/__init__.py", line 23, in parse
    t = ast_utils.parse(src)
  File "/home/arion/.local/lib/python3.10/site-packages/pasta/base/ast_utils.py", line 56, in parse
    tree = ast.parse(sanitize_source(src))
  File "/usr/lib/python3.10/ast.py", line 50, in parse
    return compile(source, filename, mode, flags,
  File "<unknown>", line 50
    print counter
    ^^^^^^^^^^^^^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)?

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/hardnet/code/dataloaders/__init__.py'
 outputting to 'pyslam/thirdparty/hardnet/code/dataloaders/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/hardnet/benchmarks/hpatches_extract_HardNet.py'
 outputting to 'pyslam/thirdparty/hardnet/benchmarks/hpatches_extract_HardNet.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/SOSNet/codes/sosnet_example.py'
 outputting to 'pyslam/thirdparty/SOSNet/codes/sosnet_example.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/SOSNet/codes/sosnet_model.py'
 outputting to 'pyslam/thirdparty/SOSNet/codes/sosnet_model.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/keynet/train_network.py'
 outputting to 'pyslam/thirdparty/keynet/train_network.py'
--------------------------------------------------------------------------------

146:4: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
246:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

246:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
253:32: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
254:32: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
255:32: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
256:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
257:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
258:30: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
259:34: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
260:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
262:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

262:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
278:21: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

281:25: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

289:22: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
291:13: INFO: tf.train.exponential_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

291:13: INFO: Renamed 'tf.train.exponential_decay' to 'tf.compat.v1.train.exponential_decay'
298:20: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
313:12: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
313:12: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
314:12: INFO: tf.losses.add_loss requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
314:12: INFO: Renamed 'tf.losses.add_loss' to 'tf.compat.v1.losses.add_loss'
317:21: INFO: tf.losses.get_total_loss requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
317:21: INFO: Renamed 'tf.losses.get_total_loss' to 'tf.compat.v1.losses.get_total_loss'
318:19: ERROR: Using member tf.contrib.training.create_train_op in deprecated module tf.contrib. tf.contrib.training.create_train_op cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
319:25: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
319:25: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
324:35: ERROR: Using member tf.contrib.framework.get_variables_to_restore in deprecated module tf.contrib. tf.contrib.framework.get_variables_to_restore cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
326:49: ERROR: Using member tf.contrib.framework.assign_from_checkpoint in deprecated module tf.contrib. tf.contrib.framework.assign_from_checkpoint cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
330:17: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
333:13: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
338:21: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
340:20: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
341:25: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
344:31: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
344:31: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
360:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
375:24: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/keynet/hsequeces_bench.py'
 outputting to 'pyslam/thirdparty/keynet/hsequeces_bench.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/keynet/extract_multiscale_features.py'
 outputting to 'pyslam/thirdparty/keynet/extract_multiscale_features.py'
--------------------------------------------------------------------------------

110:4: INFO: Renamed 'tf.logging.set_verbosity' to 'tf.compat.v1.logging.set_verbosity'
110:29: INFO: Renamed 'tf.logging.ERROR' to 'tf.compat.v1.logging.ERROR'
229:8: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
231:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

231:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
236:28: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
237:30: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
238:25: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
239:25: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
240:25: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
241:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
243:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

243:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
260:33: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
263:53: ERROR: Using member tf.contrib.framework.assign_from_checkpoint in deprecated module tf.contrib. tf.contrib.framework.assign_from_checkpoint cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
277:17: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
281:13: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
282:21: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
305:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
308:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/keynet/HSequences_bench/tools/opencv_matcher.py'
 outputting to 'pyslam/thirdparty/keynet/HSequences_bench/tools/opencv_matcher.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/keynet/HSequences_bench/tools/HSequences_reader.py'
 outputting to 'pyslam/thirdparty/keynet/HSequences_bench/tools/HSequences_reader.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/keynet/HSequences_bench/tools/geometry_tools.py'
 outputting to 'pyslam/thirdparty/keynet/HSequences_bench/tools/geometry_tools.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/keynet/HSequences_bench/tools/aux_tools.py'
 outputting to 'pyslam/thirdparty/keynet/HSequences_bench/tools/aux_tools.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/keynet/HSequences_bench/tools/matching_tools.py'
 outputting to 'pyslam/thirdparty/keynet/HSequences_bench/tools/matching_tools.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/keynet/HSequences_bench/tools/repeatability_tools.py'
 outputting to 'pyslam/thirdparty/keynet/HSequences_bench/tools/repeatability_tools.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/keynet/keyNet/loss/score_loss_function.py'
 outputting to 'pyslam/thirdparty/keynet/keyNet/loss/score_loss_function.py'
--------------------------------------------------------------------------------

10:19: INFO: Added keywords to args of function 'tf.shape'
12:14: INFO: Added keywords to args of function 'tf.nn.max_pool'
12:14: INFO: Renamed keyword argument for tf.nn.max_pool from value to input
12:14: INFO: Renamed 'tf.nn.max_pool' to 'tf.nn.max_pool2d'
18:49: INFO: Renamed 'tf.div' to 'tf.compat.v1.div'
20:20: INFO: Added keywords to args of function 'tf.nn.conv2d'
20:20: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
22:18: INFO: Added keywords to args of function 'tf.nn.conv2d'
22:18: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
26:18: INFO: Added keywords to args of function 'tf.reduce_max'
37:19: INFO: Added keywords to args of function 'tf.shape'
39:14: INFO: Added keywords to args of function 'tf.nn.max_pool'
39:14: INFO: Renamed keyword argument for tf.nn.max_pool from value to input
39:14: INFO: Renamed 'tf.nn.max_pool' to 'tf.nn.max_pool2d'
45:49: INFO: Renamed 'tf.div' to 'tf.compat.v1.div'
47:20: INFO: Added keywords to args of function 'tf.nn.conv2d'
47:20: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
49:23: INFO: Added keywords to args of function 'tf.nn.conv2d'
49:23: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
58:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
59:22: INFO: Added keywords to args of function 'tf.shape'
62:26: INFO: Added keywords to args of function 'tf.reduce_prod'
92:20: INFO: Added keywords to args of function 'tf.nn.conv2d'
92:20: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
94:23: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
94:41: INFO: Added keywords to args of function 'tf.shape'
95:20: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
102:14: INFO: Added keywords to args of function 'tf.reduce_sum'
104:11: INFO: Added keywords to args of function 'tf.reduce_mean'
111:4: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
119:22: INFO: Added keywords to args of function 'tf.shape'
126:22: WARNING: tf.contrib.image.transform requires manual check. (Manual edit required) `tf.contrib.image.transform` has been migrated to `tfa.image.transform` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
126:22: ERROR: Using member tf.contrib.image.transform in deprecated module tf.contrib. tf.contrib.image.transform cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
127:20: WARNING: tf.contrib.image.transform requires manual check. (Manual edit required) `tf.contrib.image.transform` has been migrated to `tfa.image.transform` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
127:20: ERROR: Using member tf.contrib.image.transform in deprecated module tf.contrib. tf.contrib.image.transform cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
128:22: WARNING: tf.contrib.image.transform requires manual check. (Manual edit required) `tf.contrib.image.transform` has been migrated to `tfa.image.transform` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
128:22: ERROR: Using member tf.contrib.image.transform in deprecated module tf.contrib. tf.contrib.image.transform cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
129:23: WARNING: tf.contrib.image.transform requires manual check. (Manual edit required) `tf.contrib.image.transform` has been migrated to `tfa.image.transform` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
129:23: ERROR: Using member tf.contrib.image.transform in deprecated module tf.contrib. tf.contrib.image.transform cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
130:23: WARNING: tf.contrib.image.transform requires manual check. (Manual edit required) `tf.contrib.image.transform` has been migrated to `tfa.image.transform` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
130:23: ERROR: Using member tf.contrib.image.transform in deprecated module tf.contrib. tf.contrib.image.transform cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
160:16: INFO: Added keywords to args of function 'tf.shape'
162:22: INFO: Renamed 'tf.layers.flatten' to 'tf.compat.v1.layers.flatten'
163:22: INFO: Renamed 'tf.layers.flatten' to 'tf.compat.v1.layers.flatten'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/keynet/keyNet/model/keynet_architecture.py'
 outputting to 'pyslam/thirdparty/keynet/keyNet/model/keynet_architecture.py'
--------------------------------------------------------------------------------

8:4: INFO: Not upgrading symbols because `tensorflow.compat.v1` was directly imported as `tf`.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/keynet/keyNet/model/hardnet_pytorch.py'
 outputting to 'pyslam/thirdparty/keynet/keyNet/model/hardnet_pytorch.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/keynet/keyNet/datasets/dataset_utils.py'
 outputting to 'pyslam/thirdparty/keynet/keyNet/datasets/dataset_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/keynet/keyNet/datasets/tf_dataset.py'
 outputting to 'pyslam/thirdparty/keynet/keyNet/datasets/tf_dataset.py'
--------------------------------------------------------------------------------

21:8: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
45:24: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
46:24: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
47:32: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
48:32: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
77:17: INFO: Renamed 'tf.python_io.tf_record_iterator' to 'tf.compat.v1.python_io.tf_record_iterator'
81:17: INFO: Renamed 'tf.python_io.tf_record_iterator' to 'tf.compat.v1.python_io.tf_record_iterator'
86:15: INFO: Added keywords to args of function 'tf.parse_single_example'
86:15: INFO: Renamed 'tf.parse_single_example' to 'tf.io.parse_single_example'
95:19: INFO: Added keywords to args of function 'tf.parse_single_example'
95:19: INFO: Renamed 'tf.parse_single_example' to 'tf.io.parse_single_example'
97:23: INFO: Renamed 'tf.decode_raw' to 'tf.io.decode_raw'
100:23: INFO: Renamed 'tf.decode_raw' to 'tf.io.decode_raw'
103:31: INFO: Renamed 'tf.decode_raw' to 'tf.io.decode_raw'
106:31: INFO: Renamed 'tf.decode_raw' to 'tf.io.decode_raw'
152:21: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
154:21: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/keynet/keyNet/aux/tools.py'
 outputting to 'pyslam/thirdparty/keynet/keyNet/aux/tools.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/keynet/keyNet/aux/desc_aux_function.py'
 outputting to 'pyslam/thirdparty/keynet/keyNet/aux/desc_aux_function.py'
--------------------------------------------------------------------------------

4:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

4:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
11:24: INFO: Added keywords to args of function 'tf.transpose'
38:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

38:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
40:20: INFO: Added keywords to args of function 'tf.shape'
41:17: INFO: Added keywords to args of function 'tf.shape'
42:16: INFO: Added keywords to args of function 'tf.shape'
43:12: INFO: Added keywords to args of function 'tf.shape'
44:17: INFO: Added keywords to args of function 'tf.shape'
46:24: INFO: Added keywords to args of function 'tf.shape'
47:24: INFO: Added keywords to args of function 'tf.shape'
145:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

145:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/logpolar/example.py'
 outputting to 'pyslam/thirdparty/logpolar/example.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/logpolar/configs/defaults.py'
 outputting to 'pyslam/thirdparty/logpolar/configs/defaults.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/logpolar/configs/__init__.py'
 outputting to 'pyslam/thirdparty/logpolar/configs/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/logpolar/baselines/__init__.py'
 outputting to 'pyslam/thirdparty/logpolar/baselines/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/logpolar/baselines/matching/__init__.py'
 outputting to 'pyslam/thirdparty/logpolar/baselines/matching/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/logpolar/baselines/matching/amos/amos_other_baselines.py'
 outputting to 'pyslam/thirdparty/logpolar/baselines/matching/amos/amos_other_baselines.py'
--------------------------------------------------------------------------------

320:22: INFO: Renamed 'tf.GPUOptions' to 'tf.compat.v1.GPUOptions'
323:16: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
324:34: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/logpolar/baselines/matching/amos/__init__.py'
 outputting to 'pyslam/thirdparty/logpolar/baselines/matching/amos/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/logpolar/baselines/matching/amos/amos.py'
 outputting to 'pyslam/thirdparty/logpolar/baselines/matching/amos/amos.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/logpolar/baselines/matching/utils/LAFs.py'
 outputting to 'pyslam/thirdparty/logpolar/baselines/matching/utils/LAFs.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/logpolar/baselines/matching/utils/metrics.py'
 outputting to 'pyslam/thirdparty/logpolar/baselines/matching/utils/metrics.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/logpolar/baselines/matching/utils/__init__.py'
 outputting to 'pyslam/thirdparty/logpolar/baselines/matching/utils/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/logpolar/baselines/matching/hpatches/hpatches_sequences_ranking.py'
 outputting to 'pyslam/thirdparty/logpolar/baselines/matching/hpatches/hpatches_sequences_ranking.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/logpolar/baselines/matching/hpatches/__init__.py'
 outputting to 'pyslam/thirdparty/logpolar/baselines/matching/hpatches/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/logpolar/baselines/matching/hpatches/hpatches_sequences_ranking_other_baselines.py'
 outputting to 'pyslam/thirdparty/logpolar/baselines/matching/hpatches/hpatches_sequences_ranking_other_baselines.py'
--------------------------------------------------------------------------------

317:22: INFO: Renamed 'tf.GPUOptions' to 'tf.compat.v1.GPUOptions'
320:16: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
320:47: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/logpolar/baselines/geodesc/image_matching_utils.py'
 outputting to 'pyslam/thirdparty/logpolar/baselines/geodesc/image_matching_utils.py'
--------------------------------------------------------------------------------

18:0: INFO: Renamed 'tf.reset_default_graph' to 'tf.compat.v1.reset_default_graph'
81:4: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/logpolar/baselines/geodesc/__init__.py'
 outputting to 'pyslam/thirdparty/logpolar/baselines/geodesc/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/logpolar/utils/__init__.py'
 outputting to 'pyslam/thirdparty/logpolar/utils/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/logpolar/utils/utils.py'
 outputting to 'pyslam/thirdparty/logpolar/utils/utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/logpolar/modules/__init__.py'
 outputting to 'pyslam/thirdparty/logpolar/modules/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/logpolar/modules/ptn/__init__.py'
 outputting to 'pyslam/thirdparty/logpolar/modules/ptn/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/logpolar/modules/ptn/pytorch/models.py'
 outputting to 'pyslam/thirdparty/logpolar/modules/ptn/pytorch/models.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/logpolar/modules/ptn/pytorch/data.py'
 outputting to 'pyslam/thirdparty/logpolar/modules/ptn/pytorch/data.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/logpolar/modules/ptn/pytorch/__init__.py'
 outputting to 'pyslam/thirdparty/logpolar/modules/ptn/pytorch/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/logpolar/modules/hardnet/eval_metrics.py'
 outputting to 'pyslam/thirdparty/logpolar/modules/hardnet/eval_metrics.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/logpolar/modules/hardnet/models.py'
 outputting to 'pyslam/thirdparty/logpolar/modules/hardnet/models.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/logpolar/modules/hardnet/__init__.py'
 outputting to 'pyslam/thirdparty/logpolar/modules/hardnet/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/logpolar/modules/hardnet/hardnet.py'
 outputting to 'pyslam/thirdparty/logpolar/modules/hardnet/hardnet.py'
--------------------------------------------------------------------------------

221:20: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
229:20: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
249:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
255:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/logpolar/modules/hardnet/utils.py'
 outputting to 'pyslam/thirdparty/logpolar/modules/hardnet/utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/logpolar/modules/hardnet/loggers.py'
 outputting to 'pyslam/thirdparty/logpolar/modules/hardnet/loggers.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/thirdparty/logpolar/modules/hardnet/losses.py'
 outputting to 'pyslam/thirdparty/logpolar/modules/hardnet/losses.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'pyslam_legacy/cpp/utils/test.py'
 outputting to 'pyslam/cpp/utils/test.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

